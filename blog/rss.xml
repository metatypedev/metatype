<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Metatype Blog</title>
        <link>https://metatype.dev/blog</link>
        <description>Metatype Blog</description>
        <lastBuildDate>Mon, 27 Nov 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[The Node/Deno SDK is now available]]></title>
            <link>https://metatype.dev/blog/2023/11/27/node-compatibility</link>
            <guid>https://metatype.dev/blog/2023/11/27/node-compatibility</guid>
            <pubDate>Mon, 27 Nov 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We are happy to announce that we have redesigned our SDKs to support Node/Deno and facilitate the integration of future languages. Most of the typegraph SDK is now written in Rust and shaped around a core interface running in WebAssembly.]]></description>
            <content:encoded><![CDATA[<p>We are happy to announce that we have redesigned our SDKs to support Node/Deno and facilitate the integration of future languages. Most of the <a href="https://metatype.dev/docs/reference/typegraph">typegraph SDK</a> is now written in Rust and shaped around a core interface running in WebAssembly.</p>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="meet-wit">Meet <code>wit</code><a href="https://metatype.dev/blog/2023/11/27/node-compatibility#meet-wit" class="hash-link" aria-label="Direct link to meet-wit" title="Direct link to meet-wit">​</a></h2>
<p>In the realm of WebAssembly, the <a href="https://github.com/bytecodealliance/wit-bindgen" target="_blank" rel="noopener noreferrer">wit-bindgen</a> project emerges as the most mature tool to create and maintain the language bindings for WebAssembly modules. This tool introduces WIT (WebAssembly Interface Types) as an Interface Definition Language (IDL) to describe the imports, exports, and capabilities of WebAssembly components seamlessly.</p>
<p>For example, Metatype implements the reactor pattern to handle requests as they come and delegate part of their execution in correct WASM runtime. The wit-bindgen helps there to define the interfaces between the guest (the Metatype runtime) and the host (the typegate) to ensure the correct serialization of the payloads. The <code>wit</code> definition could look like this:</p>
<div class="codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-text codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">package metatype:wit-wire;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">interface typegate-wire {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  hostcall: func(op-name: string, json: string) -&gt; result&lt;string, string&gt;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">interface mat-wire {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  record handle-req {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    op-name: string,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    in-json: string,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  handle: func(req: handle-req) -&gt; result&lt;string, string&gt;;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">world wit-wire {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  import typegate-wire;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  export mat-wire;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The <code>wit</code> file is then used to generate the bindings for the host and the guest in Rust, TypeScript, Python, and other languages. The host bindings are used in the typegate to call the WASM runtime, and the guest bindings are used in the WASM runtime to call the typegate.</p>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="install-the-v02x-series">Install the v0.2.x series<a href="https://metatype.dev/blog/2023/11/27/node-compatibility#install-the-v02x-series" class="hash-link" aria-label="Direct link to Install the v0.2.x series" title="Direct link to Install the v0.2.x series">​</a></h2>
<p>The documentation contains now examples for Node and Deno.</p>
<h3 class="anchor anchorWithStickyNavbar_fjGl" id="upgrade-with-node">Upgrade with Node<a href="https://metatype.dev/blog/2023/11/27/node-compatibility#upgrade-with-node" class="hash-link" aria-label="Direct link to Upgrade with Node" title="Direct link to Upgrade with Node">​</a></h3>
<div class="language-bash codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-bash codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">npm install @typegraph/sdk</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">meta new --template node .</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_fjGl" id="upgrade-with-deno">Upgrade with Deno<a href="https://metatype.dev/blog/2023/11/27/node-compatibility#upgrade-with-deno" class="hash-link" aria-label="Direct link to Upgrade with Deno" title="Direct link to Upgrade with Deno">​</a></h3>
<div class="language-bash codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-bash codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">meta new --template deno .</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-typescript codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-typescript codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> typegraph </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"npm:@typegraph/sdk/index.js"</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_fjGl" id="upgrade-with-python">Upgrade with Python<a href="https://metatype.dev/blog/2023/11/27/node-compatibility#upgrade-with-python" class="hash-link" aria-label="Direct link to Upgrade with Python" title="Direct link to Upgrade with Python">​</a></h3>
<div class="language-python codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-python codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">pip3 install </span><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">upgrade typegraph</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">poetry add typegraph@latest</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="give-us-feedback">Give us feedback!<a href="https://metatype.dev/blog/2023/11/27/node-compatibility#give-us-feedback" class="hash-link" aria-label="Direct link to Give us feedback!" title="Direct link to Give us feedback!">​</a></h2>
<p>This new release enables us to provide a consistent experience across all languages and reduce the work to maintain the existing Python SDK.</p>
<p>As always, report issues and let us know what you think on <a href="https://github.com/metatypedev/metatype/discussions" target="_blank" rel="noopener noreferrer">GitHub</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Programmable glue for developers]]></title>
            <link>https://metatype.dev/blog/2023/06/18/programmable-glue</link>
            <guid>https://metatype.dev/blog/2023/06/18/programmable-glue</guid>
            <pubDate>Sun, 18 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[We are introducing Metatype, a new project that allows developers to build modular and strongly typed APIs using typegraph as a programmable glue.]]></description>
            <content:encoded><![CDATA[<p>We are introducing Metatype, a new project that allows developers to build modular and strongly typed APIs using typegraph as a programmable glue.</p>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="what-is-metatype">What is Metatype?<a href="https://metatype.dev/blog/2023/06/18/programmable-glue#what-is-metatype" class="hash-link" aria-label="Direct link to What is Metatype?" title="Direct link to What is Metatype?">​</a></h2>
<p>Metatype is an open source platform to author and deploy APIs for the cloud and components eras. It provides a declarative programming model that helps you to efficiently design APIs and focus on the functional requirements.</p>
<p>The runtime embraces WebAssembly (WASM) as a first-class citizen to allow you to write your business logic in the language of your choice and run it on-demand. Those "backend components" are reusable across your stacks and deployable without pipelines or containers.</p>
<p>The platform provides a set of capabilities out of the box:</p>
<ul>
<li>create/read/update/delete data in your database</li>
<li>storing files in your cloud storage</li>
<li>authenticate users with different providers or using JWTs</li>
<li>connecting to third-party/internal APIs</li>
</ul>
<p>And offers an opportunity to climb the one step higher in the abstraction ladder and drastically simplify the building of great APIs and systems!</p>
<br>
<div class="mx-auto max-w-[650px]"><p><img decoding="async" loading="lazy" src="https://metatype.dev/assets/images/evolution.drawio-6260dff95a16730963b51fa7819b9386.svg" class="img_QSfo"></p></div>
<p>Metatype is designed to be as simple as possible and horizontally scalable in existing container orchestration solution like Kubernetes. It consists of multiple parts, including:</p>
<ul>
<li><a href="https://metatype.dev/docs/reference/typegraph"><strong>Typegraph</strong></a>: a cross-language SDK to manage typegraphs - virtual graphs of types - and compose them</li>
<li><a href="https://metatype.dev/docs/reference/typegate"><strong>Typegate</strong></a>: a serverless GraphQL/REST gateway to execute queries over typegraphs</li>
<li><a href="https://metatype.dev/docs/reference/meta-cli"><strong>Meta CLI</strong></a>: a command-line tool to efficiently deploy the typegraphs on the gateway</li>
</ul>
<div class="mx-auto max-w-[400px]"><p><img decoding="async" loading="lazy" src="https://metatype.dev/assets/images/components.drawio-564f2cdd1b75f6132ff8fdfaad29a92c.svg" class="img_QSfo"></p></div>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="what-are-virtual-graphs">What are virtual graphs?<a href="https://metatype.dev/blog/2023/06/18/programmable-glue#what-are-virtual-graphs" class="hash-link" aria-label="Direct link to What are virtual graphs?" title="Direct link to What are virtual graphs?">​</a></h2>
<p>Typegraphs are a declarative way to expose all APIs, storage and business logic of your stack as a single graph. They take inspiration from domain-driven design principles and in the idea that the relation between of the data is as important as data itself, even though they might be in different locations or shapes.</p>
<div>Loading...</div>
<p>These elements can then be combined and composed together similarly on how you would compose web components to create an interface in modern frontend practices. This allows developers to build modular and strongly typed APIs using typegraph as a programmable glue.</p>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="where-does-this-belong-in-the-tech-landscape">Where does this belong in the tech landscape?<a href="https://metatype.dev/blog/2023/06/18/programmable-glue#where-does-this-belong-in-the-tech-landscape" class="hash-link" aria-label="Direct link to Where does this belong in the tech landscape?" title="Direct link to Where does this belong in the tech landscape?">​</a></h2>
<p>Before Metatype, there was a gap in the technological landscape for a solution that specifically addressed the transactional, short-lived use cases. While there were existing tools for analytical or long-running use cases, such as Trino and Temporal, there was no generic engine for handling transactional, short-lived tasks.</p>
<div class="flex justify-center mt-8 overflow-auto"><table class="table-fixed text-center" id="landscape"><tbody><tr class="border-none"><td class="border-none"></td><td><small>← individual entities</small><br>transactional</td><td><small>large data →</small><br>analytical</td></tr><tr><td><small>instantaneous ↑</small><br>short-lived</td><td class="bg-slate-100"><strong>Metatype</strong><br><small>composition engine for entities in evolving systems</small></td><td>Trino<br><small>query engine for large data from multiples sources</small></td></tr><tr><td>long-running<br><small>asynchronous ↓</small></td><td>Temporal<br><small>workflow orchestration for long-running operations</small></td><td>Spark<br><small>batch/streaming engine for large data processing</small></td></tr></tbody></table></div>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="give-it-a-try">Give it a try!<a href="https://metatype.dev/blog/2023/06/18/programmable-glue#give-it-a-try" class="hash-link" aria-label="Direct link to Give it a try!" title="Direct link to Give it a try!">​</a></h2>
<p>Let us know what you think! Metatype is open source and we welcome any feedback or contributions. The community primarily lives on <a href="https://github.com/metatypedev/metatype" target="_blank" rel="noopener noreferrer">GitHub</a>.</p>
<div class="theme-admonition theme-admonition-info admonition_DhVz alert alert--info"><div class="admonitionHeading_lz6K"><span class="admonitionIcon_mEu1"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Next steps</div><div class="admonitionContent_ahkr"><p><a href="https://metatype.dev/docs/tutorials/metatype-basics">Build your first typegraph</a> or read more about the <a href="https://metatype.dev/docs/concepts/mental-model">concepts behind Metatype</a>.</p></div></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Emulating your server nodes locally]]></title>
            <link>https://metatype.dev/blog/2023/03/15/emulating-servers</link>
            <guid>https://metatype.dev/blog/2023/03/15/emulating-servers</guid>
            <pubDate>Wed, 15 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Introducing the Embedded Typegate]]></description>
            <content:encoded><![CDATA[<div class="bg-gray-40 border-l-4 border-blue-500 p-4 my-4"><p class="text-lg font-light">Metatype is a platform which allows developers to solely focus on functional aspect of their applications by powering them with rich declarative API development tools to program and deploy in a cloud first environment. One component of Metatype is the Typegate, a serverless GraphQL/REST gateway for processing queries. This post is about how we in metatype made a dev friendly access to a typegate instance namely Embedded Typegate.</p></div>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="introducing-the-embedded-typegate">Introducing the Embedded Typegate<a href="https://metatype.dev/blog/2023/03/15/emulating-servers#introducing-the-embedded-typegate" class="hash-link" aria-label="Direct link to Introducing the Embedded Typegate" title="Direct link to Introducing the Embedded Typegate">​</a></h2>
<p>The embedded typegate is a feature that comes with the <a href="https://metatype.dev/docs/reference/meta-cli">Meta CLI</a> which provides the option of spinning a typegate instance from the CLI with minimum configurations and installations needed from the developer. All that is required to access the <em>Embedded Typegate</em> is to install <em>Meta_CLI</em>. The spawned typegate instance behaves similarly to cloud-deployed typegates.</p>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="the-motive">The motive<a href="https://metatype.dev/blog/2023/03/15/emulating-servers#the-motive" class="hash-link" aria-label="Direct link to The motive" title="Direct link to The motive">​</a></h2>
<p>There are more than a couple of reasons why a developer would be tempted to use an emedded typegate. While developers can start a typegate instance using docker compose, the developer needs to install docker as a dependency to run the typegate container. Even though docker is familiar among many developers, it can sometimes be tricky and unbeknownst to some developers. We at metatype highly value the developer experience and one reason for adding the <em>embedded typegate</em> feature to the <em>Meta_CLI</em> is for users to have a smooth experience with our system by providing a docker compose free experience.
This feature provides a great utility for developers to author and test typegraphs in their local machine before deploying them to production level typegate instances on the cloud.
Additionally, developers need not concern themselves with deployment configurations which are needed only during deployment. The only need to focus their energy and time in developing the right application and easily test them on <em>embedded typegate</em> running from the terminal. To add more to what is said, as the typegate engine keeps evolving, users will be abstracted away from the different configurations which might be added on the future. The <em>Meta_CLI</em> will abstract much of what's not needed in a dev environment. Thus, leaving less headaches to developers on new changes.
Ultimately, The <em>embedded typegate</em> is designed to be a good dev environment friendly tool which faciliates development time.</p>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="quick-first-hand-example">Quick First hand example<a href="https://metatype.dev/blog/2023/03/15/emulating-servers#quick-first-hand-example" class="hash-link" aria-label="Direct link to Quick First hand example" title="Direct link to Quick First hand example">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_fjGl" id="install-the-v03x-series">Install the v0.3.x series<a href="https://metatype.dev/blog/2023/03/15/emulating-servers#install-the-v03x-series" class="hash-link" aria-label="Direct link to Install the v0.3.x series" title="Direct link to Install the v0.3.x series">​</a></h3>
<p>Either of the two <a href="https://metatype.dev/docs/reference/typegraph">Typegraph</a> SDKs are needed to author typegraphs. For this example, the node SDK will be used.</p>
<p>First, make sure the <em>Meta_CLI</em> is installed.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">curl -fsSL https://raw.githubusercontent.com/metatypedev/metatype/main/installer.sh | bash</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, create a new node project using this command.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">meta new --template node</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The above command will create a sample typegraph which you can use to test the embedded typegate.</p>
<p>Now, you need to install the typegraph SDK by running the command down below. The previous command generates a <code>package.json</code> with the SDK specified as a dependency.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">npm install</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Before deploying the typegraph to the embedded typegate, Run the following commands below.</p>
<p>Execute this command to set <code>tg_secret</code> and <code>tg_admin_password</code> environment variables, which are neccessary for the typegate to run.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">export tg_secret=a4lNi0PbEItlFZbus1oeH/+wyIxi9uH6TpL8AIqIaMBNvp7SESmuUBbfUwC0prxhGhZqHw8vMDYZAGMhSZ4fLw== tg_admin_password=password</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Start the typegate instance.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">meta typegate</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Now that there is running instance of a typegate, you can deploy the example typegraph. From another terminal, run the command below.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">meta deploy -f api/example.ts --allow-dirty --create-migration --target dev --gate http://localhost:7890</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The typegate runs on port 7890 by default. If you access <a href="http://localhost:7890/example" target="_blank" rel="noopener noreferrer">http://localhost:7890/example</a> on your browser, you can see an GraphQL interface to interact with the deployed typegraph. You can test the example typegraph using the following graphql query below.</p>
<div class="language-graphql codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-graphql codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">query</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token property-query">multilpy</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token attr-name" style="color:#00a4db">first</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token attr-name" style="color:#00a4db">second</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h1></h1>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="upgrade-your-metatype-development-environment">Upgrade your Metatype development environment<a href="https://metatype.dev/blog/2023/03/15/emulating-servers#upgrade-your-metatype-development-environment" class="hash-link" aria-label="Direct link to Upgrade your Metatype development environment" title="Direct link to Upgrade your Metatype development environment">​</a></h2>
<p>To Upgrade the <em>Meta CLI</em> to the latest version, you can run the following command below.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">meta upgrade</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul class="pl-0 m-0 list-none text-sm"><li class="inline-block rounded-md overflow-clip my-2 mr-2"><div><label class="cursor-pointer"><input type="radio" class="hidden peer" checked="" value="typescript"><div class="px-3 py-1 bg-slate-100 peer-checked:bg-metared peer-checked:text-white">Typescript SDK</div></label></div></li><li class="inline-block rounded-md overflow-clip my-2 mr-2"><div><label class="cursor-pointer"><input type="radio" class="hidden peer" value="python"><div class="px-3 py-1 bg-slate-100 peer-checked:bg-metared peer-checked:text-white">Python SDK</div></label></div></li></ul><div role="tabpanel" class="tabItem_DBOA"><p>To upgrade the <em>Typescript</em> SDK of the typegraph package, you can use the following command.</p>
<div class="language-shell codeBlockContainer_FJ0j theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent__HQP"><pre tabindex="0" class="prism-code language-shell codeBlock_pT6U thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_SvQ5"><span class="token-line" style="color:#393A34"><span class="token plain">npm update @typegraph/sdk</span><br></span></code></pre><div class="buttonGroup_IhKN"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_JO31" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_zhOa"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_N4_T"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_fjGl" id="learn-more-about-metatype">Learn more about Metatype<a href="https://metatype.dev/blog/2023/03/15/emulating-servers#learn-more-about-metatype" class="hash-link" aria-label="Direct link to Learn more about Metatype" title="Direct link to Learn more about Metatype">​</a></h2>
<p>Wanna dive deep into the basics of <em>Metaype</em>? check our interactive <a href="https://metatype.dev/docs/tutorials/metatype-basics">tutorial</a> revolving around the core features of the system.</p>]]></content:encoded>
        </item>
    </channel>
</rss>