<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://metatype.dev/blog</id>
    <title>Metatype Blog</title>
    <updated>2023-06-18T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://metatype.dev/blog"/>
    <subtitle>Metatype Blog</subtitle>
    <icon>https://metatype.dev/images/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Introducing Metatype: programmable glue for developers]]></title>
        <id>https://metatype.dev/blog/2023/06/18/programmable-glue</id>
        <link href="https://metatype.dev/blog/2023/06/18/programmable-glue"/>
        <updated>2023-06-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[What is Metatype?]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_FD8C" id="what-is-metatype">What is Metatype?<a href="#what-is-metatype" class="hash-link" aria-label="Direct link to What is Metatype?" title="Direct link to What is Metatype?">​</a></h2><p>Metatype is an open source platform for developers to <strong>declaratively build APIs</strong>. It offers a unique approach to building backends, where the focus is all on data modelling and the platform takes care of the rest.</p><p>The intent is to find a convenient computing model that tackles the following challenges:</p><ul><li>most developers still spend too much time on tasks with low-value (crud, data validation, compliance, etc.)</li><li>when growing a product, it is hard to keep up with business needs and remain innovative with technology</li><li>managing server and infrastructure shall never be a concern for developers nor slow them down</li></ul><p>In that respect, Metatype can be seen as an alternative to Hasura, Strapi, Firebase, or even web frameworks like Django or NestJS. You can see how Metatype differs reading the <a href="/docs/concepts/overview">conceptual overview</a> or the <a href="/docs/concepts/comparisons">comparison summary</a>.</p><p>The platform consists of the following components:</p><ul><li><a href="/docs/concepts/typegraph"><strong>Typegraph</strong></a>: a package to describe typegraphs - virtual graphs of types - and compose them</li><li><a href="/docs/concepts/typegate"><strong>Typegate</strong></a>: a distributed REST/GraphQL query engine to execute queries over typegraphs</li><li><a href="/docs/concepts/meta-cli"><strong>Meta CLI</strong></a>: a command-line tool to provide great developer experience and serverless deployment</li></ul><p>A vast range of <a href="/docs/reference/runtimes">runtimes</a> is implemented by the platform and provides out of the box support for storing data in databases/S3, connecting to third-party/internal APIs and running business logic in Deno/Python/WebAssembly.</p><h2 class="anchor anchorWithStickyNavbar_FD8C" id="what-are-virtual-graphs">What are virtual graphs?<a href="#what-are-virtual-graphs" class="hash-link" aria-label="Direct link to What are virtual graphs?" title="Direct link to What are virtual graphs?">​</a></h2><p>Typegraphs are a declarative way to expose all APIs, storage and business logic of your stack as a single graph. They take inspiration from domain-driven design principles and in the idea that the relation between of the data is as important as data itself, even though they might be in different locations or shapes.</p><div>Loading...</div><p>These elements can then be combined and composed together similarly on how you would compose web components to create an interface in modern frontend practices. This allows developers to build modular and strongly typed APIs using typegraph as a programmable glue.</p><h2 class="anchor anchorWithStickyNavbar_FD8C" id="where-does-this-belong-in-the-tech-landscape">Where does this belong in the tech landscape?<a href="#where-does-this-belong-in-the-tech-landscape" class="hash-link" aria-label="Direct link to Where does this belong in the tech landscape?" title="Direct link to Where does this belong in the tech landscape?">​</a></h2><p>Before Metatype, there was a gap in the technological landscape for a solution that specifically addressed the transactional, short-lived use cases. While there were existing tools for analytical or long-running use cases, such as Trino and Temporal, there was no generic engine for handling transactional, short-lived tasks.</p><div class="flex justify-center mt-8 overflow-auto"><table class="table-fixed text-center" id="landscape"><tbody><tr class="border-none"><td class="border-none"></td><td><small>← individual level</small><br>transactional</td><td><small>large data →</small><br>analytical</td></tr><tr><td><small>instantaneous ↑</small><br>short-lived</td><td class="bg-slate-100"><strong>Metatype</strong><br><small>query engine for data entities in evolving systems</small></td><td>Trino<br><small>query engine for large data from multiples sources</small></td></tr><tr><td>long-running<br><small>asynchronous ↓</small></td><td>Temporal<br><small>workflow orchestration engine for data operations</small></td><td>Spark<br><small>batch/streaming engine for large data processing</small></td></tr></tbody></table></div><h2 class="anchor anchorWithStickyNavbar_FD8C" id="give-it-a-try">Give it a try!<a href="#give-it-a-try" class="hash-link" aria-label="Direct link to Give it a try!" title="Direct link to Give it a try!">​</a></h2><p>Let us know what you think! Metatype is open source and we welcome any feedback or contributions. The community primarily lives on <a href="https://github.com/metatypedev/metatype" target="_blank" rel="noopener noreferrer">GitHub</a>.</p><div class="theme-admonition theme-admonition-info alert alert--info admonition_eRUg"><div class="admonitionHeading_s4u0"><span class="admonitionIcon_nNCz"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>Next steps</div><div class="admonitionContent_DB3K"><p><a href="/docs/tutorials/getting-started">Build your first typegraph</a> or read more about the <a href="/docs/concepts/overview">concepts behind Metatype</a>.</p></div></div>]]></content>
    </entry>
</feed>