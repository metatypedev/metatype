export const snapshot = {};

snapshot[`typegate: find available operations 1`] = `
{
  data: {
    findAvailableOperations: [
      {
        inputs: [
          {
            name: "where",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "QueryrecordWhereUniqueInput",
              type: "object",
            },
          },
        ],
        name: "findRecord",
        output: {
          as_id: false,
          config: "{}",
          default: null,
          enum: null,
          fields: [
            {
              subPath: [
                "id",
              ],
              termNode: {
                as_id: true,
                config: '{"auto":true}',
                default: null,
                enum: null,
                format: "uuid",
                optional: false,
                runtime: "prisma",
                title: "recordWithNestedCount_id_string_uuid",
                type: "string",
              },
            },
            {
              subPath: [
                "name",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "age",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: true,
                runtime: "prisma",
                title: "_integer_filter_t0_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "createdAt",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: "date-time",
                optional: false,
                runtime: "prisma",
                title: "recordWithNestedCount_createdAt_string_datetime",
                type: "string",
              },
            },
          ],
          format: null,
          optional: true,
          runtime: "prisma",
          title: "recordWithNestedCount",
          type: "object",
        },
        outputItem: null,
      },
      {
        inputs: [
          {
            name: "where",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "QueryrecordWhereInput",
              type: "object",
            },
          },
          {
            name: "orderBy",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_record_OrderBy",
              type: "list",
            },
          },
          {
            name: "take",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_Take",
              type: "integer",
            },
          },
          {
            name: "skip",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_Skip",
              type: "integer",
            },
          },
          {
            name: "cursor",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_record_Cursor",
              type: "union",
            },
          },
          {
            name: "distinct",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_KeysOf_record",
              type: "list",
            },
          },
        ],
        name: "findManyRecords",
        output: {
          as_id: false,
          config: "{}",
          default: null,
          enum: null,
          fields: null,
          format: null,
          optional: false,
          runtime: "prisma",
          title: "root_findManyRecords_fn_output",
          type: "list",
        },
        outputItem: {
          as_id: false,
          config: "{}",
          default: null,
          enum: null,
          fields: [
            {
              subPath: [
                "id",
              ],
              termNode: {
                as_id: true,
                config: '{"auto":true}',
                default: null,
                enum: null,
                format: "uuid",
                optional: false,
                runtime: "prisma",
                title: "recordWithNestedCount_id_string_uuid",
                type: "string",
              },
            },
            {
              subPath: [
                "name",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "age",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: true,
                runtime: "prisma",
                title: "_integer_filter_t0_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "createdAt",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: "date-time",
                optional: false,
                runtime: "prisma",
                title: "recordWithNestedCount_createdAt_string_datetime",
                type: "string",
              },
            },
          ],
          format: null,
          optional: false,
          runtime: "prisma",
          title: "recordWithNestedCount",
          type: "object",
        },
      },
      {
        inputs: [
          {
            name: "where",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "QueryusersWhereUniqueInput",
              type: "object",
            },
          },
        ],
        name: "findUniqueUser",
        output: {
          as_id: false,
          config: "{}",
          default: null,
          enum: null,
          fields: [
            {
              subPath: [
                "id",
              ],
              termNode: {
                as_id: true,
                config: '{"auto":true}',
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_users_CreateInput_id_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "identities",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "usersWithNestedCount_identities_user_identityWithNestedCount_excluding___rel_user_identity_users_1_list",
                type: "list",
              },
            },
            {
              subPath: [
                "email",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "name",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "messages",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "usersWithNestedCount_messages_messagesWithNestedCount_excluding_messageSender_list",
                type: "list",
              },
            },
            {
              subPath: [
                "_count",
                "identities",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: true,
                runtime: "prisma",
                title: "_integer_filter_t0_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "_count",
                "messages",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: true,
                runtime: "prisma",
                title: "_integer_filter_t0_integer",
                type: "integer",
              },
            },
          ],
          format: null,
          optional: true,
          runtime: "prisma",
          title: "usersWithNestedCount",
          type: "object",
        },
        outputItem: null,
      },
      {
        inputs: [
          {
            name: "where",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "QuerymessagesWhereInput",
              type: "object",
            },
          },
          {
            name: "orderBy",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_messages_OrderBy",
              type: "list",
            },
          },
          {
            name: "take",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_Take",
              type: "integer",
            },
          },
          {
            name: "skip",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_Skip",
              type: "integer",
            },
          },
          {
            name: "cursor",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_messages_Cursor",
              type: "union",
            },
          },
          {
            name: "distinct",
            type: {
              as_id: false,
              config: "{}",
              default: null,
              enum: null,
              format: null,
              optional: true,
              runtime: "prisma",
              title: "_KeysOf_messages",
              type: "list",
            },
          },
        ],
        name: "findMessages",
        output: {
          as_id: false,
          config: "{}",
          default: null,
          enum: null,
          fields: null,
          format: null,
          optional: false,
          runtime: "prisma",
          title: "root_findMessages_fn_output",
          type: "list",
        },
        outputItem: {
          as_id: false,
          config: "{}",
          default: null,
          enum: null,
          fields: [
            {
              subPath: [
                "id",
              ],
              termNode: {
                as_id: true,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_messages_CreateInput_excluding_messageSender_id_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "time",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_integer_filter_t0_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "message",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "sender",
                "id",
              ],
              termNode: {
                as_id: true,
                config: '{"auto":true}',
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_users_CreateInput_id_integer",
                type: "integer",
              },
            },
            {
              subPath: [
                "sender",
                "identities",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "messagesWithNestedCount_sender_struct_identities_messagesWithNestedCount_sender_struct_identities_struct_list",
                type: "list",
              },
            },
            {
              subPath: [
                "sender",
                "email",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "sender",
                "name",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "_string_filter_t0_string",
                type: "string",
              },
            },
            {
              subPath: [
                "sender",
                "messages",
              ],
              termNode: {
                as_id: false,
                config: "{}",
                default: null,
                enum: null,
                format: null,
                optional: false,
                runtime: "prisma",
                title: "messagesWithNestedCount_sender_struct_messages_messagesWithNestedCount_sender_struct_messages_struct_list",
                type: "list",
              },
            },
          ],
          format: null,
          optional: false,
          runtime: "prisma",
          title: "messagesWithNestedCount",
          type: "object",
        },
      },
    ],
  },
}
`;
