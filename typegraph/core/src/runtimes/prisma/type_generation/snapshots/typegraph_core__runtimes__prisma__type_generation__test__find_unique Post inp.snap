---
source: typegraph/core/src/runtimes/prisma/type_generation/mod.rs
expression: tp.print(inp)
---
root: struct #111
└─ [where]: optional '_110_QueryPostWhereUniqueInput?' #110
   └─ item: struct 'QueryPostWhereUniqueInput' #109
      ├─ [AND]: optional '_107__106_QueryPostWhereUniqueInput[]?' #107
      │  └─ item: list '_106_QueryPostWhereUniqueInput[]' #106
      │     └─ item: &QueryPostWhereUniqueInput #105
      ├─ [NOT]: optional '_108_QueryPostWhereUniqueInput?' #108
      │  └─ item: &QueryPostWhereUniqueInput #105
      ├─ [OR]: optional '_107__106_QueryPostWhereUniqueInput[]?' #107
      │  └─ item: list '_106_QueryPostWhereUniqueInput[]' #106
      │     └─ item: &QueryPostWhereUniqueInput #105
      ├─ [author]: optional '_103_UserWhere__skip_58_PostWhere?' #103
      │  └─ item: struct 'UserWhere__skip_58_PostWhere' #102
      │     ├─ [id]: optional '_91__integer_filter_c?' #91
      │     │  └─ item: optional '_integer_filter_c' #36
      │     │     └─ item: union #35
      │     │        ├─ variant_0: either '_integer_filter' #33
      │     │        │  ├─ variant_0: integer #25
      │     │        │  ├─ variant_1: struct #28
      │     │        │  │  └─ [equals]: integer #25
      │     │        │  ├─ variant_2: struct #29
      │     │        │  │  └─ [not]: integer #25
      │     │        │  ├─ variant_3: struct #30
      │     │        │  │  ├─ [gt]: optional #26
      │     │        │  │  │  └─ item: integer #25
      │     │        │  │  ├─ [gte]: optional #26
      │     │        │  │  │  └─ item: integer #25
      │     │        │  │  ├─ [lt]: optional #26
      │     │        │  │  │  └─ item: integer #25
      │     │        │  │  └─ [lte]: optional #26
      │     │        │  │     └─ item: integer #25
      │     │        │  ├─ variant_4: struct #31
      │     │        │  │  └─ [in]: list #27
      │     │        │  │     └─ item: integer #25
      │     │        │  └─ variant_5: struct #32
      │     │        │     └─ [notIn]: list #27
      │     │        │        └─ item: integer #25
      │     │        └─ variant_1: struct #34
      │     │           └─ [not]: either '_integer_filter' #33
      │     │              ├─ variant_0: integer #25
      │     │              ├─ variant_1: struct #28
      │     │              │  └─ [equals]: integer #25
      │     │              ├─ variant_2: struct #29
      │     │              │  └─ [not]: integer #25
      │     │              ├─ variant_3: struct #30
      │     │              │  ├─ [gt]: optional #26
      │     │              │  │  └─ item: integer #25
      │     │              │  ├─ [gte]: optional #26
      │     │              │  │  └─ item: integer #25
      │     │              │  ├─ [lt]: optional #26
      │     │              │  │  └─ item: integer #25
      │     │              │  └─ [lte]: optional #26
      │     │              │     └─ item: integer #25
      │     │              ├─ variant_4: struct #31
      │     │              │  └─ [in]: list #27
      │     │              │     └─ item: integer #25
      │     │              └─ variant_5: struct #32
      │     │                 └─ [notIn]: list #27
      │     │                    └─ item: integer #25
      │     ├─ [name]: optional '_92__string_filter_c?' #92
      │     │  └─ item: optional '_string_filter_c' #22
      │     │     └─ item: union #21
      │     │        ├─ variant_0: union '_string_filter' #19
      │     │        │  ├─ variant_0: string #7
      │     │        │  ├─ variant_1: struct #10
      │     │        │  │  └─ [equals]: string #7
      │     │        │  ├─ variant_2: struct #11
      │     │        │  │  └─ [not]: string #7
      │     │        │  ├─ variant_3: struct #12
      │     │        │  │  └─ [in]: list #9
      │     │        │  │     └─ item: string #7
      │     │        │  ├─ variant_4: struct #13
      │     │        │  │  └─ [notIn]: list #9
      │     │        │  │     └─ item: string #7
      │     │        │  ├─ variant_5: struct #16
      │     │        │  │  ├─ [contains]: string #7
      │     │        │  │  └─ [mode]: optional #15
      │     │        │  │     └─ item: string #14 enum{ '"insensitive"' }
      │     │        │  ├─ variant_6: struct #17
      │     │        │  │  └─ [search]: string #7
      │     │        │  └─ variant_7: struct #18
      │     │        │     ├─ [endsWith]: optional #8
      │     │        │     │  └─ item: string #7
      │     │        │     └─ [startsWith]: optional #8
      │     │        │        └─ item: string #7
      │     │        └─ variant_1: struct #20
      │     │           └─ [not]: union '_string_filter' #19
      │     │              ├─ variant_0: string #7
      │     │              ├─ variant_1: struct #10
      │     │              │  └─ [equals]: string #7
      │     │              ├─ variant_2: struct #11
      │     │              │  └─ [not]: string #7
      │     │              ├─ variant_3: struct #12
      │     │              │  └─ [in]: list #9
      │     │              │     └─ item: string #7
      │     │              ├─ variant_4: struct #13
      │     │              │  └─ [notIn]: list #9
      │     │              │     └─ item: string #7
      │     │              ├─ variant_5: struct #16
      │     │              │  ├─ [contains]: string #7
      │     │              │  └─ [mode]: optional #15
      │     │              │     └─ item: string #14 enum{ '"insensitive"' }
      │     │              ├─ variant_6: struct #17
      │     │              │  └─ [search]: string #7
      │     │              └─ variant_7: struct #18
      │     │                 ├─ [endsWith]: optional #8
      │     │                 │  └─ item: string #7
      │     │                 └─ [startsWith]: optional #8
      │     │                    └─ item: string #7
      │     └─ [posts]: optional #101
      │        └─ item: union #100
      │           ├─ variant_0: struct #95
      │           │  └─ [every]: optional '_94_PostWhere?' #94
      │           │     └─ item: &PostWhere #93
      │           ├─ variant_1: struct #97
      │           │  └─ [some]: optional '_96_PostWhere?' #96
      │           │     └─ item: &PostWhere #93
      │           └─ variant_2: struct #99
      │              └─ [none]: optional '_98_PostWhere?' #98
      │                 └─ item: &PostWhere #93
      ├─ [id]: optional '_89__integer_filter_c?' #89
      │  └─ item: optional '_integer_filter_c' #36
      │     └─ item: union #35
      │        ├─ variant_0: either '_integer_filter' #33
      │        │  ├─ variant_0: integer #25
      │        │  ├─ variant_1: struct #28
      │        │  │  └─ [equals]: integer #25
      │        │  ├─ variant_2: struct #29
      │        │  │  └─ [not]: integer #25
      │        │  ├─ variant_3: struct #30
      │        │  │  ├─ [gt]: optional #26
      │        │  │  │  └─ item: integer #25
      │        │  │  ├─ [gte]: optional #26
      │        │  │  │  └─ item: integer #25
      │        │  │  ├─ [lt]: optional #26
      │        │  │  │  └─ item: integer #25
      │        │  │  └─ [lte]: optional #26
      │        │  │     └─ item: integer #25
      │        │  ├─ variant_4: struct #31
      │        │  │  └─ [in]: list #27
      │        │  │     └─ item: integer #25
      │        │  └─ variant_5: struct #32
      │        │     └─ [notIn]: list #27
      │        │        └─ item: integer #25
      │        └─ variant_1: struct #34
      │           └─ [not]: either '_integer_filter' #33
      │              ├─ variant_0: integer #25
      │              ├─ variant_1: struct #28
      │              │  └─ [equals]: integer #25
      │              ├─ variant_2: struct #29
      │              │  └─ [not]: integer #25
      │              ├─ variant_3: struct #30
      │              │  ├─ [gt]: optional #26
      │              │  │  └─ item: integer #25
      │              │  ├─ [gte]: optional #26
      │              │  │  └─ item: integer #25
      │              │  ├─ [lt]: optional #26
      │              │  │  └─ item: integer #25
      │              │  └─ [lte]: optional #26
      │              │     └─ item: integer #25
      │              ├─ variant_4: struct #31
      │              │  └─ [in]: list #27
      │              │     └─ item: integer #25
      │              └─ variant_5: struct #32
      │                 └─ [notIn]: list #27
      │                    └─ item: integer #25
      └─ [title]: optional '_90__string_filter_c?' #90
         └─ item: optional '_string_filter_c' #22
            └─ item: union #21
               ├─ variant_0: union '_string_filter' #19
               │  ├─ variant_0: string #7
               │  ├─ variant_1: struct #10
               │  │  └─ [equals]: string #7
               │  ├─ variant_2: struct #11
               │  │  └─ [not]: string #7
               │  ├─ variant_3: struct #12
               │  │  └─ [in]: list #9
               │  │     └─ item: string #7
               │  ├─ variant_4: struct #13
               │  │  └─ [notIn]: list #9
               │  │     └─ item: string #7
               │  ├─ variant_5: struct #16
               │  │  ├─ [contains]: string #7
               │  │  └─ [mode]: optional #15
               │  │     └─ item: string #14 enum{ '"insensitive"' }
               │  ├─ variant_6: struct #17
               │  │  └─ [search]: string #7
               │  └─ variant_7: struct #18
               │     ├─ [endsWith]: optional #8
               │     │  └─ item: string #7
               │     └─ [startsWith]: optional #8
               │        └─ item: string #7
               └─ variant_1: struct #20
                  └─ [not]: union '_string_filter' #19
                     ├─ variant_0: string #7
                     ├─ variant_1: struct #10
                     │  └─ [equals]: string #7
                     ├─ variant_2: struct #11
                     │  └─ [not]: string #7
                     ├─ variant_3: struct #12
                     │  └─ [in]: list #9
                     │     └─ item: string #7
                     ├─ variant_4: struct #13
                     │  └─ [notIn]: list #9
                     │     └─ item: string #7
                     ├─ variant_5: struct #16
                     │  ├─ [contains]: string #7
                     │  └─ [mode]: optional #15
                     │     └─ item: string #14 enum{ '"insensitive"' }
                     ├─ variant_6: struct #17
                     │  └─ [search]: string #7
                     └─ variant_7: struct #18
                        ├─ [endsWith]: optional #8
                        │  └─ item: string #7
                        └─ [startsWith]: optional #8
                           └─ item: string #7

