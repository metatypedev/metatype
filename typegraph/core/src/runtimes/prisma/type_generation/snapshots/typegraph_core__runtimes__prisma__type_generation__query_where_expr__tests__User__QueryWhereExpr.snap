---
source: typegraph/core/src/runtimes/prisma/type_generation/query_where_expr.rs
expression: "tree::print(user_where_expr)"
---
root: struct 'QueryUserWhereInput' #57
├─ [id]: optional '_21__integer_filter_c?' #21
│  └─ item: optional '_integer_filter_c' #20
│     └─ item: union #19
│        ├─ variant_0: either '_integer_filter' #17
│        │  ├─ variant_0: integer #9
│        │  ├─ variant_1: struct #12
│        │  │  └─ [equals]: integer #9
│        │  ├─ variant_2: struct #13
│        │  │  └─ [not]: integer #9
│        │  ├─ variant_3: struct #14
│        │  │  ├─ [lt]: optional #10
│        │  │  │  └─ item: integer #9
│        │  │  ├─ [gt]: optional #10
│        │  │  │  └─ item: integer #9
│        │  │  ├─ [lte]: optional #10
│        │  │  │  └─ item: integer #9
│        │  │  └─ [gte]: optional #10
│        │  │     └─ item: integer #9
│        │  ├─ variant_4: struct #15
│        │  │  └─ [in]: array #11
│        │  │     └─ item: integer #9
│        │  └─ variant_5: struct #16
│        │     └─ [notIn]: array #11
│        │        └─ item: integer #9
│        └─ variant_1: struct #18
│           └─ [not]: either '_integer_filter' #17
│              ├─ variant_0: integer #9
│              ├─ variant_1: struct #12
│              │  └─ [equals]: integer #9
│              ├─ variant_2: struct #13
│              │  └─ [not]: integer #9
│              ├─ variant_3: struct #14
│              │  ├─ [lt]: optional #10
│              │  │  └─ item: integer #9
│              │  ├─ [gt]: optional #10
│              │  │  └─ item: integer #9
│              │  ├─ [lte]: optional #10
│              │  │  └─ item: integer #9
│              │  └─ [gte]: optional #10
│              │     └─ item: integer #9
│              ├─ variant_4: struct #15
│              │  └─ [in]: array #11
│              │     └─ item: integer #9
│              └─ variant_5: struct #16
│                 └─ [notIn]: array #11
│                    └─ item: integer #9
├─ [name]: optional '_38__string_filter_c?' #38
│  └─ item: optional '_string_filter_c' #37
│     └─ item: union #36
│        ├─ variant_0: union '_string_filter' #34
│        │  ├─ variant_0: string #22
│        │  ├─ variant_1: struct #25
│        │  │  └─ [equals]: string #22
│        │  ├─ variant_2: struct #26
│        │  │  └─ [not]: string #22
│        │  ├─ variant_3: struct #27
│        │  │  └─ [in]: array #24
│        │  │     └─ item: string #22
│        │  ├─ variant_4: struct #28
│        │  │  └─ [notIn]: array #24
│        │  │     └─ item: string #22
│        │  ├─ variant_5: struct #31
│        │  │  ├─ [contains]: string #22
│        │  │  └─ [mode]: optional #30
│        │  │     └─ item: string #29 enum{ '"insensitive"' }
│        │  ├─ variant_6: struct #32
│        │  │  └─ [search]: string #22
│        │  └─ variant_7: struct #33
│        │     ├─ [startsWith]: optional #23
│        │     │  └─ item: string #22
│        │     └─ [endsWith]: optional #23
│        │        └─ item: string #22
│        └─ variant_1: struct #35
│           └─ [not]: union '_string_filter' #34
│              ├─ variant_0: string #22
│              ├─ variant_1: struct #25
│              │  └─ [equals]: string #22
│              ├─ variant_2: struct #26
│              │  └─ [not]: string #22
│              ├─ variant_3: struct #27
│              │  └─ [in]: array #24
│              │     └─ item: string #22
│              ├─ variant_4: struct #28
│              │  └─ [notIn]: array #24
│              │     └─ item: string #22
│              ├─ variant_5: struct #31
│              │  ├─ [contains]: string #22
│              │  └─ [mode]: optional #30
│              │     └─ item: string #29 enum{ '"insensitive"' }
│              ├─ variant_6: struct #32
│              │  └─ [search]: string #22
│              └─ variant_7: struct #33
│                 ├─ [startsWith]: optional #23
│                 │  └─ item: string #22
│                 └─ [endsWith]: optional #23
│                    └─ item: string #22
├─ [posts]: optional #51
│  └─ item: union #50
│     ├─ variant_0: struct #45
│     │  └─ [every]: optional '_44_PostWhere__skip_4_UserWhere?' #44
│     │     └─ item: struct 'PostWhere__skip_4_UserWhere' #43
│     │        ├─ [id]: optional '_39__integer_filter_c?' #39
│     │        │  └─ item: optional '_integer_filter_c' #20
│     │        │     └─ item: union #19
│     │        │        ├─ variant_0: either '_integer_filter' #17
│     │        │        │  ├─ variant_0: integer #9
│     │        │        │  ├─ variant_1: struct #12
│     │        │        │  │  └─ [equals]: integer #9
│     │        │        │  ├─ variant_2: struct #13
│     │        │        │  │  └─ [not]: integer #9
│     │        │        │  ├─ variant_3: struct #14
│     │        │        │  │  ├─ [lt]: optional #10
│     │        │        │  │  │  └─ item: integer #9
│     │        │        │  │  ├─ [gt]: optional #10
│     │        │        │  │  │  └─ item: integer #9
│     │        │        │  │  ├─ [lte]: optional #10
│     │        │        │  │  │  └─ item: integer #9
│     │        │        │  │  └─ [gte]: optional #10
│     │        │        │  │     └─ item: integer #9
│     │        │        │  ├─ variant_4: struct #15
│     │        │        │  │  └─ [in]: array #11
│     │        │        │  │     └─ item: integer #9
│     │        │        │  └─ variant_5: struct #16
│     │        │        │     └─ [notIn]: array #11
│     │        │        │        └─ item: integer #9
│     │        │        └─ variant_1: struct #18
│     │        │           └─ [not]: either '_integer_filter' #17
│     │        │              ├─ variant_0: integer #9
│     │        │              ├─ variant_1: struct #12
│     │        │              │  └─ [equals]: integer #9
│     │        │              ├─ variant_2: struct #13
│     │        │              │  └─ [not]: integer #9
│     │        │              ├─ variant_3: struct #14
│     │        │              │  ├─ [lt]: optional #10
│     │        │              │  │  └─ item: integer #9
│     │        │              │  ├─ [gt]: optional #10
│     │        │              │  │  └─ item: integer #9
│     │        │              │  ├─ [lte]: optional #10
│     │        │              │  │  └─ item: integer #9
│     │        │              │  └─ [gte]: optional #10
│     │        │              │     └─ item: integer #9
│     │        │              ├─ variant_4: struct #15
│     │        │              │  └─ [in]: array #11
│     │        │              │     └─ item: integer #9
│     │        │              └─ variant_5: struct #16
│     │        │                 └─ [notIn]: array #11
│     │        │                    └─ item: integer #9
│     │        ├─ [title]: optional '_40__string_filter_c?' #40
│     │        │  └─ item: optional '_string_filter_c' #37
│     │        │     └─ item: union #36
│     │        │        ├─ variant_0: union '_string_filter' #34
│     │        │        │  ├─ variant_0: string #22
│     │        │        │  ├─ variant_1: struct #25
│     │        │        │  │  └─ [equals]: string #22
│     │        │        │  ├─ variant_2: struct #26
│     │        │        │  │  └─ [not]: string #22
│     │        │        │  ├─ variant_3: struct #27
│     │        │        │  │  └─ [in]: array #24
│     │        │        │  │     └─ item: string #22
│     │        │        │  ├─ variant_4: struct #28
│     │        │        │  │  └─ [notIn]: array #24
│     │        │        │  │     └─ item: string #22
│     │        │        │  ├─ variant_5: struct #31
│     │        │        │  │  ├─ [contains]: string #22
│     │        │        │  │  └─ [mode]: optional #30
│     │        │        │  │     └─ item: string #29 enum{ '"insensitive"' }
│     │        │        │  ├─ variant_6: struct #32
│     │        │        │  │  └─ [search]: string #22
│     │        │        │  └─ variant_7: struct #33
│     │        │        │     ├─ [startsWith]: optional #23
│     │        │        │     │  └─ item: string #22
│     │        │        │     └─ [endsWith]: optional #23
│     │        │        │        └─ item: string #22
│     │        │        └─ variant_1: struct #35
│     │        │           └─ [not]: union '_string_filter' #34
│     │        │              ├─ variant_0: string #22
│     │        │              ├─ variant_1: struct #25
│     │        │              │  └─ [equals]: string #22
│     │        │              ├─ variant_2: struct #26
│     │        │              │  └─ [not]: string #22
│     │        │              ├─ variant_3: struct #27
│     │        │              │  └─ [in]: array #24
│     │        │              │     └─ item: string #22
│     │        │              ├─ variant_4: struct #28
│     │        │              │  └─ [notIn]: array #24
│     │        │              │     └─ item: string #22
│     │        │              ├─ variant_5: struct #31
│     │        │              │  ├─ [contains]: string #22
│     │        │              │  └─ [mode]: optional #30
│     │        │              │     └─ item: string #29 enum{ '"insensitive"' }
│     │        │              ├─ variant_6: struct #32
│     │        │              │  └─ [search]: string #22
│     │        │              └─ variant_7: struct #33
│     │        │                 ├─ [startsWith]: optional #23
│     │        │                 │  └─ item: string #22
│     │        │                 └─ [endsWith]: optional #23
│     │        │                    └─ item: string #22
│     │        └─ [author]: optional '_42_UserWhere?' #42
│     │           └─ item: &UserWhere #41
│     ├─ variant_1: struct #47
│     │  └─ [some]: optional '_46_PostWhere__skip_4_UserWhere?' #46
│     │     └─ item: struct 'PostWhere__skip_4_UserWhere' #43
│     │        ├─ [id]: optional '_39__integer_filter_c?' #39
│     │        │  └─ item: optional '_integer_filter_c' #20
│     │        │     └─ item: union #19
│     │        │        ├─ variant_0: either '_integer_filter' #17
│     │        │        │  ├─ variant_0: integer #9
│     │        │        │  ├─ variant_1: struct #12
│     │        │        │  │  └─ [equals]: integer #9
│     │        │        │  ├─ variant_2: struct #13
│     │        │        │  │  └─ [not]: integer #9
│     │        │        │  ├─ variant_3: struct #14
│     │        │        │  │  ├─ [lt]: optional #10
│     │        │        │  │  │  └─ item: integer #9
│     │        │        │  │  ├─ [gt]: optional #10
│     │        │        │  │  │  └─ item: integer #9
│     │        │        │  │  ├─ [lte]: optional #10
│     │        │        │  │  │  └─ item: integer #9
│     │        │        │  │  └─ [gte]: optional #10
│     │        │        │  │     └─ item: integer #9
│     │        │        │  ├─ variant_4: struct #15
│     │        │        │  │  └─ [in]: array #11
│     │        │        │  │     └─ item: integer #9
│     │        │        │  └─ variant_5: struct #16
│     │        │        │     └─ [notIn]: array #11
│     │        │        │        └─ item: integer #9
│     │        │        └─ variant_1: struct #18
│     │        │           └─ [not]: either '_integer_filter' #17
│     │        │              ├─ variant_0: integer #9
│     │        │              ├─ variant_1: struct #12
│     │        │              │  └─ [equals]: integer #9
│     │        │              ├─ variant_2: struct #13
│     │        │              │  └─ [not]: integer #9
│     │        │              ├─ variant_3: struct #14
│     │        │              │  ├─ [lt]: optional #10
│     │        │              │  │  └─ item: integer #9
│     │        │              │  ├─ [gt]: optional #10
│     │        │              │  │  └─ item: integer #9
│     │        │              │  ├─ [lte]: optional #10
│     │        │              │  │  └─ item: integer #9
│     │        │              │  └─ [gte]: optional #10
│     │        │              │     └─ item: integer #9
│     │        │              ├─ variant_4: struct #15
│     │        │              │  └─ [in]: array #11
│     │        │              │     └─ item: integer #9
│     │        │              └─ variant_5: struct #16
│     │        │                 └─ [notIn]: array #11
│     │        │                    └─ item: integer #9
│     │        ├─ [title]: optional '_40__string_filter_c?' #40
│     │        │  └─ item: optional '_string_filter_c' #37
│     │        │     └─ item: union #36
│     │        │        ├─ variant_0: union '_string_filter' #34
│     │        │        │  ├─ variant_0: string #22
│     │        │        │  ├─ variant_1: struct #25
│     │        │        │  │  └─ [equals]: string #22
│     │        │        │  ├─ variant_2: struct #26
│     │        │        │  │  └─ [not]: string #22
│     │        │        │  ├─ variant_3: struct #27
│     │        │        │  │  └─ [in]: array #24
│     │        │        │  │     └─ item: string #22
│     │        │        │  ├─ variant_4: struct #28
│     │        │        │  │  └─ [notIn]: array #24
│     │        │        │  │     └─ item: string #22
│     │        │        │  ├─ variant_5: struct #31
│     │        │        │  │  ├─ [contains]: string #22
│     │        │        │  │  └─ [mode]: optional #30
│     │        │        │  │     └─ item: string #29 enum{ '"insensitive"' }
│     │        │        │  ├─ variant_6: struct #32
│     │        │        │  │  └─ [search]: string #22
│     │        │        │  └─ variant_7: struct #33
│     │        │        │     ├─ [startsWith]: optional #23
│     │        │        │     │  └─ item: string #22
│     │        │        │     └─ [endsWith]: optional #23
│     │        │        │        └─ item: string #22
│     │        │        └─ variant_1: struct #35
│     │        │           └─ [not]: union '_string_filter' #34
│     │        │              ├─ variant_0: string #22
│     │        │              ├─ variant_1: struct #25
│     │        │              │  └─ [equals]: string #22
│     │        │              ├─ variant_2: struct #26
│     │        │              │  └─ [not]: string #22
│     │        │              ├─ variant_3: struct #27
│     │        │              │  └─ [in]: array #24
│     │        │              │     └─ item: string #22
│     │        │              ├─ variant_4: struct #28
│     │        │              │  └─ [notIn]: array #24
│     │        │              │     └─ item: string #22
│     │        │              ├─ variant_5: struct #31
│     │        │              │  ├─ [contains]: string #22
│     │        │              │  └─ [mode]: optional #30
│     │        │              │     └─ item: string #29 enum{ '"insensitive"' }
│     │        │              ├─ variant_6: struct #32
│     │        │              │  └─ [search]: string #22
│     │        │              └─ variant_7: struct #33
│     │        │                 ├─ [startsWith]: optional #23
│     │        │                 │  └─ item: string #22
│     │        │                 └─ [endsWith]: optional #23
│     │        │                    └─ item: string #22
│     │        └─ [author]: optional '_42_UserWhere?' #42
│     │           └─ item: &UserWhere #41
│     └─ variant_2: struct #49
│        └─ [none]: optional '_48_PostWhere__skip_4_UserWhere?' #48
│           └─ item: struct 'PostWhere__skip_4_UserWhere' #43
│              ├─ [id]: optional '_39__integer_filter_c?' #39
│              │  └─ item: optional '_integer_filter_c' #20
│              │     └─ item: union #19
│              │        ├─ variant_0: either '_integer_filter' #17
│              │        │  ├─ variant_0: integer #9
│              │        │  ├─ variant_1: struct #12
│              │        │  │  └─ [equals]: integer #9
│              │        │  ├─ variant_2: struct #13
│              │        │  │  └─ [not]: integer #9
│              │        │  ├─ variant_3: struct #14
│              │        │  │  ├─ [lt]: optional #10
│              │        │  │  │  └─ item: integer #9
│              │        │  │  ├─ [gt]: optional #10
│              │        │  │  │  └─ item: integer #9
│              │        │  │  ├─ [lte]: optional #10
│              │        │  │  │  └─ item: integer #9
│              │        │  │  └─ [gte]: optional #10
│              │        │  │     └─ item: integer #9
│              │        │  ├─ variant_4: struct #15
│              │        │  │  └─ [in]: array #11
│              │        │  │     └─ item: integer #9
│              │        │  └─ variant_5: struct #16
│              │        │     └─ [notIn]: array #11
│              │        │        └─ item: integer #9
│              │        └─ variant_1: struct #18
│              │           └─ [not]: either '_integer_filter' #17
│              │              ├─ variant_0: integer #9
│              │              ├─ variant_1: struct #12
│              │              │  └─ [equals]: integer #9
│              │              ├─ variant_2: struct #13
│              │              │  └─ [not]: integer #9
│              │              ├─ variant_3: struct #14
│              │              │  ├─ [lt]: optional #10
│              │              │  │  └─ item: integer #9
│              │              │  ├─ [gt]: optional #10
│              │              │  │  └─ item: integer #9
│              │              │  ├─ [lte]: optional #10
│              │              │  │  └─ item: integer #9
│              │              │  └─ [gte]: optional #10
│              │              │     └─ item: integer #9
│              │              ├─ variant_4: struct #15
│              │              │  └─ [in]: array #11
│              │              │     └─ item: integer #9
│              │              └─ variant_5: struct #16
│              │                 └─ [notIn]: array #11
│              │                    └─ item: integer #9
│              ├─ [title]: optional '_40__string_filter_c?' #40
│              │  └─ item: optional '_string_filter_c' #37
│              │     └─ item: union #36
│              │        ├─ variant_0: union '_string_filter' #34
│              │        │  ├─ variant_0: string #22
│              │        │  ├─ variant_1: struct #25
│              │        │  │  └─ [equals]: string #22
│              │        │  ├─ variant_2: struct #26
│              │        │  │  └─ [not]: string #22
│              │        │  ├─ variant_3: struct #27
│              │        │  │  └─ [in]: array #24
│              │        │  │     └─ item: string #22
│              │        │  ├─ variant_4: struct #28
│              │        │  │  └─ [notIn]: array #24
│              │        │  │     └─ item: string #22
│              │        │  ├─ variant_5: struct #31
│              │        │  │  ├─ [contains]: string #22
│              │        │  │  └─ [mode]: optional #30
│              │        │  │     └─ item: string #29 enum{ '"insensitive"' }
│              │        │  ├─ variant_6: struct #32
│              │        │  │  └─ [search]: string #22
│              │        │  └─ variant_7: struct #33
│              │        │     ├─ [startsWith]: optional #23
│              │        │     │  └─ item: string #22
│              │        │     └─ [endsWith]: optional #23
│              │        │        └─ item: string #22
│              │        └─ variant_1: struct #35
│              │           └─ [not]: union '_string_filter' #34
│              │              ├─ variant_0: string #22
│              │              ├─ variant_1: struct #25
│              │              │  └─ [equals]: string #22
│              │              ├─ variant_2: struct #26
│              │              │  └─ [not]: string #22
│              │              ├─ variant_3: struct #27
│              │              │  └─ [in]: array #24
│              │              │     └─ item: string #22
│              │              ├─ variant_4: struct #28
│              │              │  └─ [notIn]: array #24
│              │              │     └─ item: string #22
│              │              ├─ variant_5: struct #31
│              │              │  ├─ [contains]: string #22
│              │              │  └─ [mode]: optional #30
│              │              │     └─ item: string #29 enum{ '"insensitive"' }
│              │              ├─ variant_6: struct #32
│              │              │  └─ [search]: string #22
│              │              └─ variant_7: struct #33
│              │                 ├─ [startsWith]: optional #23
│              │                 │  └─ item: string #22
│              │                 └─ [endsWith]: optional #23
│              │                    └─ item: string #22
│              └─ [author]: optional '_42_UserWhere?' #42
│                 └─ item: &UserWhere #41
├─ [AND]: optional '_55__54_QueryUserWhereInput[]?' #55
│  └─ item: array '_54_QueryUserWhereInput[]' #54
│     └─ item: &QueryUserWhereInput #53
├─ [OR]: optional '_55__54_QueryUserWhereInput[]?' #55
│  └─ item: array '_54_QueryUserWhereInput[]' #54
│     └─ item: &QueryUserWhereInput #53
└─ [NOT]: optional '_56_QueryUserWhereInput?' #56
   └─ item: &QueryUserWhereInput #53

