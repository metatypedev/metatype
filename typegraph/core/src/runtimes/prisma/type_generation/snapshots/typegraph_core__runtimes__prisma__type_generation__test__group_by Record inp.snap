---
source: typegraph/core/src/runtimes/prisma/type_generation/mod.rs
expression: tp.print(inp)
---
root: struct '_Record_QueryInput_group_by' #100
├─ [by]: list '_Record_GroupingFields' #69
│  └─ item: string #68 enum{ '"id"', '"name"', '"age"' }
├─ [cursor]: optional '_67__Record_Cursor?' #67
│  └─ item: union '_Record_Cursor' #66
│     ├─ variant_0: struct #63
│     │  └─ [id]: string #0
│     ├─ variant_1: struct #64
│     │  └─ [name]: string #1
│     └─ variant_2: struct #65
│        └─ [age]: integer #2
├─ [having]: optional '_99__Record_Having?' #99
│  └─ item: union '_Record_Having' #98
│     ├─ variant_0: struct 'RecordWhere__agg' #91
│     │  ├─ [age]: optional '_90__integer_filter_with_aggregates_c?' #90
│     │  │  └─ item: optional '_integer_filter_with_aggregates_c' #89
│     │  │     └─ item: union #88
│     │  │        ├─ variant_0: union '_integer_filter_with_aggregates' #86
│     │  │        │  ├─ variant_0: either '_integer_filter' #31
│     │  │        │  │  ├─ variant_0: integer #23
│     │  │        │  │  ├─ variant_1: struct #26
│     │  │        │  │  │  └─ [equals]: integer #23
│     │  │        │  │  ├─ variant_2: struct #27
│     │  │        │  │  │  └─ [not]: integer #23
│     │  │        │  │  ├─ variant_3: struct #28
│     │  │        │  │  │  ├─ [gt]: optional #24
│     │  │        │  │  │  │  └─ item: integer #23
│     │  │        │  │  │  ├─ [gte]: optional #24
│     │  │        │  │  │  │  └─ item: integer #23
│     │  │        │  │  │  ├─ [lt]: optional #24
│     │  │        │  │  │  │  └─ item: integer #23
│     │  │        │  │  │  └─ [lte]: optional #24
│     │  │        │  │  │     └─ item: integer #23
│     │  │        │  │  ├─ variant_4: struct #29
│     │  │        │  │  │  └─ [in]: list #25
│     │  │        │  │  │     └─ item: integer #23
│     │  │        │  │  └─ variant_5: struct #30
│     │  │        │  │     └─ [notIn]: list #25
│     │  │        │  │        └─ item: integer #23
│     │  │        │  ├─ variant_1: struct #81
│     │  │        │  │  └─ [_count]: either '_integer_filter' #31
│     │  │        │  │     ├─ variant_0: integer #23
│     │  │        │  │     ├─ variant_1: struct #26
│     │  │        │  │     │  └─ [equals]: integer #23
│     │  │        │  │     ├─ variant_2: struct #27
│     │  │        │  │     │  └─ [not]: integer #23
│     │  │        │  │     ├─ variant_3: struct #28
│     │  │        │  │     │  ├─ [gt]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  ├─ [gte]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  ├─ [lt]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  └─ [lte]: optional #24
│     │  │        │  │     │     └─ item: integer #23
│     │  │        │  │     ├─ variant_4: struct #29
│     │  │        │  │     │  └─ [in]: list #25
│     │  │        │  │     │     └─ item: integer #23
│     │  │        │  │     └─ variant_5: struct #30
│     │  │        │  │        └─ [notIn]: list #25
│     │  │        │  │           └─ item: integer #23
│     │  │        │  ├─ variant_2: struct #82
│     │  │        │  │  └─ [_sum]: either '_integer_filter' #31
│     │  │        │  │     ├─ variant_0: integer #23
│     │  │        │  │     ├─ variant_1: struct #26
│     │  │        │  │     │  └─ [equals]: integer #23
│     │  │        │  │     ├─ variant_2: struct #27
│     │  │        │  │     │  └─ [not]: integer #23
│     │  │        │  │     ├─ variant_3: struct #28
│     │  │        │  │     │  ├─ [gt]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  ├─ [gte]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  ├─ [lt]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  └─ [lte]: optional #24
│     │  │        │  │     │     └─ item: integer #23
│     │  │        │  │     ├─ variant_4: struct #29
│     │  │        │  │     │  └─ [in]: list #25
│     │  │        │  │     │     └─ item: integer #23
│     │  │        │  │     └─ variant_5: struct #30
│     │  │        │  │        └─ [notIn]: list #25
│     │  │        │  │           └─ item: integer #23
│     │  │        │  ├─ variant_3: struct #83
│     │  │        │  │  └─ [_avg]: either '_float_filter' #80
│     │  │        │  │     ├─ variant_0: float #72
│     │  │        │  │     ├─ variant_1: struct #75
│     │  │        │  │     │  └─ [equals]: float #72
│     │  │        │  │     ├─ variant_2: struct #76
│     │  │        │  │     │  └─ [not]: float #72
│     │  │        │  │     ├─ variant_3: struct #77
│     │  │        │  │     │  ├─ [gt]: optional #73
│     │  │        │  │     │  │  └─ item: float #72
│     │  │        │  │     │  ├─ [gte]: optional #73
│     │  │        │  │     │  │  └─ item: float #72
│     │  │        │  │     │  ├─ [lt]: optional #73
│     │  │        │  │     │  │  └─ item: float #72
│     │  │        │  │     │  └─ [lte]: optional #73
│     │  │        │  │     │     └─ item: float #72
│     │  │        │  │     ├─ variant_4: struct #78
│     │  │        │  │     │  └─ [in]: list #74
│     │  │        │  │     │     └─ item: float #72
│     │  │        │  │     └─ variant_5: struct #79
│     │  │        │  │        └─ [notIn]: list #74
│     │  │        │  │           └─ item: float #72
│     │  │        │  ├─ variant_4: struct #84
│     │  │        │  │  └─ [_min]: either '_integer_filter' #31
│     │  │        │  │     ├─ variant_0: integer #23
│     │  │        │  │     ├─ variant_1: struct #26
│     │  │        │  │     │  └─ [equals]: integer #23
│     │  │        │  │     ├─ variant_2: struct #27
│     │  │        │  │     │  └─ [not]: integer #23
│     │  │        │  │     ├─ variant_3: struct #28
│     │  │        │  │     │  ├─ [gt]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  ├─ [gte]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  ├─ [lt]: optional #24
│     │  │        │  │     │  │  └─ item: integer #23
│     │  │        │  │     │  └─ [lte]: optional #24
│     │  │        │  │     │     └─ item: integer #23
│     │  │        │  │     ├─ variant_4: struct #29
│     │  │        │  │     │  └─ [in]: list #25
│     │  │        │  │     │     └─ item: integer #23
│     │  │        │  │     └─ variant_5: struct #30
│     │  │        │  │        └─ [notIn]: list #25
│     │  │        │  │           └─ item: integer #23
│     │  │        │  └─ variant_5: struct #85
│     │  │        │     └─ [_max]: either '_integer_filter' #31
│     │  │        │        ├─ variant_0: integer #23
│     │  │        │        ├─ variant_1: struct #26
│     │  │        │        │  └─ [equals]: integer #23
│     │  │        │        ├─ variant_2: struct #27
│     │  │        │        │  └─ [not]: integer #23
│     │  │        │        ├─ variant_3: struct #28
│     │  │        │        │  ├─ [gt]: optional #24
│     │  │        │        │  │  └─ item: integer #23
│     │  │        │        │  ├─ [gte]: optional #24
│     │  │        │        │  │  └─ item: integer #23
│     │  │        │        │  ├─ [lt]: optional #24
│     │  │        │        │  │  └─ item: integer #23
│     │  │        │        │  └─ [lte]: optional #24
│     │  │        │        │     └─ item: integer #23
│     │  │        │        ├─ variant_4: struct #29
│     │  │        │        │  └─ [in]: list #25
│     │  │        │        │     └─ item: integer #23
│     │  │        │        └─ variant_5: struct #30
│     │  │        │           └─ [notIn]: list #25
│     │  │        │              └─ item: integer #23
│     │  │        └─ variant_1: struct #87
│     │  │           └─ [not]: union '_integer_filter_with_aggregates' #86
│     │  │              ├─ variant_0: either '_integer_filter' #31
│     │  │              │  ├─ variant_0: integer #23
│     │  │              │  ├─ variant_1: struct #26
│     │  │              │  │  └─ [equals]: integer #23
│     │  │              │  ├─ variant_2: struct #27
│     │  │              │  │  └─ [not]: integer #23
│     │  │              │  ├─ variant_3: struct #28
│     │  │              │  │  ├─ [gt]: optional #24
│     │  │              │  │  │  └─ item: integer #23
│     │  │              │  │  ├─ [gte]: optional #24
│     │  │              │  │  │  └─ item: integer #23
│     │  │              │  │  ├─ [lt]: optional #24
│     │  │              │  │  │  └─ item: integer #23
│     │  │              │  │  └─ [lte]: optional #24
│     │  │              │  │     └─ item: integer #23
│     │  │              │  ├─ variant_4: struct #29
│     │  │              │  │  └─ [in]: list #25
│     │  │              │  │     └─ item: integer #23
│     │  │              │  └─ variant_5: struct #30
│     │  │              │     └─ [notIn]: list #25
│     │  │              │        └─ item: integer #23
│     │  │              ├─ variant_1: struct #81
│     │  │              │  └─ [_count]: either '_integer_filter' #31
│     │  │              │     ├─ variant_0: integer #23
│     │  │              │     ├─ variant_1: struct #26
│     │  │              │     │  └─ [equals]: integer #23
│     │  │              │     ├─ variant_2: struct #27
│     │  │              │     │  └─ [not]: integer #23
│     │  │              │     ├─ variant_3: struct #28
│     │  │              │     │  ├─ [gt]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  ├─ [gte]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  ├─ [lt]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  └─ [lte]: optional #24
│     │  │              │     │     └─ item: integer #23
│     │  │              │     ├─ variant_4: struct #29
│     │  │              │     │  └─ [in]: list #25
│     │  │              │     │     └─ item: integer #23
│     │  │              │     └─ variant_5: struct #30
│     │  │              │        └─ [notIn]: list #25
│     │  │              │           └─ item: integer #23
│     │  │              ├─ variant_2: struct #82
│     │  │              │  └─ [_sum]: either '_integer_filter' #31
│     │  │              │     ├─ variant_0: integer #23
│     │  │              │     ├─ variant_1: struct #26
│     │  │              │     │  └─ [equals]: integer #23
│     │  │              │     ├─ variant_2: struct #27
│     │  │              │     │  └─ [not]: integer #23
│     │  │              │     ├─ variant_3: struct #28
│     │  │              │     │  ├─ [gt]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  ├─ [gte]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  ├─ [lt]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  └─ [lte]: optional #24
│     │  │              │     │     └─ item: integer #23
│     │  │              │     ├─ variant_4: struct #29
│     │  │              │     │  └─ [in]: list #25
│     │  │              │     │     └─ item: integer #23
│     │  │              │     └─ variant_5: struct #30
│     │  │              │        └─ [notIn]: list #25
│     │  │              │           └─ item: integer #23
│     │  │              ├─ variant_3: struct #83
│     │  │              │  └─ [_avg]: either '_float_filter' #80
│     │  │              │     ├─ variant_0: float #72
│     │  │              │     ├─ variant_1: struct #75
│     │  │              │     │  └─ [equals]: float #72
│     │  │              │     ├─ variant_2: struct #76
│     │  │              │     │  └─ [not]: float #72
│     │  │              │     ├─ variant_3: struct #77
│     │  │              │     │  ├─ [gt]: optional #73
│     │  │              │     │  │  └─ item: float #72
│     │  │              │     │  ├─ [gte]: optional #73
│     │  │              │     │  │  └─ item: float #72
│     │  │              │     │  ├─ [lt]: optional #73
│     │  │              │     │  │  └─ item: float #72
│     │  │              │     │  └─ [lte]: optional #73
│     │  │              │     │     └─ item: float #72
│     │  │              │     ├─ variant_4: struct #78
│     │  │              │     │  └─ [in]: list #74
│     │  │              │     │     └─ item: float #72
│     │  │              │     └─ variant_5: struct #79
│     │  │              │        └─ [notIn]: list #74
│     │  │              │           └─ item: float #72
│     │  │              ├─ variant_4: struct #84
│     │  │              │  └─ [_min]: either '_integer_filter' #31
│     │  │              │     ├─ variant_0: integer #23
│     │  │              │     ├─ variant_1: struct #26
│     │  │              │     │  └─ [equals]: integer #23
│     │  │              │     ├─ variant_2: struct #27
│     │  │              │     │  └─ [not]: integer #23
│     │  │              │     ├─ variant_3: struct #28
│     │  │              │     │  ├─ [gt]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  ├─ [gte]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  ├─ [lt]: optional #24
│     │  │              │     │  │  └─ item: integer #23
│     │  │              │     │  └─ [lte]: optional #24
│     │  │              │     │     └─ item: integer #23
│     │  │              │     ├─ variant_4: struct #29
│     │  │              │     │  └─ [in]: list #25
│     │  │              │     │     └─ item: integer #23
│     │  │              │     └─ variant_5: struct #30
│     │  │              │        └─ [notIn]: list #25
│     │  │              │           └─ item: integer #23
│     │  │              └─ variant_5: struct #85
│     │  │                 └─ [_max]: either '_integer_filter' #31
│     │  │                    ├─ variant_0: integer #23
│     │  │                    ├─ variant_1: struct #26
│     │  │                    │  └─ [equals]: integer #23
│     │  │                    ├─ variant_2: struct #27
│     │  │                    │  └─ [not]: integer #23
│     │  │                    ├─ variant_3: struct #28
│     │  │                    │  ├─ [gt]: optional #24
│     │  │                    │  │  └─ item: integer #23
│     │  │                    │  ├─ [gte]: optional #24
│     │  │                    │  │  └─ item: integer #23
│     │  │                    │  ├─ [lt]: optional #24
│     │  │                    │  │  └─ item: integer #23
│     │  │                    │  └─ [lte]: optional #24
│     │  │                    │     └─ item: integer #23
│     │  │                    ├─ variant_4: struct #29
│     │  │                    │  └─ [in]: list #25
│     │  │                    │     └─ item: integer #23
│     │  │                    └─ variant_5: struct #30
│     │  │                       └─ [notIn]: list #25
│     │  │                          └─ item: integer #23
│     │  ├─ [id]: optional '_70__string_filter_c?' #70
│     │  │  └─ item: optional '_string_filter_c' #20
│     │  │     └─ item: union #19
│     │  │        ├─ variant_0: union '_string_filter' #17
│     │  │        │  ├─ variant_0: string #5
│     │  │        │  ├─ variant_1: struct #8
│     │  │        │  │  └─ [equals]: string #5
│     │  │        │  ├─ variant_2: struct #9
│     │  │        │  │  └─ [not]: string #5
│     │  │        │  ├─ variant_3: struct #10
│     │  │        │  │  └─ [in]: list #7
│     │  │        │  │     └─ item: string #5
│     │  │        │  ├─ variant_4: struct #11
│     │  │        │  │  └─ [notIn]: list #7
│     │  │        │  │     └─ item: string #5
│     │  │        │  ├─ variant_5: struct #14
│     │  │        │  │  ├─ [contains]: string #5
│     │  │        │  │  └─ [mode]: optional #13
│     │  │        │  │     └─ item: string #12 enum{ '"insensitive"' }
│     │  │        │  ├─ variant_6: struct #15
│     │  │        │  │  └─ [search]: string #5
│     │  │        │  └─ variant_7: struct #16
│     │  │        │     ├─ [endsWith]: optional #6
│     │  │        │     │  └─ item: string #5
│     │  │        │     └─ [startsWith]: optional #6
│     │  │        │        └─ item: string #5
│     │  │        └─ variant_1: struct #18
│     │  │           └─ [not]: union '_string_filter' #17
│     │  │              ├─ variant_0: string #5
│     │  │              ├─ variant_1: struct #8
│     │  │              │  └─ [equals]: string #5
│     │  │              ├─ variant_2: struct #9
│     │  │              │  └─ [not]: string #5
│     │  │              ├─ variant_3: struct #10
│     │  │              │  └─ [in]: list #7
│     │  │              │     └─ item: string #5
│     │  │              ├─ variant_4: struct #11
│     │  │              │  └─ [notIn]: list #7
│     │  │              │     └─ item: string #5
│     │  │              ├─ variant_5: struct #14
│     │  │              │  ├─ [contains]: string #5
│     │  │              │  └─ [mode]: optional #13
│     │  │              │     └─ item: string #12 enum{ '"insensitive"' }
│     │  │              ├─ variant_6: struct #15
│     │  │              │  └─ [search]: string #5
│     │  │              └─ variant_7: struct #16
│     │  │                 ├─ [endsWith]: optional #6
│     │  │                 │  └─ item: string #5
│     │  │                 └─ [startsWith]: optional #6
│     │  │                    └─ item: string #5
│     │  └─ [name]: optional '_71__string_filter_c?' #71
│     │     └─ item: optional '_string_filter_c' #20
│     │        └─ item: union #19
│     │           ├─ variant_0: union '_string_filter' #17
│     │           │  ├─ variant_0: string #5
│     │           │  ├─ variant_1: struct #8
│     │           │  │  └─ [equals]: string #5
│     │           │  ├─ variant_2: struct #9
│     │           │  │  └─ [not]: string #5
│     │           │  ├─ variant_3: struct #10
│     │           │  │  └─ [in]: list #7
│     │           │  │     └─ item: string #5
│     │           │  ├─ variant_4: struct #11
│     │           │  │  └─ [notIn]: list #7
│     │           │  │     └─ item: string #5
│     │           │  ├─ variant_5: struct #14
│     │           │  │  ├─ [contains]: string #5
│     │           │  │  └─ [mode]: optional #13
│     │           │  │     └─ item: string #12 enum{ '"insensitive"' }
│     │           │  ├─ variant_6: struct #15
│     │           │  │  └─ [search]: string #5
│     │           │  └─ variant_7: struct #16
│     │           │     ├─ [endsWith]: optional #6
│     │           │     │  └─ item: string #5
│     │           │     └─ [startsWith]: optional #6
│     │           │        └─ item: string #5
│     │           └─ variant_1: struct #18
│     │              └─ [not]: union '_string_filter' #17
│     │                 ├─ variant_0: string #5
│     │                 ├─ variant_1: struct #8
│     │                 │  └─ [equals]: string #5
│     │                 ├─ variant_2: struct #9
│     │                 │  └─ [not]: string #5
│     │                 ├─ variant_3: struct #10
│     │                 │  └─ [in]: list #7
│     │                 │     └─ item: string #5
│     │                 ├─ variant_4: struct #11
│     │                 │  └─ [notIn]: list #7
│     │                 │     └─ item: string #5
│     │                 ├─ variant_5: struct #14
│     │                 │  ├─ [contains]: string #5
│     │                 │  └─ [mode]: optional #13
│     │                 │     └─ item: string #12 enum{ '"insensitive"' }
│     │                 ├─ variant_6: struct #15
│     │                 │  └─ [search]: string #5
│     │                 └─ variant_7: struct #16
│     │                    ├─ [endsWith]: optional #6
│     │                    │  └─ item: string #5
│     │                    └─ [startsWith]: optional #6
│     │                       └─ item: string #5
│     ├─ variant_1: struct #94
│     │  └─ [AND]: list '_93__Record_Having[]' #93
│     │     └─ item: &_Record_Having #92
│     ├─ variant_2: struct #96
│     │  └─ [OR]: list '_95__Record_Having[]' #95
│     │     └─ item: &_Record_Having #92
│     └─ variant_3: struct #97
│        └─ [NOT]: &_Record_Having #92
├─ [orderBy]: optional '_58__Record_OrderBy_with_aggregates?' #58
│  └─ item: list '_Record_OrderBy_with_aggregates' #57
│     └─ item: struct #56
│        ├─ [_avg]: optional #54
│        │  └─ item: struct #53
│        │     └─ [age]: optional '_Sort_nullable' #50
│        │        └─ item: union #49
│        │           ├─ variant_0: struct #48
│        │           │  ├─ [nulls]: string '_NullsOrder' #44 enum{ '"first"', '"last"' }
│        │           │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [_count]: optional #52
│        │  └─ item: struct #51
│        │     ├─ [age]: optional '_Sort_nullable' #50
│        │     │  └─ item: union #49
│        │     │     ├─ variant_0: struct #48
│        │     │     │  ├─ [nulls]: string '_NullsOrder' #44 enum{ '"first"', '"last"' }
│        │     │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     ├─ [id]: optional '_Sort' #47
│        │     │  └─ item: union #46
│        │     │     ├─ variant_0: struct #45
│        │     │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     └─ [name]: optional '_Sort' #47
│        │        └─ item: union #46
│        │           ├─ variant_0: struct #45
│        │           │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [_max]: optional #54
│        │  └─ item: struct #53
│        │     └─ [age]: optional '_Sort_nullable' #50
│        │        └─ item: union #49
│        │           ├─ variant_0: struct #48
│        │           │  ├─ [nulls]: string '_NullsOrder' #44 enum{ '"first"', '"last"' }
│        │           │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [_min]: optional #54
│        │  └─ item: struct #53
│        │     └─ [age]: optional '_Sort_nullable' #50
│        │        └─ item: union #49
│        │           ├─ variant_0: struct #48
│        │           │  ├─ [nulls]: string '_NullsOrder' #44 enum{ '"first"', '"last"' }
│        │           │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [_sum]: optional #54
│        │  └─ item: struct #53
│        │     └─ [age]: optional '_Sort_nullable' #50
│        │        └─ item: union #49
│        │           ├─ variant_0: struct #48
│        │           │  ├─ [nulls]: string '_NullsOrder' #44 enum{ '"first"', '"last"' }
│        │           │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [age]: optional '_Sort_nullable' #50
│        │  └─ item: union #49
│        │     ├─ variant_0: struct #48
│        │     │  ├─ [nulls]: string '_NullsOrder' #44 enum{ '"first"', '"last"' }
│        │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [id]: optional '_Sort' #47
│        │  └─ item: union #46
│        │     ├─ variant_0: struct #45
│        │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        └─ [name]: optional '_Sort' #47
│           └─ item: union #46
│              ├─ variant_0: struct #45
│              │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│              └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
├─ [skip]: optional '_62__Skip?' #62
│  └─ item: integer '_Skip' #61
├─ [take]: optional '_60__Take?' #60
│  └─ item: integer '_Take' #59
└─ [where]: optional '_42_QueryRecordWhereInput?' #42
   └─ item: struct 'QueryRecordWhereInput' #41
      ├─ [AND]: optional '_39__38_QueryRecordWhereInput[]?' #39
      │  └─ item: list '_38_QueryRecordWhereInput[]' #38
      │     └─ item: &QueryRecordWhereInput #37
      ├─ [NOT]: optional '_40_QueryRecordWhereInput?' #40
      │  └─ item: &QueryRecordWhereInput #37
      ├─ [OR]: optional '_39__38_QueryRecordWhereInput[]?' #39
      │  └─ item: list '_38_QueryRecordWhereInput[]' #38
      │     └─ item: &QueryRecordWhereInput #37
      ├─ [age]: optional '_35__integer_filter_c?' #35
      │  └─ item: optional '_integer_filter_c' #34
      │     └─ item: union #33
      │        ├─ variant_0: either '_integer_filter' #31
      │        │  ├─ variant_0: integer #23
      │        │  ├─ variant_1: struct #26
      │        │  │  └─ [equals]: integer #23
      │        │  ├─ variant_2: struct #27
      │        │  │  └─ [not]: integer #23
      │        │  ├─ variant_3: struct #28
      │        │  │  ├─ [gt]: optional #24
      │        │  │  │  └─ item: integer #23
      │        │  │  ├─ [gte]: optional #24
      │        │  │  │  └─ item: integer #23
      │        │  │  ├─ [lt]: optional #24
      │        │  │  │  └─ item: integer #23
      │        │  │  └─ [lte]: optional #24
      │        │  │     └─ item: integer #23
      │        │  ├─ variant_4: struct #29
      │        │  │  └─ [in]: list #25
      │        │  │     └─ item: integer #23
      │        │  └─ variant_5: struct #30
      │        │     └─ [notIn]: list #25
      │        │        └─ item: integer #23
      │        └─ variant_1: struct #32
      │           └─ [not]: either '_integer_filter' #31
      │              ├─ variant_0: integer #23
      │              ├─ variant_1: struct #26
      │              │  └─ [equals]: integer #23
      │              ├─ variant_2: struct #27
      │              │  └─ [not]: integer #23
      │              ├─ variant_3: struct #28
      │              │  ├─ [gt]: optional #24
      │              │  │  └─ item: integer #23
      │              │  ├─ [gte]: optional #24
      │              │  │  └─ item: integer #23
      │              │  ├─ [lt]: optional #24
      │              │  │  └─ item: integer #23
      │              │  └─ [lte]: optional #24
      │              │     └─ item: integer #23
      │              ├─ variant_4: struct #29
      │              │  └─ [in]: list #25
      │              │     └─ item: integer #23
      │              └─ variant_5: struct #30
      │                 └─ [notIn]: list #25
      │                    └─ item: integer #23
      ├─ [id]: optional '_21__string_filter_c?' #21
      │  └─ item: optional '_string_filter_c' #20
      │     └─ item: union #19
      │        ├─ variant_0: union '_string_filter' #17
      │        │  ├─ variant_0: string #5
      │        │  ├─ variant_1: struct #8
      │        │  │  └─ [equals]: string #5
      │        │  ├─ variant_2: struct #9
      │        │  │  └─ [not]: string #5
      │        │  ├─ variant_3: struct #10
      │        │  │  └─ [in]: list #7
      │        │  │     └─ item: string #5
      │        │  ├─ variant_4: struct #11
      │        │  │  └─ [notIn]: list #7
      │        │  │     └─ item: string #5
      │        │  ├─ variant_5: struct #14
      │        │  │  ├─ [contains]: string #5
      │        │  │  └─ [mode]: optional #13
      │        │  │     └─ item: string #12 enum{ '"insensitive"' }
      │        │  ├─ variant_6: struct #15
      │        │  │  └─ [search]: string #5
      │        │  └─ variant_7: struct #16
      │        │     ├─ [endsWith]: optional #6
      │        │     │  └─ item: string #5
      │        │     └─ [startsWith]: optional #6
      │        │        └─ item: string #5
      │        └─ variant_1: struct #18
      │           └─ [not]: union '_string_filter' #17
      │              ├─ variant_0: string #5
      │              ├─ variant_1: struct #8
      │              │  └─ [equals]: string #5
      │              ├─ variant_2: struct #9
      │              │  └─ [not]: string #5
      │              ├─ variant_3: struct #10
      │              │  └─ [in]: list #7
      │              │     └─ item: string #5
      │              ├─ variant_4: struct #11
      │              │  └─ [notIn]: list #7
      │              │     └─ item: string #5
      │              ├─ variant_5: struct #14
      │              │  ├─ [contains]: string #5
      │              │  └─ [mode]: optional #13
      │              │     └─ item: string #12 enum{ '"insensitive"' }
      │              ├─ variant_6: struct #15
      │              │  └─ [search]: string #5
      │              └─ variant_7: struct #16
      │                 ├─ [endsWith]: optional #6
      │                 │  └─ item: string #5
      │                 └─ [startsWith]: optional #6
      │                    └─ item: string #5
      └─ [name]: optional '_22__string_filter_c?' #22
         └─ item: optional '_string_filter_c' #20
            └─ item: union #19
               ├─ variant_0: union '_string_filter' #17
               │  ├─ variant_0: string #5
               │  ├─ variant_1: struct #8
               │  │  └─ [equals]: string #5
               │  ├─ variant_2: struct #9
               │  │  └─ [not]: string #5
               │  ├─ variant_3: struct #10
               │  │  └─ [in]: list #7
               │  │     └─ item: string #5
               │  ├─ variant_4: struct #11
               │  │  └─ [notIn]: list #7
               │  │     └─ item: string #5
               │  ├─ variant_5: struct #14
               │  │  ├─ [contains]: string #5
               │  │  └─ [mode]: optional #13
               │  │     └─ item: string #12 enum{ '"insensitive"' }
               │  ├─ variant_6: struct #15
               │  │  └─ [search]: string #5
               │  └─ variant_7: struct #16
               │     ├─ [endsWith]: optional #6
               │     │  └─ item: string #5
               │     └─ [startsWith]: optional #6
               │        └─ item: string #5
               └─ variant_1: struct #18
                  └─ [not]: union '_string_filter' #17
                     ├─ variant_0: string #5
                     ├─ variant_1: struct #8
                     │  └─ [equals]: string #5
                     ├─ variant_2: struct #9
                     │  └─ [not]: string #5
                     ├─ variant_3: struct #10
                     │  └─ [in]: list #7
                     │     └─ item: string #5
                     ├─ variant_4: struct #11
                     │  └─ [notIn]: list #7
                     │     └─ item: string #5
                     ├─ variant_5: struct #14
                     │  ├─ [contains]: string #5
                     │  └─ [mode]: optional #13
                     │     └─ item: string #12 enum{ '"insensitive"' }
                     ├─ variant_6: struct #15
                     │  └─ [search]: string #5
                     └─ variant_7: struct #16
                        ├─ [endsWith]: optional #6
                        │  └─ item: string #5
                        └─ [startsWith]: optional #6
                           └─ item: string #5

