---
source: typegraph/core/src/runtimes/prisma/type_generation/mod.rs
expression: "tree::print(inp)"
---
root: struct #116
├─ [data]: struct '_Post_UpdateInput' #103
│  ├─ [id]: optional #99
│  │  └─ item: union #98
│  │     ├─ variant_0: integer #66
│  │     ├─ variant_1: struct #94
│  │     │  └─ [set]: integer #66
│  │     ├─ variant_2: struct #95
│  │     │  └─ [multiply]: integer #66
│  │     ├─ variant_3: struct #96
│  │     │  └─ [decrement]: integer #66
│  │     └─ variant_4: struct #97
│  │        └─ [increment]: integer #66
│  └─ [title]: optional #102
│     └─ item: union #101
│        ├─ variant_0: string #67
│        └─ variant_1: struct #100
│           └─ [set]: string #67
└─ [where]: optional #115
   └─ item: struct 'QueryPostWhereInput' #114
      ├─ [id]: optional #107
      │  └─ item: optional '_integer_filter_c' #49
      │     └─ item: union #48
      │        ├─ variant_0: union '_integer_filter' #46
      │        │  ├─ variant_0: integer #39
      │        │  ├─ variant_1: struct #42
      │        │  │  └─ [equals]: integer #39
      │        │  ├─ variant_2: struct #43
      │        │  │  ├─ [lt]: optional #40
      │        │  │  │  └─ item: integer #39
      │        │  │  ├─ [gt]: optional #40
      │        │  │  │  └─ item: integer #39
      │        │  │  ├─ [lte]: optional #40
      │        │  │  │  └─ item: integer #39
      │        │  │  └─ [gte]: optional #40
      │        │  │     └─ item: integer #39
      │        │  ├─ variant_3: struct #44
      │        │  │  └─ [in]: array #41
      │        │  │     └─ item: integer #39
      │        │  └─ variant_4: struct #45
      │        │     └─ [notIn]: array #41
      │        │        └─ item: integer #39
      │        └─ variant_1: struct #47
      │           └─ [not]: union '_integer_filter' #46
      │              ├─ variant_0: integer #39
      │              ├─ variant_1: struct #42
      │              │  └─ [equals]: integer #39
      │              ├─ variant_2: struct #43
      │              │  ├─ [lt]: optional #40
      │              │  │  └─ item: integer #39
      │              │  ├─ [gt]: optional #40
      │              │  │  └─ item: integer #39
      │              │  ├─ [lte]: optional #40
      │              │  │  └─ item: integer #39
      │              │  └─ [gte]: optional #40
      │              │     └─ item: integer #39
      │              ├─ variant_3: struct #44
      │              │  └─ [in]: array #41
      │              │     └─ item: integer #39
      │              └─ variant_4: struct #45
      │                 └─ [notIn]: array #41
      │                    └─ item: integer #39
      ├─ [title]: optional #108
      │  └─ item: optional '_string_filter_c' #36
      │     └─ item: union #35
      │        ├─ variant_0: union '_string_filter' #33
      │        │  ├─ variant_0: string #22
      │        │  ├─ variant_1: struct #25
      │        │  │  └─ [equals]: string #22
      │        │  ├─ variant_2: struct #26
      │        │  │  └─ [in]: array #24
      │        │  │     └─ item: string #22
      │        │  ├─ variant_3: struct #27
      │        │  │  └─ [notIn]: array #24
      │        │  │     └─ item: string #22
      │        │  ├─ variant_4: struct #30
      │        │  │  ├─ [contains]: string #22
      │        │  │  └─ [mode]: optional #29
      │        │  │     └─ item: string #28 enum{ '"insensitive"' }
      │        │  ├─ variant_5: struct #31
      │        │  │  └─ [search]: string #22
      │        │  └─ variant_6: struct #32
      │        │     ├─ [startsWith]: optional #23
      │        │     │  └─ item: string #22
      │        │     └─ [endsWith]: optional #23
      │        │        └─ item: string #22
      │        └─ variant_1: struct #34
      │           └─ [not]: union '_string_filter' #33
      │              ├─ variant_0: string #22
      │              ├─ variant_1: struct #25
      │              │  └─ [equals]: string #22
      │              ├─ variant_2: struct #26
      │              │  └─ [in]: array #24
      │              │     └─ item: string #22
      │              ├─ variant_3: struct #27
      │              │  └─ [notIn]: array #24
      │              │     └─ item: string #22
      │              ├─ variant_4: struct #30
      │              │  ├─ [contains]: string #22
      │              │  └─ [mode]: optional #29
      │              │     └─ item: string #28 enum{ '"insensitive"' }
      │              ├─ variant_5: struct #31
      │              │  └─ [search]: string #22
      │              └─ variant_6: struct #32
      │                 ├─ [startsWith]: optional #23
      │                 │  └─ item: string #22
      │                 └─ [endsWith]: optional #23
      │                    └─ item: string #22
      ├─ [AND]: optional #112
      │  └─ item: array 'QueryPostWhereInput[]' #111
      │     └─ item: &QueryPostWhereInput #110
      ├─ [OR]: optional #112
      │  └─ item: array 'QueryPostWhereInput[]' #111
      │     └─ item: &QueryPostWhereInput #110
      └─ [NOT]: optional #113
         └─ item: &QueryPostWhereInput #110

