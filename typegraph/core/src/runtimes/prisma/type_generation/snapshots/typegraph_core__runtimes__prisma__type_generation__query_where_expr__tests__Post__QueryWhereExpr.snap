---
source: typegraph/core/src/runtimes/prisma/type_generation/query_where_expr.rs
expression: "tree::print(post_where_expr)"
---
root: struct 'QueryPostWhereInput' #78
├─ [id]: optional '_67__integer_filter_c?' #67
│  └─ item: optional '_integer_filter_c' #29
│     └─ item: union #28
│        ├─ variant_0: either '_integer_filter' #26
│        │  ├─ variant_0: integer #18
│        │  ├─ variant_1: struct #21
│        │  │  └─ [equals]: integer #18
│        │  ├─ variant_2: struct #22
│        │  │  └─ [not]: integer #18
│        │  ├─ variant_3: struct #23
│        │  │  ├─ [lt]: optional #19
│        │  │  │  └─ item: integer #18
│        │  │  ├─ [gt]: optional #19
│        │  │  │  └─ item: integer #18
│        │  │  ├─ [lte]: optional #19
│        │  │  │  └─ item: integer #18
│        │  │  └─ [gte]: optional #19
│        │  │     └─ item: integer #18
│        │  ├─ variant_4: struct #24
│        │  │  └─ [in]: array #20
│        │  │     └─ item: integer #18
│        │  └─ variant_5: struct #25
│        │     └─ [notIn]: array #20
│        │        └─ item: integer #18
│        └─ variant_1: struct #27
│           └─ [not]: either '_integer_filter' #26
│              ├─ variant_0: integer #18
│              ├─ variant_1: struct #21
│              │  └─ [equals]: integer #18
│              ├─ variant_2: struct #22
│              │  └─ [not]: integer #18
│              ├─ variant_3: struct #23
│              │  ├─ [lt]: optional #19
│              │  │  └─ item: integer #18
│              │  ├─ [gt]: optional #19
│              │  │  └─ item: integer #18
│              │  ├─ [lte]: optional #19
│              │  │  └─ item: integer #18
│              │  └─ [gte]: optional #19
│              │     └─ item: integer #18
│              ├─ variant_4: struct #24
│              │  └─ [in]: array #20
│              │     └─ item: integer #18
│              └─ variant_5: struct #25
│                 └─ [notIn]: array #20
│                    └─ item: integer #18
├─ [title]: optional '_68__string_filter_c?' #68
│  └─ item: optional '_string_filter_c' #46
│     └─ item: union #45
│        ├─ variant_0: union '_string_filter' #43
│        │  ├─ variant_0: string #31
│        │  ├─ variant_1: struct #34
│        │  │  └─ [equals]: string #31
│        │  ├─ variant_2: struct #35
│        │  │  └─ [not]: string #31
│        │  ├─ variant_3: struct #36
│        │  │  └─ [in]: array #33
│        │  │     └─ item: string #31
│        │  ├─ variant_4: struct #37
│        │  │  └─ [notIn]: array #33
│        │  │     └─ item: string #31
│        │  ├─ variant_5: struct #40
│        │  │  ├─ [contains]: string #31
│        │  │  └─ [mode]: optional #39
│        │  │     └─ item: string #38 enum{ '"insensitive"' }
│        │  ├─ variant_6: struct #41
│        │  │  └─ [search]: string #31
│        │  └─ variant_7: struct #42
│        │     ├─ [startsWith]: optional #32
│        │     │  └─ item: string #31
│        │     └─ [endsWith]: optional #32
│        │        └─ item: string #31
│        └─ variant_1: struct #44
│           └─ [not]: union '_string_filter' #43
│              ├─ variant_0: string #31
│              ├─ variant_1: struct #34
│              │  └─ [equals]: string #31
│              ├─ variant_2: struct #35
│              │  └─ [not]: string #31
│              ├─ variant_3: struct #36
│              │  └─ [in]: array #33
│              │     └─ item: string #31
│              ├─ variant_4: struct #37
│              │  └─ [notIn]: array #33
│              │     └─ item: string #31
│              ├─ variant_5: struct #40
│              │  ├─ [contains]: string #31
│              │  └─ [mode]: optional #39
│              │     └─ item: string #38 enum{ '"insensitive"' }
│              ├─ variant_6: struct #41
│              │  └─ [search]: string #31
│              └─ variant_7: struct #42
│                 ├─ [startsWith]: optional #32
│                 │  └─ item: string #31
│                 └─ [endsWith]: optional #32
│                    └─ item: string #31
├─ [author]: optional '_72__4WithFilters_norel?' #72
│  └─ item: struct '_4WithFilters_norel' #71
│     ├─ [id]: optional '_69__integer_filter_c?' #69
│     │  └─ item: optional '_integer_filter_c' #29
│     │     └─ item: union #28
│     │        ├─ variant_0: either '_integer_filter' #26
│     │        │  ├─ variant_0: integer #18
│     │        │  ├─ variant_1: struct #21
│     │        │  │  └─ [equals]: integer #18
│     │        │  ├─ variant_2: struct #22
│     │        │  │  └─ [not]: integer #18
│     │        │  ├─ variant_3: struct #23
│     │        │  │  ├─ [lt]: optional #19
│     │        │  │  │  └─ item: integer #18
│     │        │  │  ├─ [gt]: optional #19
│     │        │  │  │  └─ item: integer #18
│     │        │  │  ├─ [lte]: optional #19
│     │        │  │  │  └─ item: integer #18
│     │        │  │  └─ [gte]: optional #19
│     │        │  │     └─ item: integer #18
│     │        │  ├─ variant_4: struct #24
│     │        │  │  └─ [in]: array #20
│     │        │  │     └─ item: integer #18
│     │        │  └─ variant_5: struct #25
│     │        │     └─ [notIn]: array #20
│     │        │        └─ item: integer #18
│     │        └─ variant_1: struct #27
│     │           └─ [not]: either '_integer_filter' #26
│     │              ├─ variant_0: integer #18
│     │              ├─ variant_1: struct #21
│     │              │  └─ [equals]: integer #18
│     │              ├─ variant_2: struct #22
│     │              │  └─ [not]: integer #18
│     │              ├─ variant_3: struct #23
│     │              │  ├─ [lt]: optional #19
│     │              │  │  └─ item: integer #18
│     │              │  ├─ [gt]: optional #19
│     │              │  │  └─ item: integer #18
│     │              │  ├─ [lte]: optional #19
│     │              │  │  └─ item: integer #18
│     │              │  └─ [gte]: optional #19
│     │              │     └─ item: integer #18
│     │              ├─ variant_4: struct #24
│     │              │  └─ [in]: array #20
│     │              │     └─ item: integer #18
│     │              └─ variant_5: struct #25
│     │                 └─ [notIn]: array #20
│     │                    └─ item: integer #18
│     └─ [name]: optional '_70__string_filter_c?' #70
│        └─ item: optional '_string_filter_c' #46
│           └─ item: union #45
│              ├─ variant_0: union '_string_filter' #43
│              │  ├─ variant_0: string #31
│              │  ├─ variant_1: struct #34
│              │  │  └─ [equals]: string #31
│              │  ├─ variant_2: struct #35
│              │  │  └─ [not]: string #31
│              │  ├─ variant_3: struct #36
│              │  │  └─ [in]: array #33
│              │  │     └─ item: string #31
│              │  ├─ variant_4: struct #37
│              │  │  └─ [notIn]: array #33
│              │  │     └─ item: string #31
│              │  ├─ variant_5: struct #40
│              │  │  ├─ [contains]: string #31
│              │  │  └─ [mode]: optional #39
│              │  │     └─ item: string #38 enum{ '"insensitive"' }
│              │  ├─ variant_6: struct #41
│              │  │  └─ [search]: string #31
│              │  └─ variant_7: struct #42
│              │     ├─ [startsWith]: optional #32
│              │     │  └─ item: string #31
│              │     └─ [endsWith]: optional #32
│              │        └─ item: string #31
│              └─ variant_1: struct #44
│                 └─ [not]: union '_string_filter' #43
│                    ├─ variant_0: string #31
│                    ├─ variant_1: struct #34
│                    │  └─ [equals]: string #31
│                    ├─ variant_2: struct #35
│                    │  └─ [not]: string #31
│                    ├─ variant_3: struct #36
│                    │  └─ [in]: array #33
│                    │     └─ item: string #31
│                    ├─ variant_4: struct #37
│                    │  └─ [notIn]: array #33
│                    │     └─ item: string #31
│                    ├─ variant_5: struct #40
│                    │  ├─ [contains]: string #31
│                    │  └─ [mode]: optional #39
│                    │     └─ item: string #38 enum{ '"insensitive"' }
│                    ├─ variant_6: struct #41
│                    │  └─ [search]: string #31
│                    └─ variant_7: struct #42
│                       ├─ [startsWith]: optional #32
│                       │  └─ item: string #31
│                       └─ [endsWith]: optional #32
│                          └─ item: string #31
├─ [AND]: optional '_76__75_QueryPostWhereInput[]?' #76
│  └─ item: array '_75_QueryPostWhereInput[]' #75
│     └─ item: &QueryPostWhereInput #74
├─ [OR]: optional '_76__75_QueryPostWhereInput[]?' #76
│  └─ item: array '_75_QueryPostWhereInput[]' #75
│     └─ item: &QueryPostWhereInput #74
└─ [NOT]: optional '_77_QueryPostWhereInput?' #77
   └─ item: &QueryPostWhereInput #74

