---
source: typegraph/core/src/runtimes/prisma/type_generation/mod.rs
expression: "tree::print(types.input)"
---
root: struct '_User_QueryInput_group_by' #175
├─ [where]: optional 'QueryUserWhereInput?' #146
│  └─ item: struct 'QueryUserWhereInput' #145
│     ├─ [id]: optional '_integer_filter_c?' #134
│     │  └─ item: optional '_integer_filter_c' #38
│     │     └─ item: union #37
│     │        ├─ variant_0: either '_integer_filter' #35
│     │        │  ├─ variant_0: integer #27
│     │        │  ├─ variant_1: struct #30
│     │        │  │  └─ [equals]: integer #27
│     │        │  ├─ variant_2: struct #31
│     │        │  │  └─ [not]: integer #27
│     │        │  ├─ variant_3: struct #32
│     │        │  │  ├─ [lt]: optional #28
│     │        │  │  │  └─ item: integer #27
│     │        │  │  ├─ [gt]: optional #28
│     │        │  │  │  └─ item: integer #27
│     │        │  │  ├─ [lte]: optional #28
│     │        │  │  │  └─ item: integer #27
│     │        │  │  └─ [gte]: optional #28
│     │        │  │     └─ item: integer #27
│     │        │  ├─ variant_4: struct #33
│     │        │  │  └─ [in]: array #29
│     │        │  │     └─ item: integer #27
│     │        │  └─ variant_5: struct #34
│     │        │     └─ [notIn]: array #29
│     │        │        └─ item: integer #27
│     │        └─ variant_1: struct #36
│     │           └─ [not]: either '_integer_filter' #35
│     │              ├─ variant_0: integer #27
│     │              ├─ variant_1: struct #30
│     │              │  └─ [equals]: integer #27
│     │              ├─ variant_2: struct #31
│     │              │  └─ [not]: integer #27
│     │              ├─ variant_3: struct #32
│     │              │  ├─ [lt]: optional #28
│     │              │  │  └─ item: integer #27
│     │              │  ├─ [gt]: optional #28
│     │              │  │  └─ item: integer #27
│     │              │  ├─ [lte]: optional #28
│     │              │  │  └─ item: integer #27
│     │              │  └─ [gte]: optional #28
│     │              │     └─ item: integer #27
│     │              ├─ variant_4: struct #33
│     │              │  └─ [in]: array #29
│     │              │     └─ item: integer #27
│     │              └─ variant_5: struct #34
│     │                 └─ [notIn]: array #29
│     │                    └─ item: integer #27
│     ├─ [name]: optional '_string_filter_c?' #135
│     │  └─ item: optional '_string_filter_c' #24
│     │     └─ item: union #23
│     │        ├─ variant_0: union '_string_filter' #21
│     │        │  ├─ variant_0: string #9
│     │        │  ├─ variant_1: struct #12
│     │        │  │  └─ [equals]: string #9
│     │        │  ├─ variant_2: struct #13
│     │        │  │  └─ [not]: string #9
│     │        │  ├─ variant_3: struct #14
│     │        │  │  └─ [in]: array #11
│     │        │  │     └─ item: string #9
│     │        │  ├─ variant_4: struct #15
│     │        │  │  └─ [notIn]: array #11
│     │        │  │     └─ item: string #9
│     │        │  ├─ variant_5: struct #18
│     │        │  │  ├─ [contains]: string #9
│     │        │  │  └─ [mode]: optional #17
│     │        │  │     └─ item: string #16 enum{ '"insensitive"' }
│     │        │  ├─ variant_6: struct #19
│     │        │  │  └─ [search]: string #9
│     │        │  └─ variant_7: struct #20
│     │        │     ├─ [startsWith]: optional #10
│     │        │     │  └─ item: string #9
│     │        │     └─ [endsWith]: optional #10
│     │        │        └─ item: string #9
│     │        └─ variant_1: struct #22
│     │           └─ [not]: union '_string_filter' #21
│     │              ├─ variant_0: string #9
│     │              ├─ variant_1: struct #12
│     │              │  └─ [equals]: string #9
│     │              ├─ variant_2: struct #13
│     │              │  └─ [not]: string #9
│     │              ├─ variant_3: struct #14
│     │              │  └─ [in]: array #11
│     │              │     └─ item: string #9
│     │              ├─ variant_4: struct #15
│     │              │  └─ [notIn]: array #11
│     │              │     └─ item: string #9
│     │              ├─ variant_5: struct #18
│     │              │  ├─ [contains]: string #9
│     │              │  └─ [mode]: optional #17
│     │              │     └─ item: string #16 enum{ '"insensitive"' }
│     │              ├─ variant_6: struct #19
│     │              │  └─ [search]: string #9
│     │              └─ variant_7: struct #20
│     │                 ├─ [startsWith]: optional #10
│     │                 │  └─ item: string #9
│     │                 └─ [endsWith]: optional #10
│     │                    └─ item: string #9
│     ├─ [posts]: optional '_126WithFilters_norel?' #139
│     │  └─ item: struct '_126WithFilters_norel' #138
│     │     ├─ [id]: optional '_integer_filter_c?' #136
│     │     │  └─ item: optional '_integer_filter_c' #38
│     │     │     └─ item: union #37
│     │     │        ├─ variant_0: either '_integer_filter' #35
│     │     │        │  ├─ variant_0: integer #27
│     │     │        │  ├─ variant_1: struct #30
│     │     │        │  │  └─ [equals]: integer #27
│     │     │        │  ├─ variant_2: struct #31
│     │     │        │  │  └─ [not]: integer #27
│     │     │        │  ├─ variant_3: struct #32
│     │     │        │  │  ├─ [lt]: optional #28
│     │     │        │  │  │  └─ item: integer #27
│     │     │        │  │  ├─ [gt]: optional #28
│     │     │        │  │  │  └─ item: integer #27
│     │     │        │  │  ├─ [lte]: optional #28
│     │     │        │  │  │  └─ item: integer #27
│     │     │        │  │  └─ [gte]: optional #28
│     │     │        │  │     └─ item: integer #27
│     │     │        │  ├─ variant_4: struct #33
│     │     │        │  │  └─ [in]: array #29
│     │     │        │  │     └─ item: integer #27
│     │     │        │  └─ variant_5: struct #34
│     │     │        │     └─ [notIn]: array #29
│     │     │        │        └─ item: integer #27
│     │     │        └─ variant_1: struct #36
│     │     │           └─ [not]: either '_integer_filter' #35
│     │     │              ├─ variant_0: integer #27
│     │     │              ├─ variant_1: struct #30
│     │     │              │  └─ [equals]: integer #27
│     │     │              ├─ variant_2: struct #31
│     │     │              │  └─ [not]: integer #27
│     │     │              ├─ variant_3: struct #32
│     │     │              │  ├─ [lt]: optional #28
│     │     │              │  │  └─ item: integer #27
│     │     │              │  ├─ [gt]: optional #28
│     │     │              │  │  └─ item: integer #27
│     │     │              │  ├─ [lte]: optional #28
│     │     │              │  │  └─ item: integer #27
│     │     │              │  └─ [gte]: optional #28
│     │     │              │     └─ item: integer #27
│     │     │              ├─ variant_4: struct #33
│     │     │              │  └─ [in]: array #29
│     │     │              │     └─ item: integer #27
│     │     │              └─ variant_5: struct #34
│     │     │                 └─ [notIn]: array #29
│     │     │                    └─ item: integer #27
│     │     └─ [title]: optional '_string_filter_c?' #137
│     │        └─ item: optional '_string_filter_c' #24
│     │           └─ item: union #23
│     │              ├─ variant_0: union '_string_filter' #21
│     │              │  ├─ variant_0: string #9
│     │              │  ├─ variant_1: struct #12
│     │              │  │  └─ [equals]: string #9
│     │              │  ├─ variant_2: struct #13
│     │              │  │  └─ [not]: string #9
│     │              │  ├─ variant_3: struct #14
│     │              │  │  └─ [in]: array #11
│     │              │  │     └─ item: string #9
│     │              │  ├─ variant_4: struct #15
│     │              │  │  └─ [notIn]: array #11
│     │              │  │     └─ item: string #9
│     │              │  ├─ variant_5: struct #18
│     │              │  │  ├─ [contains]: string #9
│     │              │  │  └─ [mode]: optional #17
│     │              │  │     └─ item: string #16 enum{ '"insensitive"' }
│     │              │  ├─ variant_6: struct #19
│     │              │  │  └─ [search]: string #9
│     │              │  └─ variant_7: struct #20
│     │              │     ├─ [startsWith]: optional #10
│     │              │     │  └─ item: string #9
│     │              │     └─ [endsWith]: optional #10
│     │              │        └─ item: string #9
│     │              └─ variant_1: struct #22
│     │                 └─ [not]: union '_string_filter' #21
│     │                    ├─ variant_0: string #9
│     │                    ├─ variant_1: struct #12
│     │                    │  └─ [equals]: string #9
│     │                    ├─ variant_2: struct #13
│     │                    │  └─ [not]: string #9
│     │                    ├─ variant_3: struct #14
│     │                    │  └─ [in]: array #11
│     │                    │     └─ item: string #9
│     │                    ├─ variant_4: struct #15
│     │                    │  └─ [notIn]: array #11
│     │                    │     └─ item: string #9
│     │                    ├─ variant_5: struct #18
│     │                    │  ├─ [contains]: string #9
│     │                    │  └─ [mode]: optional #17
│     │                    │     └─ item: string #16 enum{ '"insensitive"' }
│     │                    ├─ variant_6: struct #19
│     │                    │  └─ [search]: string #9
│     │                    └─ variant_7: struct #20
│     │                       ├─ [startsWith]: optional #10
│     │                       │  └─ item: string #9
│     │                       └─ [endsWith]: optional #10
│     │                          └─ item: string #9
│     ├─ [AND]: optional 'QueryUserWhereInput[]?' #143
│     │  └─ item: array 'QueryUserWhereInput[]' #142
│     │     └─ item: &QueryUserWhereInput #141
│     ├─ [OR]: optional 'QueryUserWhereInput[]?' #143
│     │  └─ item: array 'QueryUserWhereInput[]' #142
│     │     └─ item: &QueryUserWhereInput #141
│     └─ [NOT]: optional 'QueryUserWhereInput?' #144
│        └─ item: &QueryUserWhereInput #141
├─ [orderBy]: optional '_123_OrderBy_with_aggregates?' #156
│  └─ item: array '_123_OrderBy_with_aggregates' #155
│     └─ item: struct #154
│        ├─ [_count]: optional #148
│        │  └─ item: struct #147
│        │     ├─ [id]: optional '_Sort' #51
│        │     │  └─ item: union #50
│        │     │     ├─ variant_0: struct #49
│        │     │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │     │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │     ├─ [name]: optional '_Sort' #51
│        │     │  └─ item: union #50
│        │     │     ├─ variant_0: struct #49
│        │     │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │     │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │     └─ [posts]: optional '_Sort' #51
│        │        └─ item: union #50
│        │           ├─ variant_0: struct #49
│        │           │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        ├─ [_avg]: optional #150
│        │  └─ item: struct #149
│        │     └─ [id]: optional '_Sort' #51
│        │        └─ item: union #50
│        │           ├─ variant_0: struct #49
│        │           │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        ├─ [_sum]: optional #150
│        │  └─ item: struct #149
│        │     └─ [id]: optional '_Sort' #51
│        │        └─ item: union #50
│        │           ├─ variant_0: struct #49
│        │           │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        ├─ [_min]: optional #150
│        │  └─ item: struct #149
│        │     └─ [id]: optional '_Sort' #51
│        │        └─ item: union #50
│        │           ├─ variant_0: struct #49
│        │           │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        ├─ [_max]: optional #150
│        │  └─ item: struct #149
│        │     └─ [id]: optional '_Sort' #51
│        │        └─ item: union #50
│        │           ├─ variant_0: struct #49
│        │           │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │           └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        ├─ [id]: optional '_Sort' #51
│        │  └─ item: union #50
│        │     ├─ variant_0: struct #49
│        │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        ├─ [name]: optional '_Sort' #51
│        │  └─ item: union #50
│        │     ├─ variant_0: struct #49
│        │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│        └─ [posts]: optional '_SortByAggregates' #153
│           └─ item: struct #152
│              ├─ [_count]: optional '_Sort' #51
│              │  └─ item: union #50
│              │     ├─ variant_0: struct #49
│              │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              ├─ [_avg]: optional '_Sort' #51
│              │  └─ item: union #50
│              │     ├─ variant_0: struct #49
│              │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              ├─ [_sum]: optional '_Sort' #51
│              │  └─ item: union #50
│              │     ├─ variant_0: struct #49
│              │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              ├─ [_min]: optional '_Sort' #51
│              │  └─ item: union #50
│              │     ├─ variant_0: struct #49
│              │     │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              │     └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│              └─ [_max]: optional '_Sort' #51
│                 └─ item: union #50
│                    ├─ variant_0: struct #49
│                    │  └─ [sort]: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
│                    └─ variant_1: string '_SortOrder' #47 enum{ '"asc"', '"desc"' }
├─ [take]: optional '_Take?' #157
│  └─ item: integer '_Take' #63
├─ [skip]: optional '_Skip?' #158
│  └─ item: integer '_Skip' #65
├─ [by]: array '_User_GroupingFields' #160
│  └─ item: string #159 enum{ '"id"', '"name"' }
└─ [having]: optional '_User_Having?' #174
   └─ item: union '_User_Having' #173
      ├─ variant_0: struct '_163WithFilters_norel_with_aggregates' #166
      │  ├─ [id]: optional '_integer_filter_with_aggregates_c?' #164
      │  │  └─ item: optional '_integer_filter_with_aggregates_c' #92
      │  │     └─ item: union #91
      │  │        ├─ variant_0: union #89
      │  │        │  ├─ variant_0: either '_integer_filter' #35
      │  │        │  │  ├─ variant_0: integer #27
      │  │        │  │  ├─ variant_1: struct #30
      │  │        │  │  │  └─ [equals]: integer #27
      │  │        │  │  ├─ variant_2: struct #31
      │  │        │  │  │  └─ [not]: integer #27
      │  │        │  │  ├─ variant_3: struct #32
      │  │        │  │  │  ├─ [lt]: optional #28
      │  │        │  │  │  │  └─ item: integer #27
      │  │        │  │  │  ├─ [gt]: optional #28
      │  │        │  │  │  │  └─ item: integer #27
      │  │        │  │  │  ├─ [lte]: optional #28
      │  │        │  │  │  │  └─ item: integer #27
      │  │        │  │  │  └─ [gte]: optional #28
      │  │        │  │  │     └─ item: integer #27
      │  │        │  │  ├─ variant_4: struct #33
      │  │        │  │  │  └─ [in]: array #29
      │  │        │  │  │     └─ item: integer #27
      │  │        │  │  └─ variant_5: struct #34
      │  │        │  │     └─ [notIn]: array #29
      │  │        │  │        └─ item: integer #27
      │  │        │  ├─ variant_1: struct #84
      │  │        │  │  └─ [_count]: either '_integer_filter' #35
      │  │        │  │     ├─ variant_0: integer #27
      │  │        │  │     ├─ variant_1: struct #30
      │  │        │  │     │  └─ [equals]: integer #27
      │  │        │  │     ├─ variant_2: struct #31
      │  │        │  │     │  └─ [not]: integer #27
      │  │        │  │     ├─ variant_3: struct #32
      │  │        │  │     │  ├─ [lt]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  ├─ [gt]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  ├─ [lte]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  └─ [gte]: optional #28
      │  │        │  │     │     └─ item: integer #27
      │  │        │  │     ├─ variant_4: struct #33
      │  │        │  │     │  └─ [in]: array #29
      │  │        │  │     │     └─ item: integer #27
      │  │        │  │     └─ variant_5: struct #34
      │  │        │  │        └─ [notIn]: array #29
      │  │        │  │           └─ item: integer #27
      │  │        │  ├─ variant_2: struct #85
      │  │        │  │  └─ [_sum]: either '_integer_filter' #35
      │  │        │  │     ├─ variant_0: integer #27
      │  │        │  │     ├─ variant_1: struct #30
      │  │        │  │     │  └─ [equals]: integer #27
      │  │        │  │     ├─ variant_2: struct #31
      │  │        │  │     │  └─ [not]: integer #27
      │  │        │  │     ├─ variant_3: struct #32
      │  │        │  │     │  ├─ [lt]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  ├─ [gt]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  ├─ [lte]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  └─ [gte]: optional #28
      │  │        │  │     │     └─ item: integer #27
      │  │        │  │     ├─ variant_4: struct #33
      │  │        │  │     │  └─ [in]: array #29
      │  │        │  │     │     └─ item: integer #27
      │  │        │  │     └─ variant_5: struct #34
      │  │        │  │        └─ [notIn]: array #29
      │  │        │  │           └─ item: integer #27
      │  │        │  ├─ variant_3: struct #86
      │  │        │  │  └─ [_avg]: either '_float_filter' #83
      │  │        │  │     ├─ variant_0: float #75
      │  │        │  │     ├─ variant_1: struct #78
      │  │        │  │     │  └─ [equals]: float #75
      │  │        │  │     ├─ variant_2: struct #79
      │  │        │  │     │  └─ [not]: float #75
      │  │        │  │     ├─ variant_3: struct #80
      │  │        │  │     │  ├─ [lt]: optional #76
      │  │        │  │     │  │  └─ item: float #75
      │  │        │  │     │  ├─ [gt]: optional #76
      │  │        │  │     │  │  └─ item: float #75
      │  │        │  │     │  ├─ [lte]: optional #76
      │  │        │  │     │  │  └─ item: float #75
      │  │        │  │     │  └─ [gte]: optional #76
      │  │        │  │     │     └─ item: float #75
      │  │        │  │     ├─ variant_4: struct #81
      │  │        │  │     │  └─ [in]: array #77
      │  │        │  │     │     └─ item: float #75
      │  │        │  │     └─ variant_5: struct #82
      │  │        │  │        └─ [notIn]: array #77
      │  │        │  │           └─ item: float #75
      │  │        │  ├─ variant_4: struct #87
      │  │        │  │  └─ [_min]: either '_integer_filter' #35
      │  │        │  │     ├─ variant_0: integer #27
      │  │        │  │     ├─ variant_1: struct #30
      │  │        │  │     │  └─ [equals]: integer #27
      │  │        │  │     ├─ variant_2: struct #31
      │  │        │  │     │  └─ [not]: integer #27
      │  │        │  │     ├─ variant_3: struct #32
      │  │        │  │     │  ├─ [lt]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  ├─ [gt]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  ├─ [lte]: optional #28
      │  │        │  │     │  │  └─ item: integer #27
      │  │        │  │     │  └─ [gte]: optional #28
      │  │        │  │     │     └─ item: integer #27
      │  │        │  │     ├─ variant_4: struct #33
      │  │        │  │     │  └─ [in]: array #29
      │  │        │  │     │     └─ item: integer #27
      │  │        │  │     └─ variant_5: struct #34
      │  │        │  │        └─ [notIn]: array #29
      │  │        │  │           └─ item: integer #27
      │  │        │  └─ variant_5: struct #88
      │  │        │     └─ [_max]: either '_integer_filter' #35
      │  │        │        ├─ variant_0: integer #27
      │  │        │        ├─ variant_1: struct #30
      │  │        │        │  └─ [equals]: integer #27
      │  │        │        ├─ variant_2: struct #31
      │  │        │        │  └─ [not]: integer #27
      │  │        │        ├─ variant_3: struct #32
      │  │        │        │  ├─ [lt]: optional #28
      │  │        │        │  │  └─ item: integer #27
      │  │        │        │  ├─ [gt]: optional #28
      │  │        │        │  │  └─ item: integer #27
      │  │        │        │  ├─ [lte]: optional #28
      │  │        │        │  │  └─ item: integer #27
      │  │        │        │  └─ [gte]: optional #28
      │  │        │        │     └─ item: integer #27
      │  │        │        ├─ variant_4: struct #33
      │  │        │        │  └─ [in]: array #29
      │  │        │        │     └─ item: integer #27
      │  │        │        └─ variant_5: struct #34
      │  │        │           └─ [notIn]: array #29
      │  │        │              └─ item: integer #27
      │  │        └─ variant_1: struct #90
      │  │           └─ [not]: union #89
      │  │              ├─ variant_0: either '_integer_filter' #35
      │  │              │  ├─ variant_0: integer #27
      │  │              │  ├─ variant_1: struct #30
      │  │              │  │  └─ [equals]: integer #27
      │  │              │  ├─ variant_2: struct #31
      │  │              │  │  └─ [not]: integer #27
      │  │              │  ├─ variant_3: struct #32
      │  │              │  │  ├─ [lt]: optional #28
      │  │              │  │  │  └─ item: integer #27
      │  │              │  │  ├─ [gt]: optional #28
      │  │              │  │  │  └─ item: integer #27
      │  │              │  │  ├─ [lte]: optional #28
      │  │              │  │  │  └─ item: integer #27
      │  │              │  │  └─ [gte]: optional #28
      │  │              │  │     └─ item: integer #27
      │  │              │  ├─ variant_4: struct #33
      │  │              │  │  └─ [in]: array #29
      │  │              │  │     └─ item: integer #27
      │  │              │  └─ variant_5: struct #34
      │  │              │     └─ [notIn]: array #29
      │  │              │        └─ item: integer #27
      │  │              ├─ variant_1: struct #84
      │  │              │  └─ [_count]: either '_integer_filter' #35
      │  │              │     ├─ variant_0: integer #27
      │  │              │     ├─ variant_1: struct #30
      │  │              │     │  └─ [equals]: integer #27
      │  │              │     ├─ variant_2: struct #31
      │  │              │     │  └─ [not]: integer #27
      │  │              │     ├─ variant_3: struct #32
      │  │              │     │  ├─ [lt]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  ├─ [gt]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  ├─ [lte]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  └─ [gte]: optional #28
      │  │              │     │     └─ item: integer #27
      │  │              │     ├─ variant_4: struct #33
      │  │              │     │  └─ [in]: array #29
      │  │              │     │     └─ item: integer #27
      │  │              │     └─ variant_5: struct #34
      │  │              │        └─ [notIn]: array #29
      │  │              │           └─ item: integer #27
      │  │              ├─ variant_2: struct #85
      │  │              │  └─ [_sum]: either '_integer_filter' #35
      │  │              │     ├─ variant_0: integer #27
      │  │              │     ├─ variant_1: struct #30
      │  │              │     │  └─ [equals]: integer #27
      │  │              │     ├─ variant_2: struct #31
      │  │              │     │  └─ [not]: integer #27
      │  │              │     ├─ variant_3: struct #32
      │  │              │     │  ├─ [lt]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  ├─ [gt]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  ├─ [lte]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  └─ [gte]: optional #28
      │  │              │     │     └─ item: integer #27
      │  │              │     ├─ variant_4: struct #33
      │  │              │     │  └─ [in]: array #29
      │  │              │     │     └─ item: integer #27
      │  │              │     └─ variant_5: struct #34
      │  │              │        └─ [notIn]: array #29
      │  │              │           └─ item: integer #27
      │  │              ├─ variant_3: struct #86
      │  │              │  └─ [_avg]: either '_float_filter' #83
      │  │              │     ├─ variant_0: float #75
      │  │              │     ├─ variant_1: struct #78
      │  │              │     │  └─ [equals]: float #75
      │  │              │     ├─ variant_2: struct #79
      │  │              │     │  └─ [not]: float #75
      │  │              │     ├─ variant_3: struct #80
      │  │              │     │  ├─ [lt]: optional #76
      │  │              │     │  │  └─ item: float #75
      │  │              │     │  ├─ [gt]: optional #76
      │  │              │     │  │  └─ item: float #75
      │  │              │     │  ├─ [lte]: optional #76
      │  │              │     │  │  └─ item: float #75
      │  │              │     │  └─ [gte]: optional #76
      │  │              │     │     └─ item: float #75
      │  │              │     ├─ variant_4: struct #81
      │  │              │     │  └─ [in]: array #77
      │  │              │     │     └─ item: float #75
      │  │              │     └─ variant_5: struct #82
      │  │              │        └─ [notIn]: array #77
      │  │              │           └─ item: float #75
      │  │              ├─ variant_4: struct #87
      │  │              │  └─ [_min]: either '_integer_filter' #35
      │  │              │     ├─ variant_0: integer #27
      │  │              │     ├─ variant_1: struct #30
      │  │              │     │  └─ [equals]: integer #27
      │  │              │     ├─ variant_2: struct #31
      │  │              │     │  └─ [not]: integer #27
      │  │              │     ├─ variant_3: struct #32
      │  │              │     │  ├─ [lt]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  ├─ [gt]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  ├─ [lte]: optional #28
      │  │              │     │  │  └─ item: integer #27
      │  │              │     │  └─ [gte]: optional #28
      │  │              │     │     └─ item: integer #27
      │  │              │     ├─ variant_4: struct #33
      │  │              │     │  └─ [in]: array #29
      │  │              │     │     └─ item: integer #27
      │  │              │     └─ variant_5: struct #34
      │  │              │        └─ [notIn]: array #29
      │  │              │           └─ item: integer #27
      │  │              └─ variant_5: struct #88
      │  │                 └─ [_max]: either '_integer_filter' #35
      │  │                    ├─ variant_0: integer #27
      │  │                    ├─ variant_1: struct #30
      │  │                    │  └─ [equals]: integer #27
      │  │                    ├─ variant_2: struct #31
      │  │                    │  └─ [not]: integer #27
      │  │                    ├─ variant_3: struct #32
      │  │                    │  ├─ [lt]: optional #28
      │  │                    │  │  └─ item: integer #27
      │  │                    │  ├─ [gt]: optional #28
      │  │                    │  │  └─ item: integer #27
      │  │                    │  ├─ [lte]: optional #28
      │  │                    │  │  └─ item: integer #27
      │  │                    │  └─ [gte]: optional #28
      │  │                    │     └─ item: integer #27
      │  │                    ├─ variant_4: struct #33
      │  │                    │  └─ [in]: array #29
      │  │                    │     └─ item: integer #27
      │  │                    └─ variant_5: struct #34
      │  │                       └─ [notIn]: array #29
      │  │                          └─ item: integer #27
      │  └─ [name]: optional '_string_filter_c?' #165
      │     └─ item: optional '_string_filter_c' #24
      │        └─ item: union #23
      │           ├─ variant_0: union '_string_filter' #21
      │           │  ├─ variant_0: string #9
      │           │  ├─ variant_1: struct #12
      │           │  │  └─ [equals]: string #9
      │           │  ├─ variant_2: struct #13
      │           │  │  └─ [not]: string #9
      │           │  ├─ variant_3: struct #14
      │           │  │  └─ [in]: array #11
      │           │  │     └─ item: string #9
      │           │  ├─ variant_4: struct #15
      │           │  │  └─ [notIn]: array #11
      │           │  │     └─ item: string #9
      │           │  ├─ variant_5: struct #18
      │           │  │  ├─ [contains]: string #9
      │           │  │  └─ [mode]: optional #17
      │           │  │     └─ item: string #16 enum{ '"insensitive"' }
      │           │  ├─ variant_6: struct #19
      │           │  │  └─ [search]: string #9
      │           │  └─ variant_7: struct #20
      │           │     ├─ [startsWith]: optional #10
      │           │     │  └─ item: string #9
      │           │     └─ [endsWith]: optional #10
      │           │        └─ item: string #9
      │           └─ variant_1: struct #22
      │              └─ [not]: union '_string_filter' #21
      │                 ├─ variant_0: string #9
      │                 ├─ variant_1: struct #12
      │                 │  └─ [equals]: string #9
      │                 ├─ variant_2: struct #13
      │                 │  └─ [not]: string #9
      │                 ├─ variant_3: struct #14
      │                 │  └─ [in]: array #11
      │                 │     └─ item: string #9
      │                 ├─ variant_4: struct #15
      │                 │  └─ [notIn]: array #11
      │                 │     └─ item: string #9
      │                 ├─ variant_5: struct #18
      │                 │  ├─ [contains]: string #9
      │                 │  └─ [mode]: optional #17
      │                 │     └─ item: string #16 enum{ '"insensitive"' }
      │                 ├─ variant_6: struct #19
      │                 │  └─ [search]: string #9
      │                 └─ variant_7: struct #20
      │                    ├─ [startsWith]: optional #10
      │                    │  └─ item: string #9
      │                    └─ [endsWith]: optional #10
      │                       └─ item: string #9
      ├─ variant_1: struct #169
      │  └─ [AND]: array '_User_Having[]' #168
      │     └─ item: &_User_Having #167
      ├─ variant_2: struct #171
      │  └─ [OR]: array '_User_Having[]' #170
      │     └─ item: &_User_Having #167
      └─ variant_3: struct #172
         └─ [NOT]: &_User_Having #167

