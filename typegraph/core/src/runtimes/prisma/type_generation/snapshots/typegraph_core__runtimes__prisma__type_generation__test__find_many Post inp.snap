---
source: typegraph/core/src/runtimes/prisma/type_generation/mod.rs
expression: "tree::print(inp)"
---
root: struct '_Post_QueryInput' #132
├─ [where]: optional '_120_QueryPostWhereInput?' #120
│  └─ item: struct 'QueryPostWhereInput' #119
│     ├─ [id]: optional '_106__integer_filter_c?' #106
│     │  └─ item: optional '_integer_filter_c' #34
│     │     └─ item: union #33
│     │        ├─ variant_0: either '_integer_filter' #31
│     │        │  ├─ variant_0: integer #23
│     │        │  ├─ variant_1: struct #26
│     │        │  │  └─ [equals]: integer #23
│     │        │  ├─ variant_2: struct #27
│     │        │  │  └─ [not]: integer #23
│     │        │  ├─ variant_3: struct #28
│     │        │  │  ├─ [lt]: optional #24
│     │        │  │  │  └─ item: integer #23
│     │        │  │  ├─ [gt]: optional #24
│     │        │  │  │  └─ item: integer #23
│     │        │  │  ├─ [lte]: optional #24
│     │        │  │  │  └─ item: integer #23
│     │        │  │  └─ [gte]: optional #24
│     │        │  │     └─ item: integer #23
│     │        │  ├─ variant_4: struct #29
│     │        │  │  └─ [in]: array #25
│     │        │  │     └─ item: integer #23
│     │        │  └─ variant_5: struct #30
│     │        │     └─ [notIn]: array #25
│     │        │        └─ item: integer #23
│     │        └─ variant_1: struct #32
│     │           └─ [not]: either '_integer_filter' #31
│     │              ├─ variant_0: integer #23
│     │              ├─ variant_1: struct #26
│     │              │  └─ [equals]: integer #23
│     │              ├─ variant_2: struct #27
│     │              │  └─ [not]: integer #23
│     │              ├─ variant_3: struct #28
│     │              │  ├─ [lt]: optional #24
│     │              │  │  └─ item: integer #23
│     │              │  ├─ [gt]: optional #24
│     │              │  │  └─ item: integer #23
│     │              │  ├─ [lte]: optional #24
│     │              │  │  └─ item: integer #23
│     │              │  └─ [gte]: optional #24
│     │              │     └─ item: integer #23
│     │              ├─ variant_4: struct #29
│     │              │  └─ [in]: array #25
│     │              │     └─ item: integer #23
│     │              └─ variant_5: struct #30
│     │                 └─ [notIn]: array #25
│     │                    └─ item: integer #23
│     ├─ [title]: optional '_107__string_filter_c?' #107
│     │  └─ item: optional '_string_filter_c' #20
│     │     └─ item: union #19
│     │        ├─ variant_0: union '_string_filter' #17
│     │        │  ├─ variant_0: string #5
│     │        │  ├─ variant_1: struct #8
│     │        │  │  └─ [equals]: string #5
│     │        │  ├─ variant_2: struct #9
│     │        │  │  └─ [not]: string #5
│     │        │  ├─ variant_3: struct #10
│     │        │  │  └─ [in]: array #7
│     │        │  │     └─ item: string #5
│     │        │  ├─ variant_4: struct #11
│     │        │  │  └─ [notIn]: array #7
│     │        │  │     └─ item: string #5
│     │        │  ├─ variant_5: struct #14
│     │        │  │  ├─ [contains]: string #5
│     │        │  │  └─ [mode]: optional #13
│     │        │  │     └─ item: string #12 enum{ '"insensitive"' }
│     │        │  ├─ variant_6: struct #15
│     │        │  │  └─ [search]: string #5
│     │        │  └─ variant_7: struct #16
│     │        │     ├─ [startsWith]: optional #6
│     │        │     │  └─ item: string #5
│     │        │     └─ [endsWith]: optional #6
│     │        │        └─ item: string #5
│     │        └─ variant_1: struct #18
│     │           └─ [not]: union '_string_filter' #17
│     │              ├─ variant_0: string #5
│     │              ├─ variant_1: struct #8
│     │              │  └─ [equals]: string #5
│     │              ├─ variant_2: struct #9
│     │              │  └─ [not]: string #5
│     │              ├─ variant_3: struct #10
│     │              │  └─ [in]: array #7
│     │              │     └─ item: string #5
│     │              ├─ variant_4: struct #11
│     │              │  └─ [notIn]: array #7
│     │              │     └─ item: string #5
│     │              ├─ variant_5: struct #14
│     │              │  ├─ [contains]: string #5
│     │              │  └─ [mode]: optional #13
│     │              │     └─ item: string #12 enum{ '"insensitive"' }
│     │              ├─ variant_6: struct #15
│     │              │  └─ [search]: string #5
│     │              └─ variant_7: struct #16
│     │                 ├─ [startsWith]: optional #6
│     │                 │  └─ item: string #5
│     │                 └─ [endsWith]: optional #6
│     │                    └─ item: string #5
│     ├─ [author]: optional '_113_UserWhere__skip_72_PostWhere?' #113
│     │  └─ item: struct 'UserWhere__skip_72_PostWhere' #112
│     │     ├─ [id]: optional '_108__integer_filter_c?' #108
│     │     │  └─ item: optional '_integer_filter_c' #34
│     │     │     └─ item: union #33
│     │     │        ├─ variant_0: either '_integer_filter' #31
│     │     │        │  ├─ variant_0: integer #23
│     │     │        │  ├─ variant_1: struct #26
│     │     │        │  │  └─ [equals]: integer #23
│     │     │        │  ├─ variant_2: struct #27
│     │     │        │  │  └─ [not]: integer #23
│     │     │        │  ├─ variant_3: struct #28
│     │     │        │  │  ├─ [lt]: optional #24
│     │     │        │  │  │  └─ item: integer #23
│     │     │        │  │  ├─ [gt]: optional #24
│     │     │        │  │  │  └─ item: integer #23
│     │     │        │  │  ├─ [lte]: optional #24
│     │     │        │  │  │  └─ item: integer #23
│     │     │        │  │  └─ [gte]: optional #24
│     │     │        │  │     └─ item: integer #23
│     │     │        │  ├─ variant_4: struct #29
│     │     │        │  │  └─ [in]: array #25
│     │     │        │  │     └─ item: integer #23
│     │     │        │  └─ variant_5: struct #30
│     │     │        │     └─ [notIn]: array #25
│     │     │        │        └─ item: integer #23
│     │     │        └─ variant_1: struct #32
│     │     │           └─ [not]: either '_integer_filter' #31
│     │     │              ├─ variant_0: integer #23
│     │     │              ├─ variant_1: struct #26
│     │     │              │  └─ [equals]: integer #23
│     │     │              ├─ variant_2: struct #27
│     │     │              │  └─ [not]: integer #23
│     │     │              ├─ variant_3: struct #28
│     │     │              │  ├─ [lt]: optional #24
│     │     │              │  │  └─ item: integer #23
│     │     │              │  ├─ [gt]: optional #24
│     │     │              │  │  └─ item: integer #23
│     │     │              │  ├─ [lte]: optional #24
│     │     │              │  │  └─ item: integer #23
│     │     │              │  └─ [gte]: optional #24
│     │     │              │     └─ item: integer #23
│     │     │              ├─ variant_4: struct #29
│     │     │              │  └─ [in]: array #25
│     │     │              │     └─ item: integer #23
│     │     │              └─ variant_5: struct #30
│     │     │                 └─ [notIn]: array #25
│     │     │                    └─ item: integer #23
│     │     ├─ [name]: optional '_109__string_filter_c?' #109
│     │     │  └─ item: optional '_string_filter_c' #20
│     │     │     └─ item: union #19
│     │     │        ├─ variant_0: union '_string_filter' #17
│     │     │        │  ├─ variant_0: string #5
│     │     │        │  ├─ variant_1: struct #8
│     │     │        │  │  └─ [equals]: string #5
│     │     │        │  ├─ variant_2: struct #9
│     │     │        │  │  └─ [not]: string #5
│     │     │        │  ├─ variant_3: struct #10
│     │     │        │  │  └─ [in]: array #7
│     │     │        │  │     └─ item: string #5
│     │     │        │  ├─ variant_4: struct #11
│     │     │        │  │  └─ [notIn]: array #7
│     │     │        │  │     └─ item: string #5
│     │     │        │  ├─ variant_5: struct #14
│     │     │        │  │  ├─ [contains]: string #5
│     │     │        │  │  └─ [mode]: optional #13
│     │     │        │  │     └─ item: string #12 enum{ '"insensitive"' }
│     │     │        │  ├─ variant_6: struct #15
│     │     │        │  │  └─ [search]: string #5
│     │     │        │  └─ variant_7: struct #16
│     │     │        │     ├─ [startsWith]: optional #6
│     │     │        │     │  └─ item: string #5
│     │     │        │     └─ [endsWith]: optional #6
│     │     │        │        └─ item: string #5
│     │     │        └─ variant_1: struct #18
│     │     │           └─ [not]: union '_string_filter' #17
│     │     │              ├─ variant_0: string #5
│     │     │              ├─ variant_1: struct #8
│     │     │              │  └─ [equals]: string #5
│     │     │              ├─ variant_2: struct #9
│     │     │              │  └─ [not]: string #5
│     │     │              ├─ variant_3: struct #10
│     │     │              │  └─ [in]: array #7
│     │     │              │     └─ item: string #5
│     │     │              ├─ variant_4: struct #11
│     │     │              │  └─ [notIn]: array #7
│     │     │              │     └─ item: string #5
│     │     │              ├─ variant_5: struct #14
│     │     │              │  ├─ [contains]: string #5
│     │     │              │  └─ [mode]: optional #13
│     │     │              │     └─ item: string #12 enum{ '"insensitive"' }
│     │     │              ├─ variant_6: struct #15
│     │     │              │  └─ [search]: string #5
│     │     │              └─ variant_7: struct #16
│     │     │                 ├─ [startsWith]: optional #6
│     │     │                 │  └─ item: string #5
│     │     │                 └─ [endsWith]: optional #6
│     │     │                    └─ item: string #5
│     │     └─ [posts]: optional '_111_PostWhere?' #111
│     │        └─ item: &PostWhere #110
│     ├─ [AND]: optional '_117__116_QueryPostWhereInput[]?' #117
│     │  └─ item: array '_116_QueryPostWhereInput[]' #116
│     │     └─ item: &QueryPostWhereInput #115
│     ├─ [OR]: optional '_117__116_QueryPostWhereInput[]?' #117
│     │  └─ item: array '_116_QueryPostWhereInput[]' #116
│     │     └─ item: &QueryPostWhereInput #115
│     └─ [NOT]: optional '_118_QueryPostWhereInput?' #118
│        └─ item: &QueryPostWhereInput #115
├─ [orderBy]: optional '_126__Post_OrderBy?' #126
│  └─ item: array '_Post_OrderBy' #125
│     └─ item: struct #124
│        ├─ [id]: optional '_Sort' #47
│        │  └─ item: union #46
│        │     ├─ variant_0: struct #45
│        │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        ├─ [title]: optional '_Sort' #47
│        │  └─ item: union #46
│        │     ├─ variant_0: struct #45
│        │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│        └─ [author]: optional '_123__User_OrderBy_excluding___rel_Post_User_1?' #123
│           └─ item: array '_User_OrderBy_excluding___rel_Post_User_1' #122
│              └─ item: struct #121
│                 ├─ [id]: optional '_Sort' #47
│                 │  └─ item: union #46
│                 │     ├─ variant_0: struct #45
│                 │     │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│                 │     └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│                 └─ [name]: optional '_Sort' #47
│                    └─ item: union #46
│                       ├─ variant_0: struct #45
│                       │  └─ [sort]: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
│                       └─ variant_1: string '_SortOrder' #43 enum{ '"asc"', '"desc"' }
├─ [take]: optional '_127__Take?' #127
│  └─ item: integer '_Take' #54
├─ [skip]: optional '_128__Skip?' #128
│  └─ item: integer '_Skip' #56
└─ [distinct]: optional '_131__KeysOf_Post?' #131
   └─ item: array '_KeysOf_Post' #130
      └─ item: string #129 enum{ '"id"', '"title"', '"author"' }

