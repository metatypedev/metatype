(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4039],{26493:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(13274),i=n(74169),s=n(91696);const r={},o="Backend for frontend",l={id:"backend-for-frontend/index",title:"Backend for frontend",description:"Backend for frontend (BFF) is an architectural pattern in which each frontend client has a dedicated backend system. It enables client-specific customization of backend APIs with data transformations and optimizes requests by pre-fetching and caching data.",source:"@site/use-cases/backend-for-frontend/index.mdx",sourceDirName:"backend-for-frontend",slug:"/backend-for-frontend/",permalink:"/use-cases/backend-for-frontend/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/use-cases/backend-for-frontend/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"useCases",previous:{title:"Instant APIs on your database",permalink:"/use-cases/automatic-crud-validation/"},next:{title:"Cloud function runner",permalink:"/use-cases/faas-runner/"}},c={},d=[{value:"Case study",id:"case-study",level:2},{value:"Metatype&#39;s solution",id:"metatypes-solution",level:2}];function h(e){const t={h1:"h1",h2:"h2",img:"img",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"backend-for-frontend",children:"Backend for frontend"}),"\n",(0,a.jsx)(t.p,{children:"Backend for frontend (BFF) is an architectural pattern in which each frontend client has a dedicated backend system. It enables client-specific customization of backend APIs with data transformations and optimizes requests by pre-fetching and caching data."}),"\n",(0,a.jsx)(t.h2,{id:"case-study",children:"Case study"}),"\n",(0,a.jsx)("div",{className:"text-center md:float-right p-8",children:(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{src:n(44738).A+""})})}),"\n",(0,a.jsx)(t.p,{children:"Imagine you have a web frontend and a mobile app that both consume data from a microservices-based backend. The web frontend requires certain data fields in a given format, and the mobile app requires the same additional fields in another format."}),"\n",(0,a.jsx)(t.p,{children:"In a traditional architecture, both the web and mobile frontends would have to make separate API calls to the microservices, and then format the data into the appropriate structure themselves. This can lead to duplicated code, increased latency due heavier calls with non-necessary data, and decreased developer efficiency."}),"\n",(0,a.jsx)(t.p,{children:"With a BFF in place, it handles the formatting of the data based on the specific needs of each client. All frontends can thus make a single API call to the BFF, which then communicates with the microservices, retrieves the data, and formats it into the required structure before returning it to the frontend."}),"\n",(0,a.jsx)(t.h2,{id:"metatypes-solution",children:"Metatype's solution"}),"\n",(0,a.jsx)(t.p,{children:"Metatype can act as a generic BFF component, serving multiple dedicated APIs and handling security, authentication and authorization for you. By encapsulating the logic for communicating with the microservices, Metatype helps to ensure that the frontends are as decoupled as possible from the other services, making it easier to make changes to either the frontend or the backend without affecting the other side."}),"\n",(0,a.jsx)(s.A,{typegraph:"backend-for-frontend",python:n(36535),typescript:n(4457),query:n(9724)})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},80534:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});n(79474);var a=n(13274);function i(e){let{name:t,choices:n,choice:i,onChange:s,className:r}=e;return(0,a.jsx)("ul",{className:`pl-0 m-0 list-none w-full ${r??""}`,children:Object.entries(n).map((e=>{let[n,r]=e;return(0,a.jsx)("li",{className:"inline-block rounded-md overflow-clip mr-1",children:(0,a.jsx)("div",{children:(0,a.jsxs)("label",{className:"cursor-pointer",children:[(0,a.jsx)("input",{type:"radio",name:t,value:n,checked:n===i,onChange:()=>s(n),className:"hidden peer"}),(0,a.jsx)("div",{className:"px-3 py-1 bg-slate-100 peer-checked:bg-metared peer-checked:text-white",children:r})]})})},n)}))})}},491:(e,t,n)=>{"use strict";n.d(t,{A:()=>x});var a=n(79474),i=n(18920),s=n(8377),r=n(40803),o=n(87174),l=n(5883),c=n(21806),d=n(13274);const h=e=>{e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function u(e){const{queryEditor:t,variableEditor:n,headerEditor:i}=(0,c.mi)({nonNull:!0}),[s,r]=(0,a.useState)(e.defaultTab),o=(0,c.xb)({onCopyQuery:e.onCopyQuery}),l=(0,c.Ln)();return(0,a.useEffect)((()=>{n&&h(n)}),[s,n]),(0,a.useEffect)((()=>{i&&h(i)}),[s,i]),(0,a.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("extraKeys",{"Alt-G":()=>{t.replaceSelection("@")}}),t.setOption("gutters",[]),t.on("change",h),h(t))}),[t]),(0,a.useEffect)((()=>{n&&(n.setOption("lineNumbers",!1),n.setOption("gutters",[]),n.on("change",h))}),[n]),(0,a.useEffect)((()=>{i&&(i.setOption("lineNumbers",!1),i.setOption("gutters",[]),i.on("change",h))}),[i]),(0,d.jsx)(c.m_.Provider,{children:(0,d.jsxs)("div",{className:"graphiql-editors",children:[(0,d.jsx)("section",{className:"graphiql-query-editor shadow-sm","aria-label":"Query Editor",children:(0,d.jsxs)("div",{className:"graphiql-query-editor-wrapper",children:[(0,d.jsx)(c.wY,{editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly}),(0,d.jsxs)("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands",children:[(0,d.jsx)(c.cl,{}),(0,d.jsx)(c.IB,{onClick:()=>l(),label:"Prettify query (Shift-Ctrl-P)",children:(0,d.jsx)(c.RG,{className:"graphiql-toolbar-icon","aria-hidden":"true"})}),(0,d.jsx)(c.IB,{onClick:()=>o(),label:"Copy query (Shift-Ctrl-C)",children:(0,d.jsx)(c.Td,{className:"graphiql-toolbar-icon","aria-hidden":"true"})})]})]})}),e.noTool?null:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("div",{className:"graphiql-editor-tools p-0 text-sm ",children:(0,d.jsxs)("div",{className:"graphiql-editor-tools-tabs",children:[(0,d.jsx)("div",{className:("variables"===s?"text-slate-800":"")+" p-2 hover:text-slate-800 cursor-pointer",onClick:()=>{r("variables"===s?"":"variables")},children:"Variables"}),(0,d.jsx)("div",{className:("headers"===s?"text-slate-800":"")+" p-2 hover:text-slate-800 cursor-pointer",onClick:()=>{r("headers"===s?"":"headers")},children:"Headers"})]})}),(0,d.jsxs)("section",{className:"graphiql-editor-tool "+(s&&s.length>0?"pt-0":"hidden p-0"),"aria-label":"variables"===s?"Variables":"Headers",children:[(0,d.jsx)(c.G0,{editorTheme:e.editorTheme,isHidden:"variables"!==s,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),(0,d.jsx)(c.B4,{editorTheme:e.editorTheme,isHidden:"headers"!==s,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})]})]})]})})}class p{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,t){this.map.has(e)||(this.length+=1),this.map.set(e,t)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}var m=n(80534);function f(){return(0,c.Vm)({nonNull:!0}).isFetching?(0,d.jsx)(c.y$,{}):null}const g={typegraph:"Typegraph",playground:"Playground"};function b(e){let{typegraph:t,query:n,code:s,headers:h={},variables:b={},tab:x="",noTool:y=!1,defaultMode:v=null}=e;const{siteConfig:{customFields:{tgUrl:k}}}=(0,r.A)(),j=(0,a.useMemo)((()=>new p),[]),N=(0,a.useMemo)((()=>(0,i.a5)({url:`${k}/${t}`})),[]),[w,q]=(0,a.useState)(v);return(0,d.jsxs)("div",{className:"@container miniql mb-5",children:[v?(0,d.jsx)(m.m,{name:"mode",choices:g,choice:w,onChange:q,className:"mb-2"}):null,(0,d.jsx)(c.ql,{fetcher:N,defaultQuery:n.loc?.source.body.trim(),defaultHeaders:JSON.stringify(h),shouldPersistHeaders:!0,variables:JSON.stringify(b),storage:j,children:(0,d.jsxs)("div",{className:(v?"":"md:grid @2xl:grid-cols-2")+" gap-2 w-full order-first",children:[v&&"typegraph"!==w?null:s?.map((e=>(0,d.jsxs)("div",{className:" bg-slate-100 rounded-lg flex flex-col mb-2 md:mb-0",children:[e?.codeFileUrl?(0,d.jsxs)("div",{className:"p-2 text-xs font-light",children:["See/edit full code on"," ",(0,d.jsx)(l.A,{href:`https://github.com/metatypedev/metatype/blob/main/${e?.codeFileUrl}`,children:e?.codeFileUrl})]}):null,e?(0,d.jsx)(o.A,{language:e?.codeLanguage,wrap:!0,className:"flex-1",children:e.content}):null]}))),v&&"playground"!==w?null:(0,d.jsxs)("div",{className:"flex flex-col graphiql-container",children:[(0,d.jsx)("div",{className:"flex-1 graphiql-session",children:(0,d.jsx)(u,{defaultTab:x,noTool:y})}),(0,d.jsxs)("div",{className:"flex-auto graphiql-response min-h-[200px] p-2 mt-2 bg-slate-100 rounded-lg",children:[(0,d.jsx)(f,{}),(0,d.jsx)(c.ny,{})]})]})]})})]})}function x(e){return(0,d.jsx)(s.A,{fallback:(0,d.jsx)("div",{children:"Loading..."}),children:()=>(0,d.jsx)(b,{...e})})}},91696:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var a=n(491),i=(n(79474),n(13274));function s(e){let{python:t,typescript:n,...s}=e;const r=[t&&{content:t.content,codeLanguage:"python",codeFileUrl:t.path},n&&{content:n.content,codeLanguage:"typescript",codeFileUrl:n.path}].filter((e=>!!e));return(0,i.jsx)(a.A,{code:0==r.length?void 0:r,...s})}},9724:e=>{var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"stargazers"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"login"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"user"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]}]}}]}}]}}],loc:{start:0,end:67}};t.loc.source={body:"query {\n  stargazers {\n    login\n    user {\n      name\n    }\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function n(e,t){if("FragmentSpread"===e.kind)t.add(e.name.value);else if("VariableDefinition"===e.kind){var a=e.type;"NamedType"===a.kind&&t.add(a.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){n(e,t)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){n(e,t)})),e.definitions&&e.definitions.forEach((function(e){n(e,t)}))}var a={};t.definitions.forEach((function(e){if(e.name){var t=new Set;n(e,t),a[e.name.value]=t}})),e.exports=t},44738:(e,t,n)=>{"use strict";n.d(t,{A:()=>a});const a=n.p+"assets/images/image.drawio-8088ee38fb8a48af0f464425dcd4e5cd.svg"},36535:e=>{e.exports={content:"",path:"examples/typegraphs/backend-for-frontend.py"}},4457:e=>{e.exports={content:'typegraph({\n  name: "backend-for-frontend",\n}, (g) => {\n  const github = new HttpRuntime("https://api.github.com");\n  const pub = Policy.public();\n\n  const stargazer = t.struct(\n    {\n      "login": t.string({}, { name: "login" }),\n      "user": github.get(\n        t.struct({ "user": t.string().fromParent("login") }),\n        t.struct({ "name": t.string().optional() }),\n        { path: "/users/{user}" },\n      ),\n    },\n  );\n\n  g.expose({\n    stargazers: github.get(\n      t.struct({}),\n      t.list(stargazer),\n      { path: "/repos/metatypedev/metatype/stargazers?per_page=2" },\n    ).withPolicy(pub),\n  });\n});',path:"examples/typegraphs/backend-for-frontend.ts"}},74169:(e,t,n)=>{"use strict";n.d(t,{R:()=>r,x:()=>o});var a=n(79474);const i={},s=a.createContext(i);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);