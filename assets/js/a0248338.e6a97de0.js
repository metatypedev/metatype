(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5028],{84556:(e,t,s)=>{"use strict";s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>h,default:()=>g,frontMatter:()=>p,metadata:()=>a,toc:()=>l});var n=s(13274),r=s(99128),i=s(86671),o=s(30947),d=s(80872);const p={sidebar_position:50},h="Write REST endpoints",a={id:"guides/rest/index",title:"Write REST endpoints",description:"The root materializers, the ones we expose from our typegraphs, are served through a GraphQl API over HTTP.",source:"@site/docs/guides/rest/index.mdx",sourceDirName:"guides/rest",slug:"/guides/rest/",permalink:"/docs/guides/rest/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/guides/rest/index.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"docs",previous:{title:"Upload files to cloud storage",permalink:"/docs/guides/files-upload/"},next:{title:"Secure your requests",permalink:"/docs/guides/securing-requests/"}},c={},l=[];function u(e){const t={a:"a",code:"code",h1:"h1",p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"write-rest-endpoints",children:"Write REST endpoints"}),"\n",(0,n.jsxs)(t.p,{children:["The root materializers, the ones we expose from our typegraphs, are served through a GraphQl API over HTTP.\nIn addition, we can also expose ",(0,n.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/REST",children:"REST"})," APIs using the ",(0,n.jsx)(t.code,{children:"rest"})," method.\nThe method takes GraphQl queries and provides RESTly endpoints for them."]}),"\n",(0,n.jsxs)(i.Ay,{children:[(0,n.jsx)(o.A,{value:"typescript",children:(0,n.jsx)(d.A,{language:"typescript",children:s(75397).content})}),(0,n.jsx)(o.A,{value:"python",children:(0,n.jsx)(d.A,{language:"python",children:s(87611).content})})]}),"\n",(0,n.jsxs)(t.p,{children:["The effect of the root materializer accessed in the query determines the HTTP verb used and the mapping can be found ",(0,n.jsx)(t.a,{href:"/docs/reference/types/functions#effects",children:"here"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["There's also an OpenAPI schema generated from the rest endpoints served under ",(0,n.jsx)(t.code,{children:"{typegate_url}/{typegraph}/rest/_schema"}),".\nA browser based explorer for the OpenAPI schema is served under ",(0,n.jsx)(t.code,{children:"{typegate_url}/{typegraph}/rest"})," as well."]}),"\n"]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},86671:(e,t,s)=>{"use strict";s.d(t,{Ay:()=>o,gc:()=>d});s(79474);var n=s(82192),r=s(2222),i=s(13274);function o(e){let{children:t}=e;const[s,o]=(0,n.e)();return(0,i.jsx)(r.mS,{choices:{typescript:"Typescript SDK",python:"Python SDK"},choice:s,onChange:o,children:t})}function d(e){let{children:t}=e;const[s]=(0,n.e)();return(0,i.jsx)(r.q9,{choices:{typescript:"Typescript SDK",python:"Python SDK"},choice:s,children:t})}},87611:e=>{e.exports={content:'g.expose(\n  postFromUser=deno.func(\n    user,\n    post,\n    code="(_) => ({ id: 12, author: {id: 1}  })",\n  ).with_policy(pub),\n)\n\n# In this example, the query below maps to {typegate_url}/example-rest/rest/get_post?id=..\n# highlight-start\ng.rest(\n  """\n  query get_post($id: Integer) {\n    postFromUser(id: $id) {\n      id\n      author {\n        id\n      }\n    }\n  }\n  """\n)\n# highlight-end',path:"examples/typegraphs/example_rest.py"}},75397:e=>{e.exports={content:'g.expose({\n  postFromUser: deno.func(\n    user,\n    post,\n    { code: "(_) => ({ id: 12, author: {id: 1}  })" },\n  ).withPolicy(pub),\n});\n\n// In this example, the query below maps to {typegate_url}/example-rest/rest/get_post?id=..\n// highlight-start\ng.rest(\n  `\n      query get_post($id: Integer) {\n          postFromUser(id: $id) {\n              id\n              author {\n                  id\n              }\n          }\n      }\n  `,\n);\n// highlight-end',path:"examples/typegraphs/example_rest.ts"}}}]);