"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[96],{40987:(e,t,n)=>{n.d(t,{Ay:()=>s});var i=n(13274),o=n(74169);function r(e){const t={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsxs)(t.p,{children:["Metatype is only supported on macOS and Linux. Windows users should use ",(0,i.jsx)(t.a,{href:"https://learn.microsoft.com/windows/wsl/install",children:"Linux on Windows with WSL"}),"."]})}),"\n",(0,i.jsxs)(t.p,{children:["You can download the binary from the\n",(0,i.jsx)(t.a,{href:"https://github.com/metatypedev/metatype/releases/",children:"releases page"}),", make it\nexecutable and add it to your ",(0,i.jsx)(t.code,{children:"PATH"})," or use the automated method below."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# the installer may ask for your password\ncurl -fsSL https://raw.githubusercontent.com/metatypedev/metatype/main/installer.sh | bash\n\n# (optional, read below) install libwasmedge and... \ncurl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash -s -- -v $WASMEDGE_VERSION\n# (linux) ...add it to dynamic libraries path\nexport LD_LIBRARY_PATH=~/.wasmedge/lib \n# (macos) ...add it to dynamic libraries path \nexport DYLD_LIBRARY_PATH=~/.wasmedge/lib\n# consider permanently adding this to your shell rc\n\n# (for later) upgrade to a newer version\nmeta upgrade\n"})}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.code,{children:"thin"})," version of the cli that doesn't rely on libwasmedge is also provided.\nThis version of the cli doesn't offer the ",(0,i.jsx)(t.code,{children:"typegate"})," command that lets you spin up a typegate for development purposes.\nTo install it, you can pass ",(0,i.jsx)(t.code,{children:"META_THIN=1"})," environment variable to the installer script or download it from the github relases."]})]})}function s(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},73616:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=n(13274),o=n(74169),r=n(40987);const s={sidebar_position:7},a="Meta CLI",l={id:"reference/meta-cli/index",title:"Meta CLI",description:"Meta-cli version",source:"@site/docs/reference/meta-cli/index.mdx",sourceDirName:"reference/meta-cli",slug:"/reference/meta-cli/",permalink:"/docs/reference/meta-cli/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/meta-cli/index.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docs",previous:{title:"Synchronization",permalink:"/docs/reference/typegate/synchronization/"},next:{title:"Configuration file",permalink:"/docs/reference/meta-cli/configuration-file"}},c={},d=[{value:"Development",id:"development",level:2},{value:"Deployment",id:"deployment",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"meta-cli",children:"Meta CLI"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/metatypedev/metatype/releases",children:(0,i.jsx)(t.img,{src:"https://img.shields.io/github/v/release/metatypedev/metatype?include_prereleases&label=meta-cli",alt:"Meta-cli version"})})}),"\n",(0,i.jsx)(r.Ay,{}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"meta"})," is a command line interface for interacting with the typegate and provide a simple, yet complete, developer experience. The ",(0,i.jsx)(t.code,{children:"metatype.yml"})," file allows you to configure your environment and CLI settings, see ",(0,i.jsx)(t.a,{href:"../reference/meta-cli/configuration-file",children:"configuration file"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"development",children:"Development"}),"\n",(0,i.jsx)(t.p,{children:"It watches for changes in your typegraphs and refresh your development typegate node on the fly."}),"\n",(0,i.jsx)(t.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsx)(t.p,{children:"It deploy your typegraph to the Metatype Cloud or your self-hosted typegate instances in a single command."})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},74169:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(79474);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);