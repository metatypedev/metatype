(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5028],{3894:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>p,toc:()=>h});var s=n(86070),r=n(25710),o=(n(7871),n(65671));const i={sidebar_position:50},d="Write REST endpoints",p={id:"guides/rest/index",title:"Write REST endpoints",description:"The root functions, the ones we expose from our typegraphs, are served through a GraphQl API over HTTP.",source:"@site/docs/guides/rest/index.mdx",sourceDirName:"guides/rest",slug:"/guides/rest/",permalink:"/docs/guides/rest/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/docs/metatype.dev/docs/guides/rest/index.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"docs",previous:{title:"Upload files to cloud storage",permalink:"/docs/guides/files-upload/"},next:{title:"Secure your requests",permalink:"/docs/guides/securing-requests/"}},a={},h=[];function c(e){const t={a:"a",code:"code",h1:"h1",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"write-rest-endpoints",children:"Write REST endpoints"}),"\n",(0,s.jsxs)(t.p,{children:["The root functions, the ones we expose from our typegraphs, are served through a GraphQl API over HTTP.\nIn addition, we can also expose ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/REST",children:"REST"})," APIs using the ",(0,s.jsx)(t.code,{children:"rest"})," method.\nThe method takes GraphQl queries and provides RESTly endpoints for them."]}),"\n",(0,s.jsx)(o.A,{python:n(34868),typescript:n(70370),disablePlayground:!0}),"\n",(0,s.jsxs)(t.p,{children:["The effect of the root function accessed in the query determines the HTTP verb used, and the mapping can be found ",(0,s.jsx)(t.a,{href:"/docs/reference/types/functions#effects",children:"here"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["There's also an OpenAPI schema generated from the rest endpoints served under ",(0,s.jsx)(t.code,{children:"{typegate_url}/{typegraph}/rest/_schema"}),".\nA browser-based explorer for the OpenAPI schema is served under ",(0,s.jsx)(t.code,{children:"{typegate_url}/{typegraph}/rest"})," as well."]}),"\n",(0,s.jsxs)(t.p,{children:["You can refer to the ",(0,s.jsx)(t.a,{href:"/docs/reference/rest",children:"REST reference"})," section for more information."]}),"\n"]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},65671:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var s=n(98302),r=(n(30758),n(86070));function o(e){let{python:t,typescript:n,...o}=e;const i=[t&&{content:t.content,codeLanguage:"python",codeFileUrl:t.path},n&&{content:n.content,codeLanguage:"typescript",codeFileUrl:n.path}].filter((e=>!!e));return(0,r.jsx)(s.A,{code:0==i.length?void 0:i,...o})}},34868:e=>{e.exports={content:'g.expose(\n  postFromUser=deno.func(\n    user,\n    post,\n    code="(_) => ({ id: 12, author: {id: 1}  })",\n  ).with_policy(pub),\n)\n\n# In this example, the query below maps to {typegate_url}/example-rest/rest/get_post?id=..\n# highlight-start\ng.rest(\n  """\n  query get_post($id: Integer) {\n    postFromUser(id: $id) {\n      id\n      author {\n        id\n      }\n    }\n  }\n  """\n)\n# highlight-end',path:"../examples/typegraphs/example_rest.py"}},70370:e=>{e.exports={content:'g.expose({\n  postFromUser: deno\n    .func(user, post, { code: "(_) => ({ id: 12, author: {id: 1}  })" })\n    .withPolicy(pub),\n});\n\n// In this example, the query below maps to {typegate_url}/example-rest/rest/get_post?id=..\n// highlight-start\ng.rest(\n  `\n    query get_post($id: Integer) {\n        postFromUser(id: $id) {\n            id\n            author {\n                id\n            }\n        }\n    }\n`\n);\n// highlight-end',path:"../examples/typegraphs/example_rest.ts"}}}]);