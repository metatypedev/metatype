"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[681],{36491:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(13274),r=n(74169);const o={},a="Configuration file",s={id:"reference/meta-cli/configuration-file",title:"Configuration file",description:"metatype.yml Example file",source:"@site/docs/reference/meta-cli/configuration-file.mdx",sourceDirName:"reference/meta-cli",slug:"/reference/meta-cli/configuration-file",permalink:"/docs/reference/meta-cli/configuration-file",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/meta-cli/configuration-file.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Meta CLI",permalink:"/docs/reference/meta-cli/"},next:{title:"Changelog",permalink:"/docs/reference/changelog"}},c={},l=[{value:"<code>metatype.yml</code> Example file",id:"metatypeyml-example-file",level:2},{value:"Automatic secret loading support",id:"automatic-secret-loading-support",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"configuration-file",children:"Configuration file"}),"\n",(0,i.jsxs)(t.h2,{id:"metatypeyml-example-file",children:[(0,i.jsx)(t.code,{children:"metatype.yml"})," Example file"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'typegates:\n  dev:\n    url: http://localhost:7890\n    username: admin\n    password: password\n\ntypegraphs:\n  python:\n    include: "**/*.py"\n  materializers:\n    prisma:\n      migrations_path: "migrations"\n'})}),"\n",(0,i.jsx)(t.h2,{id:"automatic-secret-loading-support",children:"Automatic secret loading support"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://github.com/zifeo/lade",children:"Lade"})," is a secret loading tool that transparently inject environment variables from a variety of sources. It works with Fish, Bash or Zsh and currently supports Doppler, Infisical and 1Password as vault source."]}),"\n",(0,i.jsxs)(t.p,{children:["To use Lade with Metatype, you can use the ",(0,i.jsx)(t.code,{children:"op://"}),", ",(0,i.jsx)(t.code,{children:"infisical://"})," or ",(0,i.jsx)(t.code,{children:"doppler://"})," prefixes in your configuration file. It will then use the CLI of the vault to securely load the required secrets. For example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"typegates:\n  dev:\n    url: http://localhost:7890\n    username: op://VAULT_NAME/SECRET_NAME/FIELD_NAME\n    password: infisical://app.infisical.com/PROJECT_NAME/ENV_NAME/SECRET_NAME\n"})}),"\n",(0,i.jsx)(t.p,{children:"More of Lade documentation"})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},74169:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>s});var i=n(79474);const r={},o=i.createContext(r);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);