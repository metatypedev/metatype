"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6941],{46097:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=t(13274),i=t(25618);const r={},d="Synchronization",a={id:"reference/typegate/synchronization/index",title:"Synchronization",description:"The typegate run in either on of the following modes:",source:"@site/docs/reference/typegate/synchronization/index.mdx",sourceDirName:"reference/typegate/synchronization",slug:"/reference/typegate/synchronization/",permalink:"/docs/reference/typegate/synchronization/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/typegate/synchronization/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Rate limiting",permalink:"/docs/reference/typegate/rate-limiting/"},next:{title:"Meta CLI",permalink:"/docs/reference/meta-cli/"}},c={},l=[{value:"System setup",id:"system-setup",level:2},{value:"Load balancer",id:"load-balancer",level:3},{value:"Redis database",id:"redis-database",level:3},{value:"S3 storage",id:"s3-storage",level:3},{value:"Typegate instances",id:"typegate-instances",level:3},{value:"Typegate configuration",id:"typegate-configuration",level:2},{value:"Synchronized mode features",id:"synchronized-mode-features",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"synchronization",children:"Synchronization"}),"\n",(0,s.jsx)(n.p,{children:"The typegate run in either on of the following modes:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"Single instance mode:"})," a single typegate instance runs all the workloads;"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"Synchronized mode:"})," the workloads can be shared accross multiple typegraph instances."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"system-setup",children:"System setup"}),"\n",(0,s.jsx)(n.p,{children:"To enable multiple typegate instance support, the system need the following services:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Service"}),(0,s.jsx)(n.th,{children:"Role"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Load balancer"}),(0,s.jsx)(n.td,{children:"Share the loads accross the different typegate instances"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Redis database"}),(0,s.jsx)(n.td,{children:"Used for synchronization between typegate instances"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"S3 storage"}),(0,s.jsx)(n.td,{children:"Store all the shared files/artifacts for the typegate instances"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Typegate instances"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.em,{children:"Obvious"})})]})]})]}),"\n",(0,s.jsx)("img",{src:"/images/system_setup.drawio.svg",alt:"System setup"}),"\n",(0,s.jsx)(n.h3,{id:"load-balancer",children:"Load balancer"}),"\n",(0,s.jsx)(n.p,{children:"The setup does not require a specific load balancer software/hardware.\nAny load balancer can do the job."}),"\n",(0,s.jsx)(n.h3,{id:"redis-database",children:"Redis database"}),"\n",(0,s.jsx)(n.p,{children:"A single redis instance can be shared by multiple systems, configured with\ndifferent database numbers."}),"\n",(0,s.jsx)(n.h3,{id:"s3-storage",children:"S3 storage"}),"\n",(0,s.jsx)(n.p,{children:"Any S3-compatible object store is supported for the file/artifact storage."}),"\n",(0,s.jsx)(n.p,{children:"One S3 storage might be shared by multiple systems.\nHowever, each system must be configured to use its own dedicated bucket."}),"\n",(0,s.jsx)(n.h3,{id:"typegate-instances",children:"Typegate instances"}),"\n",(0,s.jsx)(n.p,{children:"The typegate instances are configured with environment variables.\nAll the instances of the system must share the same value\nfor the synchronization variables."}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"#typegate-configuration",children:"configuration"})," for details."]}),"\n",(0,s.jsx)(n.h2,{id:"typegate-configuration",children:"Typegate configuration"}),"\n",(0,s.jsx)(n.p,{children:"The typegate instances that at the core of the system must share\nthe configuration variables."}),"\n",(0,s.jsxs)(n.p,{children:["Synchronization variable names start with ",(0,s.jsx)(n.code,{children:"SYNC_"}),"."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If no ",(0,s.jsx)(n.code,{children:"SYNC_*"})," variable is present, the typegate will run in the default\nsingle instance mode."]}),"\n",(0,s.jsxs)(n.li,{children:["The typegate will fail to start if any of the ",(0,s.jsx)(n.code,{children:"SYNC_*"})," variables is present\nand some required ",(0,s.jsx)(n.code,{children:"SYNC_*"})," variable is missing."]}),"\n"]})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_REDIS_URL (",(0,s.jsx)(n.em,{children:"Required"}),")"]}),(0,s.jsx)(n.td,{children:"URL to the Redis database. Must include the database number."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_REDIS_PASSWORD (",(0,s.jsx)(n.em,{children:"Optional"}),")"]}),(0,s.jsx)(n.td,{children:"Redis database password, can be included in SYNC_REDIS_URL;"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_S3_HOST (",(0,s.jsx)(n.em,{children:"Required"}),")"]}),(0,s.jsx)(n.td,{children:"Hostname of the S3 store;"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_S3_REGION (",(0,s.jsx)(n.em,{children:"Required"}),")"]}),(0,s.jsx)(n.td,{children:"S3 region;"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_S3_ACCESS_KEY (",(0,s.jsx)(n.em,{children:"Required"}),")"]}),(0,s.jsx)(n.td,{children:"Access key for the S3 store credentials;"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_S3_SECRET_KEY (",(0,s.jsx)(n.em,{children:"Required"}),")"]}),(0,s.jsx)(n.td,{children:"Access key secret for the S3 store credentials;"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_S3_PATH_STYLE (",(0,s.jsx)(n.em,{children:"Optional"}),")"]}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"true"})," or ",(0,s.jsx)(n.code,{children:"false"}),", force path style if ",(0,s.jsx)(n.code,{children:"true"}),"."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:["SYNC_S3_BUCKET (",(0,s.jsx)(n.em,{children:"Required"}),")"]}),(0,s.jsx)(n.td,{children:"The bucket to be used for the system (dedicated)."})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"synchronized-mode-features",children:"Synchronized mode features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sharing typegraphs accross multiple typegate instances"}),"\n",(0,s.jsx)(n.li,{children:"History (WIP)"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},25618:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var s=t(79474);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);