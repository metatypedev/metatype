"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2606],{72515:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var r=n(13274),s=n(99128),i=n(24554);const a={sidebar_position:6},d="Typegate",l={id:"reference/typegate/index",title:"Typegate",description:"Typegate version",source:"@site/docs/reference/typegate/index.mdx",sourceDirName:"reference/typegate",slug:"/reference/typegate/",permalink:"/docs/reference/typegate/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/typegate/index.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Specifications",permalink:"/docs/reference/typegraph/specifications"},next:{title:"Authentication",permalink:"/docs/reference/typegate/authentication/"}},c={},o=[{value:"Internal APIs",id:"internal-apis",level:2},{value:"Request lifecycle",id:"request-lifecycle",level:2},{value:"HTTP/GraphQL interface",id:"httpgraphql-interface",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Environment variables.",id:"environment-variables",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"typegate",children:"Typegate"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/metatypedev/metatype/pkgs/container/typegate",children:(0,r.jsx)(t.img,{src:"https://ghcr-badge.deta.dev/metatypedev/typegate/latest_tag?trim=major&label=typegate",alt:"Typegate version"})})}),"\n",(0,r.jsx)(i.Ay,{}),"\n",(0,r.jsx)(t.h2,{id:"internal-apis",children:"Internal APIs"}),"\n",(0,r.jsx)(t.p,{children:"Most of the internal APIs are still unstable, and may change without notice. If you still want to experiment with them, you can use the GraphQL introspection to discover them."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"/typegate"}),"\n",(0,r.jsx)(t.li,{children:"/prisma-migration"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"The typegate nodes - or typegates - are the central components of the ecosystems. They build and type check typegraphs, and expose them through a HTTP/GraphQL interface. They enforce the type safety of the data flows, connect to all the runtimes and orchestrate the execution of incoming requests."}),"\n",(0,r.jsx)(t.h2,{id:"request-lifecycle",children:"Request lifecycle"}),"\n",(0,r.jsx)(t.p,{children:"When a new request fires a trigger, the typegate orchestrates the following stages:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"extract the secure request context from custom authentication or JSON Web Token (JWT)"}),"\n",(0,r.jsxs)(t.li,{children:["retrieve cached execution plan or compute a new one","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"traverse the typegraph to create a DAG of the required types"}),"\n",(0,r.jsx)(t.li,{children:"optimize the DAG to reduce the number of calls to the runtimes"}),"\n",(0,r.jsx)(t.li,{children:"pre-compute all structural elements and data resolutions"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["execute the plan","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"type check the arguments"}),"\n",(0,r.jsx)(t.li,{children:"verify lazily policies on the need"}),"\n",(0,r.jsx)(t.li,{children:"run the DAG execution"}),"\n",(0,r.jsx)(t.li,{children:"enforce the rate-limiting"}),"\n",(0,r.jsx)(t.li,{children:"type check the response"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"manage metadata of the request"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"httpgraphql-interface",children:"HTTP/GraphQL interface"}),"\n",(0,r.jsxs)(t.p,{children:["For now, the typegate nodes are only accessible through HTTP/1.1 and HTTP/2. More protocols could be supported in the future. Typegates expose a GraphQL interface which is the result of a ",(0,r.jsx)(t.a,{href:"./typegraph",children:"typegraph"})," projected onto corresponding GraphQL types. While this reduces the type safety of the data flowing, it makes more interoperable thanks to the many high-quality and well-known GraphQL tooling already available. The underlying types are also exposed in order for API clients to verify the underlying types."]}),"\n",(0,r.jsx)(t.p,{children:"GraphQL, being a query language, offers a great asset for Metatype's philosophy:"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsx)(t.li,{children:"Efficient querying: the client can specify exactly what data it needs, reducing the amount of over- or under-fetching"}),"\n",(0,r.jsx)(t.li,{children:"Flexibility: allows for retrieving multiple resources in a single request, unlike REST, which often requires multiple ones"}),"\n",(0,r.jsx)(t.li,{children:"Typing: GraphQL has a built-in type system that allows for better documentation and stronger validation of the requests"}),"\n",(0,r.jsx)(t.li,{children:"Improved tooling: tools and libraries around GraphQL are rapidly growing and great a development experience"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(t.h3,{id:"environment-variables",children:"Environment variables."}),"\n",(0,r.jsxs)(t.p,{children:["The following environment variables can be used to configure the typegate. ",(0,r.jsx)(t.code,{children:"SYNC_*"})," variables have special semantics which you can read about ",(0,r.jsx)(t.a,{href:"/docs/reference/typegate/synchronization",children:"here"}),"."]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Environment variables"}),(0,r.jsx)(t.th,{children:"Desc"}),(0,r.jsx)(t.th,{children:"Default"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"HOSTNAME"}),(0,r.jsx)(t.td,{children:"Hostname that typegate is deployed on."}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"getHostname()"})," result."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TG_PORT"}),(0,r.jsx)(t.td,{children:"Tcp port to serve typegate APIs at."}),(0,r.jsx)(t.td,{children:"7890"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TG_ADMIN_PASSWORD"}),(0,r.jsx)(t.td,{children:"Password use by the CLI/SDK to configure the typegate."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.strong,{children:"Required"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TG_SECRET"}),(0,r.jsx)(t.td,{children:"Symmetric key used to encrypt cookies and other things."}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.strong,{children:"Required"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TMP_DIR"}),(0,r.jsx)(t.td,{children:"Top-level temporary directory."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"$PWD/tmp"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DEBUG"}),(0,r.jsx)(t.td,{children:"Enable debug output and other development paths."}),(0,r.jsx)(t.td,{children:"false"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TIMER_MAX_TIMEOUT_MS"}),(0,r.jsx)(t.td,{children:"Timeout for custom runtime functions and other proccesses."}),(0,r.jsx)(t.td,{children:"3000"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TIMER_POLICY_EVAL_RETRIES"}),(0,r.jsx)(t.td,{children:"Number of retries when evaluating policies that have timed out"}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TIMER_DESTROY_RESOURCES"}),(0,r.jsx)(t.td,{children:"Force abort and attempt to restart operations that did not respond after multiple retries"}),(0,r.jsx)(t.td,{children:"true"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"JWT_MAX_DURATION_SEC"}),(0,r.jsx)(t.td,{children:"The lifetime of generated JWT access tokens."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"30 * 24 * 3600"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"JWT_REFRESH_DURATION_SEC"}),(0,r.jsx)(t.td,{children:"The lifetime of generated JWT refresh tokens."}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"5 * 60"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SENTRY_DSN"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SENTRY_SAMPLE_RATE"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SENTRY_TRACES_SAMPLE_RATE"}),(0,r.jsx)(t.td,{}),(0,r.jsx)(t.td,{children:"1"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TRUST_PROXY"}),(0,r.jsx)(t.td,{children:"Whether to accept proxy headers when resolving request contexts."}),(0,r.jsx)(t.td,{children:"false"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TRUST_HEADER_IP"}),(0,r.jsx)(t.td,{children:"The header key on which to resolve request origin addresses."}),(0,r.jsx)(t.td,{children:"X-Forwarded-For"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DENO_V8_FLAGS"}),(0,r.jsxs)(t.td,{children:["Flags for tuning the v8 javascript engine. Use the ",(0,r.jsx)(t.code,{children:"--help"})," flag here to see what options are available."]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_REDIS_URL"}),(0,r.jsx)(t.td,{children:"URL to the Redis database. Must include the database number."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_REDIS_PASSWORD"}),(0,r.jsx)(t.td,{children:"Redis database password, can be included in SYNC_REDIS_URL."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_S3_HOST"}),(0,r.jsx)(t.td,{children:"Hostname of the S3 store."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_S3_REGION"}),(0,r.jsx)(t.td,{children:"S3 region."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_S3_ACCESS_KEY"}),(0,r.jsx)(t.td,{children:"Access key for the S3 store credentials."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_S3_SECRET_KEY"}),(0,r.jsx)(t.td,{children:"Access key secret for the S3 store credentials."}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_S3_PATH_STYLE"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"true"})," or ",(0,r.jsx)(t.code,{children:"false"}),", force path style if ",(0,r.jsx)(t.code,{children:"true"}),"."]}),(0,r.jsx)(t.td,{})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SYNC_S3_BUCKET"}),(0,r.jsx)(t.td,{children:"The bucket to be used for the system (dedicated)."}),(0,r.jsx)(t.td,{})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},24554:(e,t,n)=>{n.d(t,{Ay:()=>T});var r=n(13274),s=n(99128),i=(n(79474),n(35285)),a=n(38986),d=new Map,l=new Map,c=!0,o=!1;function h(e){return e.replace(/[\s,]+/g," ").trim()}function p(e){var t=new Set,n=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var r=e.name.value,s=h((a=e.loc).source.body.substring(a.start,a.end)),i=l.get(r);i&&!i.has(s)?c&&console.warn("Warning: fragment with name "+r+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):i||l.set(r,i=new Set),i.add(s),t.has(s)||(t.add(s),n.push(e))}else n.push(e);var a})),(0,i.Cl)((0,i.Cl)({},e),{definitions:n})}function x(e){var t=h(e);if(!d.has(t)){var n=(0,a.qg)(e,{experimentalFragmentVariables:o,allowLegacyFragmentVariables:o});if(!n||"Document"!==n.kind)throw new Error("Not a valid GraphQL document.");d.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(n){var r=e[n];r&&"object"==typeof r&&t.add(r)}))}));var n=e.loc;return n&&(delete n.startToken,delete n.endToken),e}(p(n)))}return d.get(t)}function u(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];"string"==typeof e&&(e=[e]);var r=e[0];return t.forEach((function(t,n){t&&"Document"===t.kind?r+=t.loc.source.body:r+=t,r+=e[n+1]})),x(r)}var j,g=u,f=function(){d.clear(),l.clear()},m=function(){c=!1},y=function(){o=!0},b=function(){o=!1};(j=u||(u={})).gql=g,j.resetCaches=f,j.disableFragmentWarnings=m,j.enableExperimentalFragmentVariables=y,j.disableExperimentalFragmentVariables=b,u.default=u;n(84221);u`
  mutation docs($email: String!) {
    newsletterSignUp(email: $email) {
      id
    }
  }
`;function v(e){const t={a:"a",code:"code",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"This is the easiest way to get started, yet it's not publicly accessible. Signing up for the private beta will be available soon."}),"\n","\n","\n",(0,r.jsx)(t.h3,{id:"using-docker",children:"Using Docker"}),"\n",(0,r.jsxs)(t.p,{children:["Install ",(0,r.jsx)(t.a,{href:"https://docs.docker.com/get-docker/",children:"Docker"})," and use the following ",(0,r.jsx)(t.code,{children:"compose.yml"})," to launch a typegate node. For multi-instance production workloads, Redis and an S3 object store provider are required but the typegate will run using in-memory stores if no ",(0,r.jsx)(t.code,{children:"SYNC_*"})," environment variable is detected. More details can be found ",(0,r.jsx)(t.a,{href:"/docs/reference/typegate/synchronization",children:"here"}),". In practice you might also want to add a database or other systems that the typegate can connect to."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yml",children:'services:\n  typegate:\n    image: ghcr.io/metatypedev/typegate:latest\n    ports:\n      - "7890:7890"\n    extra_hosts:\n      - "host.docker.internal:host-gateway"\n    environment:\n      # only for dev, generate secure values for production\n      TG_SECRET: "a4lNi0PbEItlFZbus1oeH/+wyIxi9uH6TpL8AIqIaMBNvp7SESmuUBbfUwC0prxhGhZqHw8vMDYZAGMhSZ4fLw=="\n      TG_ADMIN_PASSWORD: password\n      DEBUG: "true"\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"# launch the containers\ndocker compose up --detach\n\n# watch the typegate logs\ndocker compose logs typegate --follow\n"})})]})}function T(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(v,{...e})}):v(e)}}}]);