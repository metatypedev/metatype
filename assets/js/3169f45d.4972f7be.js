"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9805],{41732:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(11527),s=n(88672);const i={},c="HTTP/REST",o={id:"reference/runtimes/http/index",title:"HTTP/REST",description:"The HTTPRuntime allows our typegraphs to access external REST APIs.",source:"@site/docs/reference/runtimes/http/index.mdx",sourceDirName:"reference/runtimes/http",slug:"/reference/runtimes/http/",permalink:"/docs/reference/runtimes/http/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/runtimes/http/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"GraphQL",permalink:"/docs/reference/runtimes/graphql/"},next:{title:"Prisma",permalink:"/docs/reference/runtimes/prisma/"}},a={},p=[];function u(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"httprest",children:"HTTP/REST"}),"\n",(0,r.jsx)(t.p,{children:"The HTTPRuntime allows our typegraphs to access external REST APIs."}),"\n",(0,r.jsx)(t.p,{children:"Example:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"from typegraph.runtime.http import HTTPRuntime\n\n# ..\n\nremote = HTTPRuntime('https://dev.to/api')\nremote.get(\n    '/test',\n    t.struct({}),\n    t.list(t.struct({'a': t.integer()})),\n)\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},88672:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>c});var r=n(50959);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);