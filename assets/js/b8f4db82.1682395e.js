"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4619],{59798:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var t=n(13274),o=n(99128),s=n(53279),i=n(56978);const a={},l="Temporal",c={id:"reference/runtimes/temporal/index",title:"Temporal",description:"Temporal runtime",source:"@site/docs/reference/runtimes/temporal/index.mdx",sourceDirName:"reference/runtimes/temporal",slug:"/reference/runtimes/temporal/",permalink:"/docs/reference/runtimes/temporal/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/runtimes/temporal/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"S3",permalink:"/docs/reference/runtimes/s3/"},next:{title:"Wasm",permalink:"/docs/reference/runtimes/wasm/"}},p={},m=[{value:"Temporal runtime",id:"temporal-runtime",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"temporal",children:"Temporal"}),"\n",(0,t.jsx)(r.h2,{id:"temporal-runtime",children:"Temporal runtime"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"https://temporal.io/",children:"Temporal"})," is an open-source durable execution engine that can be used to develop workflows that are long lived and failure resistant.\nCommon use cases include:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Implementing multi-step, complicated transactionaly business logic."}),"\n",(0,t.jsx)(r.li,{children:"Guaranteed event processing."}),"\n",(0,t.jsx)(r.li,{children:"Control planes for driving processes."}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"TemporalRuntime"})," in Metatype can be used to directly ",(0,t.jsx)(r.code,{children:"start"}),", ",(0,t.jsx)(r.code,{children:"query"}),", ",(0,t.jsx)(r.code,{children:"signal"})," and ",(0,t.jsx)(r.code,{children:"describe"})," workflows on your temporal cluster.\nRefer to the ",(0,t.jsx)(r.a,{href:"https://docs.temporal.io",children:"temporal docs"})," for more on what you can accomplish with this tech."]}),"\n",(0,t.jsx)(r.p,{children:"An interesting use case is to dynamically describe the operations you want to expose, this enables reusing typegraphs accross different projects or even building a small framework around it."}),"\n",(0,t.jsx)(r.p,{children:"Here is a simple example of a typegraph that takes some value from an environment variable."}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsx)(i.A,{value:"python",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'from typegraph import t, typegraph, Policy, Graph\nfrom typegraph.providers.temporal import TemporalRuntime\nimport os\n\n@typegraph()\ndef temporal(g: Graph):\n    public = Policy.public()\n    temporal = TemporalRuntime(\n        "<name>", "<host_secret>", namespace_secret="<ns_secret>"\n    )\n\n    workflow_id = os.getenv("ID_FROM_ENV")\n    arg = t.struct({"some_field": t.string()})\n\n    g.expose(\n        public,\n        start=temporal.start_workflow("<workflow_type>", arg),\n        query=temporal.query_workflow("<query_type>", arg, t.string()),\n        signal=temporal.signal_workflow("<signal_name>", arg),\n        describe=temporal.describe_workflow().reduce(\n            {"workflow_id": workflow_id }\n        ) if id else temporal.describe_workflow(),\n    )\n\n'})})}),(0,t.jsx)(i.A,{value:"typescript",children:(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-typescript",children:'import { Policy, t, typegraph } from "@typegraph/sdk/index.js";\nimport { TemporalRuntime } from "@typegraph/sdk/providers/temporal.js";\n\ntypegraph({ name: "temporal" }, (g) => {\n  const public = Policy.public();\n  const temporal = new TemporalRuntime({\n    name: "<name>",\n    hostSecret: "<host_secret>",\n    namespaceSecret: "<ns_secret>",\n  });\n\n  const workflow_id = process.env.ID_FROM_ENV;\n  const arg = t.struct({ some_field: t.string() });\n\n  g.expose({\n    start: temporal.startWorkflow("<workflow_type>", arg),\n    query: temporal.queryWorkflow("<query_type>", arg, t.string()),\n    signal: temporal.signalWorkflow("<signal_name>", arg),\n    describe: workflow_id\n      ? temporal.describeWorkflow().reduce({ workflow_id })\n      : temporal.describeWorkflow(),\n  }, public);\n});\n'})})})]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},53279:(e,r,n)=>{n.d(r,{A:()=>i});n(79474);var t=n(88244),o=n(50910),s=n(13274);function i(e){let{children:r}=e;const[n,i]=(0,t.e)();return(0,s.jsx)(o.m,{choices:{typescript:"Typescript SDK",python:"Python SDK"},choice:n,onChange:i,children:r})}}}]);