"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6941],{88156:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>d,default:()=>o,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var n=t(86070),i=t(25710);const r={},d="Synchronization",a={id:"reference/typegate/synchronization/index",title:"Synchronization",description:"The typegate run in either on of the following modes:",source:"@site/docs/reference/typegate/synchronization/index.mdx",sourceDirName:"reference/typegate/synchronization",slug:"/reference/typegate/synchronization/",permalink:"/docs/reference/typegate/synchronization/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/docs/metatype.dev/docs/reference/typegate/synchronization/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Requests",permalink:"/docs/reference/typegate/requests/"},next:{title:"Meta CLI",permalink:"/docs/reference/meta-cli/"}},c={},l=[{value:"System setup",id:"system-setup",level:2},{value:"Load balancer",id:"load-balancer",level:3},{value:"Redis database",id:"redis-database",level:3},{value:"S3 storage",id:"s3-storage",level:3},{value:"Typegate instances",id:"typegate-instances",level:3},{value:"Typegate configuration",id:"typegate-configuration",level:2},{value:"Synchronized mode features",id:"synchronized-mode-features",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"synchronization",children:"Synchronization"}),"\n",(0,n.jsx)(s.p,{children:"The typegate run in either on of the following modes:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.em,{children:"Single instance mode:"})," a single typegate instance runs all the workloads;"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.em,{children:"Synchronized mode:"})," the workloads can be shared accross multiple typegate instances."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"system-setup",children:"System setup"}),"\n",(0,n.jsx)(s.p,{children:"To enable multiple typegate instance support, the system need the following services:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Service"}),(0,n.jsx)(s.th,{children:"Role"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Load balancer"}),(0,n.jsx)(s.td,{children:"Share the loads accross the different typegate instances"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Redis database"}),(0,n.jsx)(s.td,{children:"Used for synchronization between typegate instances"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"S3 storage"}),(0,n.jsx)(s.td,{children:"Store all the shared files/artifacts for the typegate instances"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Typegate instances"}),(0,n.jsx)(s.td,{children:(0,n.jsx)(s.em,{children:"Obvious"})})]})]})]}),"\n",(0,n.jsx)("img",{src:"/images/system_setup.drawio.svg",alt:"System setup"}),"\n",(0,n.jsx)(s.h3,{id:"load-balancer",children:"Load balancer"}),"\n",(0,n.jsx)(s.p,{children:"The setup does not require a specific load balancer software/hardware. Any load balancer can do the job."}),"\n",(0,n.jsx)(s.h3,{id:"redis-database",children:"Redis database"}),"\n",(0,n.jsx)(s.p,{children:"A single redis instance can be shared by multiple systems, configured with different database numbers."}),"\n",(0,n.jsx)(s.h3,{id:"s3-storage",children:"S3 storage"}),"\n",(0,n.jsx)(s.p,{children:"Any S3-compatible object store is supported for the file/artifact storage."}),"\n",(0,n.jsx)(s.p,{children:"One S3 storage might be shared by multiple systems. However, each system must be configured to use its own dedicated bucket."}),"\n",(0,n.jsx)(s.h3,{id:"typegate-instances",children:"Typegate instances"}),"\n",(0,n.jsx)(s.p,{children:"The typegate instances are configured with environment variables. All the instances of the system must share the same value for the synchronization variables."}),"\n",(0,n.jsxs)(s.p,{children:["See ",(0,n.jsx)(s.a,{href:"#typegate-configuration",children:"configuration"})," for details."]}),"\n",(0,n.jsx)(s.h2,{id:"typegate-configuration",children:"Typegate configuration"}),"\n",(0,n.jsx)(s.p,{children:"The typegate instances that at the core of the system must share the configuration variables."}),"\n",(0,n.jsxs)(s.p,{children:["Synchronization variable names start with ",(0,n.jsx)(s.code,{children:"SYNC_"}),"."]}),"\n",(0,n.jsx)(s.admonition,{type:"warning",children:(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["If no ",(0,n.jsx)(s.code,{children:"SYNC_*"})," variable is present, the typegate will run in the default single instance mode."]}),"\n",(0,n.jsxs)(s.li,{children:["The typegate will fail to start if any of the ",(0,n.jsx)(s.code,{children:"SYNC_*"})," variables is present and some required ",(0,n.jsx)(s.code,{children:"SYNC_*"})," variable is missing."]}),"\n"]})}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Variable"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"REDIS_URL (_Required"}),")"]}),(0,n.jsx)(s.td,{children:"URL to the Redis database. Must include the database number."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"REDIS_PASSWORD (_Optional"}),")"]}),(0,n.jsx)(s.td,{children:"Redis database password, can be included in SYNC_REDIS_URL;"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"S3_HOST (_Required"}),")"]}),(0,n.jsx)(s.td,{children:"Hostname of the S3 store;"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"S3_REGION (_Required"}),")"]}),(0,n.jsx)(s.td,{children:"S3 region;"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"S3_ACCESS_KEY (_Required"}),")"]}),(0,n.jsx)(s.td,{children:"Access key for the S3 store credentials;"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"S3_SECRET_KEY (_Required"}),")"]}),(0,n.jsx)(s.td,{children:"Access key secret for the S3 store credentials;"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"S3_PATH_STYLE (_Optional"}),")"]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"true"})," or ",(0,n.jsx)(s.code,{children:"false"}),", force path style if ",(0,n.jsx)(s.code,{children:"true"}),"."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"S3_BUCKET (_Required"}),")"]}),(0,n.jsx)(s.td,{children:"The bucket to be used for the system (dedicated)."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsxs)(s.td,{children:["SYNC_",(0,n.jsx)(s.em,{children:"FORCE_REMOVE (_Optional"}),")"]}),(0,n.jsxs)(s.td,{children:[(0,n.jsx)(s.code,{children:"true"})," or ",(0,n.jsx)(s.code,{children:"false"}),", Undeploy cached typegraphs at boot"]})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"synchronized-mode-features",children:"Synchronized mode features"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Sharing typegraphs accross multiple typegate instances"}),"\n",(0,n.jsx)(s.li,{children:"History (WIP)"}),"\n"]})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);