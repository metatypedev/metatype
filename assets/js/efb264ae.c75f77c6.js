"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5356],{93790:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(11527),s=n(63883);const i={},c="Injections",o={id:"reference/types/injections",title:"Injections",description:"Raw",source:"@site/docs/reference/types/injections.mdx",sourceDirName:"reference/types",slug:"/reference/types/injections",permalink:"/docs/reference/types/injections",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/types/injections.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Importers",permalink:"/docs/reference/types/importers/"},next:{title:"Reducers",permalink:"/docs/reference/types/reducers"}},a={},d=[{value:"Raw",id:"raw",level:2},{value:"Parent",id:"parent",level:2},{value:"Context",id:"context",level:2},{value:"Secret",id:"secret",level:2}];function l(e){const t={admonition:"admonition",h1:"h1",h2:"h2",p:"p",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"injections",children:"Injections"}),"\n",(0,r.jsx)(t.h2,{id:"raw",children:"Raw"}),"\n",(0,r.jsx)(t.h2,{id:"parent",children:"Parent"}),"\n",(0,r.jsx)(t.admonition,{type:"caution",children:(0,r.jsx)(t.p,{children:"Only supported for scalars type inside a struct."})}),"\n",(0,r.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,r.jsx)(t.h2,{id:"secret",children:"Secret"})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);