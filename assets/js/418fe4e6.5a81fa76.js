"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9586],{17942:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(50959);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(n),h=a,m=u["".concat(s,".").concat(h)]||u[h]||y[h]||p;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,i=new Array(p);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:a,i[1]=o;for(var l=2;l<p;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6394:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>p,metadata:()=>o,toc:()=>l});var r=n(60795),a=(n(50959),n(17942));const p={sidebar_label:"types",title:"typegraph.types"},i=void 0,o={unversionedId:"reference/typegraph/python/typegraph/types",id:"reference/typegraph/python/typegraph/types",title:"typegraph.types",description:"number Objects",source:"@site/docs/reference/typegraph/python/typegraph/types.md",sourceDirName:"reference/typegraph/python/typegraph",slug:"/reference/typegraph/python/typegraph/types",permalink:"/docs/reference/typegraph/python/typegraph/types",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/typegraph/python/typegraph/types.md",tags:[],version:"current",frontMatter:{sidebar_label:"types",title:"typegraph.types"},sidebar:"docs",previous:{title:"wasmedge",permalink:"/docs/reference/typegraph/python/typegraph/runtimes/wasmedge"},next:{title:"sanitizers",permalink:"/docs/reference/typegraph/python/typegraph/utils/sanitizers"}},s={},l=[{value:"number Objects",id:"number-objects",level:2},{value:"integer Objects",id:"integer-objects",level:2},{value:"union Objects",id:"union-objects",level:2},{value:"either Objects",id:"either-objects",level:2}],c={toc:l},u="wrapper";function y(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"number-objects"},"number Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@with_constraints\n\n@frozen\nclass number(typedef)\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/type-system#tnumber"},(0,a.kt)("inlineCode",{parentName:"a"},"t.number()"))),(0,a.kt)("h2",{id:"integer-objects"},"integer Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@frozen\nclass integer(number)\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"/docs/reference/type-system#tinteger"},(0,a.kt)("inlineCode",{parentName:"a"},"t.integer()"))),(0,a.kt)("h2",{id:"union-objects"},"union Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@frozen\nclass union(typedef)\n")),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"union")," type represents a general union with the variants provided."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"union")," type is equivalent to the ",(0,a.kt)("inlineCode",{parentName:"p"},"anyOf")," field in JSON Schema where\nthe given data must be valid against one or more of the given subschemas."),(0,a.kt)("h2",{id:"either-objects"},"either Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@frozen\nclass either(typedef)\n")),(0,a.kt)("p",null,"An ",(0,a.kt)("inlineCode",{parentName:"p"},"either")," type represents a disjoint union with the variants provided."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"either")," type is equivalent to the ",(0,a.kt)("inlineCode",{parentName:"p"},"oneOf")," field in JSON Schema where\nthe given data must be valid against exactly one of the given subschemas."))}y.isMDXComponent=!0}}]);