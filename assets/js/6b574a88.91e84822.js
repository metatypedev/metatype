"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8494],{17942:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(50959);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||o;return r?n.createElement(d,c(c({ref:t},s),{},{components:r})):n.createElement(d,c({ref:t},s))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},50708:(e,t,r)=>{r.d(t,{ZP:()=>i});var n=r(52319),a=(r(50959),r(17942));const o={toc:[]},c="wrapper";function i(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"You can download the binary executable from\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/metatypedev/metatype/releases/"},"releases page")," on GitHub, make it\nexecutable and add it to your ",(0,a.kt)("inlineCode",{parentName:"p"},"$PATH")," or use the method below to automate those steps."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://raw.githubusercontent.com/metatypedev/metatype/main/installer.sh | bash\n\nmeta upgrade # to upgrade to the latest version\n")))}i.isMDXComponent=!0},3220:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var n=r(52319),a=(r(50959),r(17942)),o=r(50708);const c={},i="Meta CLI",l={unversionedId:"reference/meta-cli",id:"reference/meta-cli",title:"Meta CLI",description:"Meta-cli version",source:"@site/docs/reference/meta-cli.mdx",sourceDirName:"reference",slug:"/reference/meta-cli",permalink:"/docs/reference/meta-cli",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/meta-cli.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Type System",permalink:"/docs/reference/type-system"},next:{title:"Configuration file",permalink:"/docs/reference/meta-cli/configuration-file"}},p={},s=[],m={toc:s},u="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"meta-cli"},"Meta CLI"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/metatypedev/metatype/releases"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/v/release/metatypedev/metatype?include_prereleases&label=meta-cli",alt:"Meta-cli version"}))),(0,a.kt)(o.ZP,{mdxType:"InstallMetaCli"}))}f.isMDXComponent=!0}}]);