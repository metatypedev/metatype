"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[681],{3303:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var i=n(13274),s=n(99128);const r={},a="Configuration file",c={id:"reference/meta-cli/configuration-file",title:"Configuration file",description:"metatype.yml Example file",source:"@site/docs/reference/meta-cli/configuration-file.mdx",sourceDirName:"reference/meta-cli",slug:"/reference/meta-cli/configuration-file",permalink:"/docs/reference/meta-cli/configuration-file",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/reference/meta-cli/configuration-file.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Available commands",permalink:"/docs/reference/meta-cli/available-commands"},next:{title:"Meta LSP & extensions",permalink:"/docs/reference/meta-lsp/"}},o={},l=[{value:"<code>metatype.yml</code> Example file",id:"metatypeyml-example-file",level:2},{value:"Typegate configuration",id:"typegate-configuration",level:2},{value:"Named secrets",id:"named-secrets",level:3},{value:"Automatic secret loading support",id:"automatic-secret-loading-support",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"configuration-file",children:"Configuration file"}),"\n",(0,i.jsxs)(t.h2,{id:"metatypeyml-example-file",children:[(0,i.jsx)(t.code,{children:"metatype.yml"})," Example file"]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"metatype.yml"})," is a configuration file where we store environment variables, secrets and configs in which our app will use during deployment and runtime."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:'typegates:\n  dev:\n    url: http://localhost:7890\n    username: admin\n    password: password\n    secrets:\n      my-app:\n        POSTGRES_URL: postgres://user:password@localhost:5432/db?schema=public\n\ntypegraphs:\n  python:\n    include: "**/*.py"\n  materializers:\n    prisma:\n      migrations_path: "migrations"\n'})}),"\n",(0,i.jsx)(t.h2,{id:"typegate-configuration",children:"Typegate configuration"}),"\n",(0,i.jsxs)(t.p,{children:["Each typegate node is configured under ",(0,i.jsx)(t.code,{children:"typegates.<name>"}),".\nThe typegate node selection is done by the ",(0,i.jsx)(t.code,{children:"--target"})," option in the CLI."]}),"\n",(0,i.jsx)(t.h3,{id:"named-secrets",children:"Named secrets"}),"\n",(0,i.jsxs)(t.p,{children:["Named secrets are used to configure runtimes.\nTheir values are provided in the ",(0,i.jsx)(t.code,{children:"secrets"})," section of the configuration file\ndirectly or indirectly using ",(0,i.jsx)(t.a,{href:"https://github.com/zifeo/lade",children:"lade"}),".\nEach entry in the ",(0,i.jsx)(t.code,{children:"secrets"})," section is the set of secrets for a specific typegraph.\nThe typegraph name is the key of the entry and the value is an object mapping each secret name to its value or vault source (see ",(0,i.jsx)(t.a,{href:"#automatic-secret-loading-support",children:"next section"}),")."]}),"\n",(0,i.jsxs)(t.p,{children:["To sum up, each secret is defined in ",(0,i.jsx)(t.code,{children:"secrets.<typegraph-name>.<secret-name>.<secret-value-or-source>"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"automatic-secret-loading-support",children:"Automatic secret loading support"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://github.com/zifeo/lade",children:"Lade"})," is a secret loading tool that transparently inject environment variables from a variety of sources. It works with Fish, Bash or Zsh and currently supports Doppler, Infisical and 1Password as vault source."]}),"\n",(0,i.jsxs)(t.p,{children:["To use Lade with Metatype, you can use the ",(0,i.jsx)(t.code,{children:"op://"}),", ",(0,i.jsx)(t.code,{children:"infisical://"})," or ",(0,i.jsx)(t.code,{children:"doppler://"})," prefixes in your configuration file. It will then use the CLI of the vault to securely load the required secrets. For example:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"typegates:\n  dev:\n    url: http://localhost:7890\n    username: op://VAULT_NAME/SECRET_NAME/FIELD_NAME\n    password: infisical://app.infisical.com/PROJECT_NAME/ENV_NAME/SECRET_NAME\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);