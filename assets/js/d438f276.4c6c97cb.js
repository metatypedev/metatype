"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1929],{17942:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(50959);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),g=i,m=c["".concat(s,".").concat(g)]||c[g]||d[g]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},47043:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87366),i=(n(50959),n(17942));const a={},o="Contributing",l={unversionedId:"guides/contributing",id:"guides/contributing",title:"Contributing",description:"Prerequisites",source:"@site/docs/guides/contributing.md",sourceDirName:"guides",slug:"/guides/contributing",permalink:"/docs/guides/contributing",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/guides/contributing.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Authenticate your requests",permalink:"/docs/guides/authentication/"},next:{title:"Generate crud with prisma",permalink:"/docs/guides/crud-with-prisma/"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Essential packages for Linux / WSL",id:"essential-packages-for-linux--wsl",level:3},{value:"Getting started",id:"getting-started",level:2},{value:"Toolkit",id:"toolkit",level:3},{value:"Initiate workspace",id:"initiate-workspace",level:3},{value:"Testing",id:"testing",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"contributing"},"Contributing"),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("p",null,"Install:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/tools/install"},"Rust")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.python.org/downloads/"},"Python")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://pypa.github.io/pipx/installation/"},"pipx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://pnpm.io/installation"},"PNPM")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://deno.com/manual/getting_started/installation"},"Deno")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node"))),(0,i.kt)("h3",{id:"essential-packages-for-linux--wsl"},"Essential packages for Linux / WSL"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo apt install build-essential unzip pkg-config libssl-dev protobuf-compiler\n")),(0,i.kt)("h2",{id:"getting-started"},"Getting started"),(0,i.kt)("h3",{id:"toolkit"},"Toolkit"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# manage rust dependencies\ncargo install cargo-edit\n# task runner\ncargo install whiz\n# enforce style and good practice\npipx install pre-commit\n# maange python dependencies\npipx install poetry\n# generate Deno/Rust bindings\ndeno install -Afq -n deno_bindgen https://deno.land/x/deno_bindgen/cli.ts\n# wasm runtime\ncurl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash\n")),(0,i.kt)("h3",{id:"initiate-workspace"},"Initiate workspace"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# install git hooks\npre-commit install\n# prepare python virtual environment\npython3 -m venv .venv\nsource .venv/bin/activate # depends on your shell\n# run the task runner and it will install the remaining dependencies\nwhiz\n")),(0,i.kt)("h2",{id:"testing"},"Testing"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"deno run -A dev/env.ts all # or only the env required (e.g. base prisma s3)\ncargo test\ndeno run -A dev/test.ts\ncd typegraph/python && pytest -s\ndeno run -A dev/env.ts # shutdown all env\n")))}d.isMDXComponent=!0}}]);