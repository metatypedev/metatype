(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6530],{8281:(e,n,t)=>{"use strict";t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var s=t(11527),a=t(88672),l=(t(47550),t(31175));const i={sidebar_position:50},r="Upload files to cloud storage",o={id:"guides/files-upload/index",title:"Upload files to cloud storage",description:"Typegraph",source:"@site/docs/guides/files-upload/index.mdx",sourceDirName:"guides/files-upload",slug:"/guides/files-upload/",permalink:"/docs/guides/files-upload/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/guides/files-upload/index.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"docs",previous:{title:"Run serverless functions",permalink:"/docs/guides/external-functions/"},next:{title:"Write REST endpoints",permalink:"/docs/guides/rest/"}},d={},p=[{value:"Typegraph",id:"typegraph",level:2},{value:"Uploading file using presigned url",id:"uploading-file-using-presigned-url",level:2},{value:"Uploading file using GraphQL multipart request",id:"uploading-file-using-graphql-multipart-request",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"upload-files-to-cloud-storage",children:"Upload files to cloud storage"}),"\n",(0,s.jsx)(n.h2,{id:"typegraph",children:"Typegraph"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:"TG_RETREND_S3_HOST=http://localhost:9000\nTG_RETREND_S3_REGION=local\nTG_RETREND_S3_ACCESS_KEY=minio\nTG_RETREND_S3_SECRET_KEY=password\nTG_RETREND_S3_PATH_STYLE=true\n"})}),"\n",(0,s.jsx)(l.Z,{language:"python",children:t(66422).content}),"\n",(0,s.jsx)(n.h2,{id:"uploading-file-using-presigned-url",children:"Uploading file using presigned url"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const image = await Deno.readFile("website/static/images/logo.png");\n\n// Get a presigned url\nconst {\n  data: { signUploadUrl: presigned },\n} = await fetch("http://localhost:7891/retrend", {\n  method: "POST",\n  body: JSON.stringify({\n    query: `\n        query SignUploadUrl($length: Int) {\n            signUploadUrl(length: $length, path: "my-super-image.png")\n        }\n    `,\n    variables: {\n      length: image.length,\n    },\n  }),\n}).then((r) => r.json());\n\n// Upload the file\nconst upload = await fetch(presigned, {\n  method: "PUT",\n  body: image,\n  headers: {\n    "content-type": "image/png",\n    "content-length": image.length,\n  },\n});\n\nconsole.log(upload.status);\n'})}),"\n",(0,s.jsx)(n.h2,{id:"uploading-file-using-graphql-multipart-request",children:"Uploading file using GraphQL multipart request"}),"\n",(0,s.jsxs)(n.p,{children:["Metatype supports\n",(0,s.jsx)(n.a,{href:"https://github.com/jaydenseric/graphql-multipart-request-spec",children:"GraphQL multipart request"}),"\nfor uploading files.\nYou may use one of the clients in this\n",(0,s.jsx)(n.a,{href:"https://github.com/jaydenseric/graphql-multipart-request-spec#client",children:"list"}),"\nthat support GraphQL multipart request."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const image = await Deno.readFile("website/static/images/logo.png");\n\nconst formData = new FormData();\nformData.append(\n  "operations",\n  JSON.stringify({\n    query: `\n        mutation UploadImage($file: Upload!) {\n            upload(file: $file) {\n                id\n                path\n                size\n                contentType\n            }\n        }\n    `,\n    variables: {\n      file: null,\n    },\n  })\n);\nformData.append("map", JSON.stringify({ 0: ["variables.file"] }));\nformData.append("0", image, "logo.png");\n\nconst upload = await fetch("http://localhost:7891/retrend", {\n  method: "POST",\n  body: formData,\n});\nconsole.log(await upload.json());\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},73269:(e,n,t)=>{"use strict";t.d(n,{r:()=>a});t(50959);var s=t(11527);function a(e){let{name:n,choices:t,choice:a,onChange:l,className:i}=e;return(0,s.jsx)("ul",{className:`pl-0 m-0 list-none w-full ${i??""}`,children:Object.entries(t).map((e=>{let[t,i]=e;return(0,s.jsx)("li",{className:"inline-block rounded-md overflow-clip mr-1",children:(0,s.jsx)("div",{children:(0,s.jsxs)("label",{className:"cursor-pointer",children:[(0,s.jsx)("input",{type:"radio",name:n,value:t,checked:t===a,onChange:()=>l(t),className:"hidden peer"}),(0,s.jsx)("div",{className:"px-3 py-1 bg-slate-100 peer-checked:bg-metared peer-checked:text-white",children:i})]})})},t)}))})}},31572:(e,n,t)=>{"use strict";t.d(n,{Z:()=>y});var s=t(50959),a=t(73327),l=t(54143),i=t(22),r=t(31175),o=t(82142),d=t(23843),p=t(11527);const c=e=>{e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function u(e){const{queryEditor:n,variableEditor:t,headerEditor:a}=(0,d._i)({nonNull:!0}),[l,i]=(0,s.useState)(e.defaultTab),r=(0,d.Xd)({onCopyQuery:e.onCopyQuery}),o=(0,d.fE)();return(0,s.useEffect)((()=>{t&&c(t)}),[l,t]),(0,s.useEffect)((()=>{a&&c(a)}),[l,a]),(0,s.useEffect)((()=>{n&&(n.setOption("lineNumbers",!1),n.setOption("extraKeys",{"Alt-G":()=>{n.replaceSelection("@")}}),n.setOption("gutters",[]),n.on("change",c),c(n))}),[n]),(0,s.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("gutters",[]),t.on("change",c))}),[t]),(0,s.useEffect)((()=>{a&&(a.setOption("lineNumbers",!1),a.setOption("gutters",[]),a.on("change",c))}),[a]),(0,p.jsx)(d.u.Provider,{children:(0,p.jsxs)("div",{className:"graphiql-editors",children:[(0,p.jsx)("section",{className:"graphiql-query-editor shadow-sm","aria-label":"Query Editor",children:(0,p.jsxs)("div",{className:"graphiql-query-editor-wrapper",children:[(0,p.jsx)(d.WK,{editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly}),(0,p.jsxs)("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands",children:[(0,p.jsx)(d._8,{}),(0,p.jsx)(d.wC,{onClick:()=>o(),label:"Prettify query (Shift-Ctrl-P)",children:(0,p.jsx)(d.Kt,{className:"graphiql-toolbar-icon","aria-hidden":"true"})}),(0,p.jsx)(d.wC,{onClick:()=>r(),label:"Copy query (Shift-Ctrl-C)",children:(0,p.jsx)(d.TI,{className:"graphiql-toolbar-icon","aria-hidden":"true"})})]})]})}),e.noTool?null:(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("div",{className:"graphiql-editor-tools p-0 text-sm ",children:(0,p.jsxs)("div",{className:"graphiql-editor-tools-tabs",children:[(0,p.jsx)("div",{className:("variables"===l?"text-slate-800":"")+" p-2 hover:text-slate-800 cursor-pointer",onClick:()=>{i("variables"===l?"":"variables")},children:"Variables"}),(0,p.jsx)("div",{className:("headers"===l?"text-slate-800":"")+" p-2 hover:text-slate-800 cursor-pointer",onClick:()=>{i("headers"===l?"":"headers")},children:"Headers"})]})}),(0,p.jsxs)("section",{className:"graphiql-editor-tool "+(l&&l.length>0?"pt-0":"hidden p-0"),"aria-label":"variables"===l?"Variables":"Headers",children:[(0,p.jsx)(d.hF,{editorTheme:e.editorTheme,isHidden:"variables"!==l,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),(0,p.jsx)(d.LA,{editorTheme:e.editorTheme,isHidden:"headers"!==l,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})]})]})]})})}class h{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,n){this.map.has(e)||(this.length+=1),this.map.set(e,n)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}var g=t(73269);function m(){return(0,d.JB)({nonNull:!0}).isFetching?(0,p.jsx)(d.$j,{}):null}const f={typegraph:"Typegraph",playground:"Playground"};function x(e){let{typegraph:n,query:t,code:l,headers:c={},variables:x={},tab:y="",noTool:b=!1,defaultMode:j=null}=e;const{siteConfig:{customFields:{tgUrl:v}}}=(0,i.Z)(),N=(0,s.useMemo)((()=>new h),[]),E=(0,s.useMemo)((()=>(0,a.nq)({url:`${v}/${n}`})),[]),[T,S]=(0,s.useState)(j);return(0,p.jsxs)("div",{className:"@container miniql mb-5",children:[j?(0,p.jsx)(g.r,{name:"mode",choices:f,choice:T,onChange:S,className:"mb-2"}):null,(0,p.jsx)(d.j$,{fetcher:E,defaultQuery:t.loc?.source.body.trim(),defaultHeaders:JSON.stringify(c),shouldPersistHeaders:!0,variables:JSON.stringify(x),storage:N,children:(0,p.jsxs)("div",{className:(j?"":"md:grid @2xl:grid-cols-2")+" gap-2 w-full order-first",children:[j&&"typegraph"!==T?null:l?.map((e=>(0,p.jsxs)("div",{className:" bg-slate-100 rounded-lg flex flex-col mb-2 md:mb-0",children:[e?.codeFileUrl?(0,p.jsxs)("div",{className:"p-2 text-xs font-light",children:["See/edit full code on"," ",(0,p.jsx)(o.Z,{href:`https://github.com/metatypedev/metatype/blob/main/${e?.codeFileUrl}`,children:e?.codeFileUrl})]}):null,e?(0,p.jsx)(r.Z,{language:e?.codeLanguage,wrap:!0,className:"flex-1",children:e.content}):null]}))),j&&"playground"!==T?null:(0,p.jsxs)("div",{className:"flex flex-col graphiql-container",children:[(0,p.jsx)("div",{className:"flex-1 graphiql-session",children:(0,p.jsx)(u,{defaultTab:y,noTool:b})}),(0,p.jsxs)("div",{className:"flex-auto graphiql-response min-h-[200px] p-2 mt-2 bg-slate-100 rounded-lg",children:[(0,p.jsx)(m,{}),(0,p.jsx)(d.iB,{})]})]})]})})]})}function y(e){return(0,p.jsx)(l.Z,{fallback:(0,p.jsx)("div",{children:"Loading..."}),children:()=>(0,p.jsx)(x,{...e})})}},47550:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var s=t(31572),a=(t(50959),t(11527));function l(e){let{python:n,typescript:t,...l}=e;const i=[n&&{content:n.content,codeLanguage:"python",codeFileUrl:n.path},t&&{content:t.content,codeLanguage:"typescript",codeFileUrl:t.path}].filter((e=>!!e));return(0,a.jsx)(s.Z,{code:0==i.length?void 0:i,...l})}},66422:e=>{e.exports={content:'from typegraph import typegraph, Policy, t, Graph\nfrom typegraph.providers.aws import S3Runtime\n\n\n@typegraph()\ndef retrend(g: Graph):\n  public = Policy.public()\n\n  s3 = S3Runtime(\n    "S3_HOST",\n    "S3_REGION",\n    "S3_ACCESS_KEY",\n    "S3_SECRET_KEY",\n    path_style_secret="S3_PATH_STYLE",\n  )\n\n  g.expose(\n    listObjects=s3.list("bucket"),\n    getDownloadUrl=s3.presign_get("bucket"),\n    signUploadUrl=s3.presign_put("bucket"),\n    upload=s3.upload(\n      "bucket", t.file(allow=["image/png", "image/jpeg"])\n    ),\n    uploadMany=s3.upload_all("bucket"),\n    default_policy=[public],\n  )',path:"examples/typegraphs/files-upload.py"}}}]);