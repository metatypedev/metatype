(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9238],{17942:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>u,kt:()=>h});var a=n(50959);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(h,l(l({ref:t},u),{},{components:n})):a.createElement(h,l({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},43726:(e,t,n)=>{"use strict";n.d(t,{r:()=>r});var a=n(50959);function r(e){let{name:t,choices:n,choice:r,onChange:o,className:l}=e;return a.createElement("ul",{className:`pl-0 m-0 list-none w-full ${l??""}`},Object.entries(n).map((e=>{let[n,l]=e;return a.createElement("li",{key:n,className:"inline-block rounded-md overflow-clip mr-1"},a.createElement("div",null,a.createElement("label",{className:"cursor-pointer"},a.createElement("input",{type:"radio",name:t,value:n,checked:n===r,onChange:()=>o(n),className:"hidden peer"}),a.createElement("div",{className:"px-3 py-1 bg-slate-100 peer-checked:bg-metared peer-checked:text-white"},l))))})))}},66360:(e,t,n)=>{"use strict";n.d(t,{Z:()=>g});var a=n(50959),r=n(55362),o=n(90430),l=n(85551),i=n(90116),s=n(14623);const c=e=>{e.getWrapperElement().closest(".graphiql-editor").style.height=`${e.doc.height}px`};function u(e){const{queryEditor:t,variableEditor:n,headerEditor:r}=(0,s._i)({nonNull:!0}),[o,l]=(0,a.useState)(e.defaultTab),i=(0,s.Xd)({onCopyQuery:e.onCopyQuery}),u=(0,s.fE)();return(0,a.useEffect)((()=>{n&&c(n)}),[o,n]),(0,a.useEffect)((()=>{r&&c(r)}),[o,r]),(0,a.useEffect)((()=>{t&&(t.setOption("lineNumbers",!1),t.setOption("extraKeys",{"Alt-G":()=>{t.replaceSelection("@")}}),t.setOption("gutters",[]),t.on("change",c),c(t))}),[t]),(0,a.useEffect)((()=>{n&&(n.setOption("lineNumbers",!1),n.setOption("gutters",[]),n.on("change",c))}),[n]),(0,a.useEffect)((()=>{r&&(r.setOption("lineNumbers",!1),r.setOption("gutters",[]),r.on("change",c))}),[r]),a.createElement(s.u.Provider,null,a.createElement("div",{className:"graphiql-editors"},a.createElement("section",{className:"graphiql-query-editor shadow-sm","aria-label":"Query Editor"},a.createElement("div",{className:"graphiql-query-editor-wrapper"},a.createElement(s.WK,{editorTheme:e.editorTheme,keyMap:e.keyMap,onCopyQuery:e.onCopyQuery,onEdit:e.onEditQuery,readOnly:e.readOnly}),a.createElement("div",{className:"graphiql-toolbar",role:"toolbar","aria-label":"Editor Commands"},a.createElement(s._8,null),a.createElement(s.wC,{onClick:()=>u(),label:"Prettify query (Shift-Ctrl-P)"},a.createElement(s.Kt,{className:"graphiql-toolbar-icon","aria-hidden":"true"})),a.createElement(s.wC,{onClick:()=>i(),label:"Copy query (Shift-Ctrl-C)"},a.createElement(s.TI,{className:"graphiql-toolbar-icon","aria-hidden":"true"}))))),e.noTool?null:a.createElement(a.Fragment,null,a.createElement("div",{className:"graphiql-editor-tools p-0 text-sm "},a.createElement("div",{className:"graphiql-editor-tools-tabs"},a.createElement("div",{className:("variables"===o?"text-slate-800":"")+" p-2 hover:text-slate-800 cursor-pointer",onClick:()=>{l("variables"===o?"":"variables")}},"Variables"),a.createElement("div",{className:("headers"===o?"text-slate-800":"")+" p-2 hover:text-slate-800 cursor-pointer",onClick:()=>{l("headers"===o?"":"headers")}},"Headers"))),a.createElement("section",{className:"graphiql-editor-tool "+(o&&o.length>0?"pt-0":"hidden p-0"),"aria-label":"variables"===o?"Variables":"Headers"},a.createElement(s.hF,{editorTheme:e.editorTheme,isHidden:"variables"!==o,keyMap:e.keyMap,onEdit:e.onEditVariables,readOnly:e.readOnly}),a.createElement(s.LA,{editorTheme:e.editorTheme,isHidden:"headers"!==o,keyMap:e.keyMap,onEdit:e.onEditHeaders,readOnly:e.readOnly})))))}class p{constructor(){this.map=new Map,this.length=0}getItem(e){return this.map.get(e)}setItem(e,t){this.map.has(e)||(this.length+=1),this.map.set(e,t)}removeItem(e){this.map.has(e)&&(this.length-=1),this.map.delete(e)}clear(){this.length=0,this.map.clear()}}var d=n(43726);function m(){return(0,s.JB)({nonNull:!0}).isFetching?a.createElement(s.$j,null):null}const h={typegraph:"Typegraph",playground:"Playground"};function f(e){let{typegraph:t,query:n,code:o,codeLanguage:c,codeFileUrl:f,headers:g={},variables:y={},tab:b="",noTool:E=!1,defaultMode:v=null}=e;const{siteConfig:{customFields:{tgUrl:x}}}=(0,l.Z)(),k=(0,a.useMemo)((()=>new p),[]),O=(0,a.useMemo)((()=>(0,r.nq)({url:`${x}/${t}`})),[]),[N,w]=(0,a.useState)(v);return a.createElement("div",{className:"@container miniql mb-5"},v?a.createElement(d.r,{name:"mode",choices:h,choice:N,onChange:w,className:"mb-2"}):null,a.createElement(s.j$,{fetcher:O,defaultQuery:n.loc?.source.body.trim(),defaultHeaders:JSON.stringify(g),shouldPersistHeaders:!0,variables:JSON.stringify(y),storage:k},a.createElement("div",{className:(v?"":"md:grid @2xl:grid-cols-2")+" gap-2 w-full order-first"},v&&"typegraph"!==N?null:a.createElement("div",{className:" bg-slate-100 rounded-lg flex flex-col mb-2 md:mb-0"},f?a.createElement("div",{className:"p-2 text-xs font-light"},"See/edit full code on"," ",a.createElement("a",{href:`https://github.com/metatypedev/metatype/blob/main/${f}`},f)):null,o?a.createElement(i.Z,{language:c,wrap:!0,className:"flex-1"},o):null),v&&"playground"!==N?null:a.createElement("div",{className:"flex flex-col graphiql-container"},a.createElement("div",{className:"flex-1 graphiql-session"},a.createElement(u,{defaultTab:b,noTool:E})),a.createElement("div",{className:"flex-auto graphiql-response min-h-[200px] p-2 mt-2 bg-slate-100 rounded-lg"},a.createElement(m,null),a.createElement(s.iB,null))))))}function g(e){return a.createElement(o.Z,{fallback:a.createElement("div",null,"Loading...")},(()=>a.createElement(f,e)))}},31645:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var a=n(28957),r=n(66360),o=n(50959);function l(e){let{python:t,...n}=e;return o.createElement(r.Z,(0,a.Z)({code:t.content,codeLanguage:"python",codeFileUrl:t.path},n))}},67843:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var a=n(28957),r=(n(50959),n(17942)),o=n(90116);n(31645);const l={sidebar_position:7},i="Your chat app",s={unversionedId:"tutorials/your-chat-app/index",id:"tutorials/your-chat-app/index",title:"Your chat app",description:"Back to your typegraph for the chat-based app. You learn all keys components, and it's time to implement the business logic.",source:"@site/docs/tutorials/your-chat-app/index.mdx",sourceDirName:"tutorials/your-chat-app",slug:"/tutorials/your-chat-app/",permalink:"/docs/tutorials/your-chat-app/",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/tutorials/your-chat-app/index.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docs",previous:{title:"Policies and materializers",permalink:"/docs/tutorials/policies-and-materializers/"},next:{title:"Authenticate your requests",permalink:"/docs/guides/authentication/"}},c={},u=[{value:"External typescript function",id:"external-typescript-function",level:2},{value:"Connecting the pieces together",id:"connecting-the-pieces-together",level:2}],p={toc:u},d="wrapper";function m(e){let{components:t,...l}=e;return(0,r.kt)(d,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"your-chat-app"},"Your chat app"),(0,r.kt)("p",null,"Back to your typegraph for the chat-based app. You learn all keys components, and it's time to implement the business logic."),(0,r.kt)("h2",{id:"external-typescript-function"},"External typescript function"),(0,r.kt)("p",null,"The Deno runtime can register external files for longer functions. You can use the meta CLI to generate the types once the ",(0,r.kt)("inlineCode",{parentName:"p"},"ModuleMat")," has been defined in your typegraph: ",(0,r.kt)("inlineCode",{parentName:"p"},"meta codegen deno -f typegraph.py"),"."),(0,r.kt)("p",null,"The external function offers three arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the first one is the arguments received as input"),(0,r.kt)("li",{parentName:"ul"},"the second one contains additional information about the request, including the context of the user"),(0,r.kt)("li",{parentName:"ul"},"the last one offers helpers functions to make authenticated calls to the same typegraph")),(0,r.kt)(o.Z,{language:"typescript",mdxType:"CodeBlock"},n(19578).content),(0,r.kt)("h2",{id:"connecting-the-pieces-together"},"Connecting the pieces together"),(0,r.kt)("p",null,"Take the learning of the last sections and use at your advantage the internal policies allowing to made calls within the Deno runtime and keeping the same context."),(0,r.kt)("p",null,"That's it, you just developed chat-based API for your app - simple for sure, but covering most of the feature of Metatype."))}m.isMDXComponent=!0},19578:e=>{e.exports={content:'// Copyright Metatype O\xdc, licensed under the Elastic License 2.0.\n// SPDX-License-Identifier: Elastic-2.0\n\n\nimport * as emoji from "https://deno.land/x/emoji@0.2.1/mod.ts";\n\ninterface ISend {\n  title: string;\n}\n\nexport default async function (\n  { title }: ISend,\n  { context },\n  { gql },\n): Promise<boolean> {\n  const text = `New message: ${title} from ${context.user.name} ${\n    emoji("coffee")\n  }`;\n\n  const messageQuery = gql`\n    mutation db($title: String!, $user_id: Int!) {\n      create_message(data: {title: $title, user_id: $user_id}) {\n        id\n      }\n    }\n  `;\n  const message = await messageQuery(\n    { title: text, user_id: context.user.id },\n  );\n  console.log(`created message ${message.data.db.create_message.id}`);\n\n  const notifQuery = gql`\n    mutation fcm {\n      send_notification\n    }\n  `;\n  const notif = await notifQuery();\n\n  console.log(`created notif ${notif.data.fcm.send_notification}`);\n  return true;\n}',path:"website/docs/tutorials/your-chat-app/scripts/deno/business-logic.ts"}}}]);