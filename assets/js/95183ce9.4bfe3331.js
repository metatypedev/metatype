"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6574],{18601:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>l,toc:()=>g});var r=t(86070),o=t(25710),p=t(92465),a=t(51510);const i={},s="Programmatic deployment",l={id:"guides/programmatic-deployment/index",title:"Programmatic deployment",description:"The SDKs are complete enough to enable deploying typegraphs without using meta cli, the later being built as a convenience tool for everyday use.",source:"@site/docs/guides/programmatic-deployment/index.mdx",sourceDirName:"guides/programmatic-deployment",slug:"/guides/programmatic-deployment/",permalink:"/docs/guides/programmatic-deployment/",draft:!1,unlisted:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/guides/programmatic-deployment/index.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Importing External Modules",permalink:"/docs/guides/import-external-modules/"},next:{title:"Types",permalink:"/docs/reference/types/"}},c={},g=[{value:"Deploy typegraphs",id:"deploy-typegraphs",level:2},{value:"Undeploy typegraphs",id:"undeploy-typegraphs",level:2}];function h(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"programmatic-deployment",children:"Programmatic deployment"}),"\n",(0,r.jsxs)(n.p,{children:["The SDKs are complete enough to enable deploying typegraphs without using ",(0,r.jsx)(n.a,{href:"/docs/reference/meta-cli",children:"meta cli"}),", the later being built as a convenience tool for everyday use."]}),"\n",(0,r.jsx)(n.p,{children:"Common use cases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Testing"}),"\n",(0,r.jsx)(n.li,{children:"Manage everything programmatically"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"deploy-typegraphs",children:"Deploy typegraphs"}),"\n",(0,r.jsxs)(n.p,{children:["This can be done using the ",(0,r.jsx)(n.code,{children:"tgDeploy"}),"/",(0,r.jsx)(n.code,{children:"tg_deploy"})," function.",(0,r.jsx)(n.br,{}),"\n","You are required to provide the configurations and also handle migrations by yourself (if any)."]}),"\n",(0,r.jsxs)(p.Ay,{children:[(0,r.jsx)(a.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import os\nfrom os import path\n\nfrom typegraph.gen.exports.core import MigrationAction\nfrom typegraph.graph.shared_types import BasicAuth\nfrom typegraph.graph.tg_deploy import (\n    TypegraphDeployParams,\n    tg_deploy,\n    TypegateConnectionOptions,\n)\nfrom typegraph.runtimes.deno import DenoRuntime\n\nfrom typegraph import Graph, Policy, t, typegraph\n\n# Your typegraph\n\n@typegraph()\ndef example(g: Graph):\n    deno = DenoRuntime()\n    pub = Policy.public()\n\n    g.expose(\n        pub,\n        sayHello=deno.import_(\n            t.struct({"name": t.string()}),\n            t.string(),\n            module="path/to/say_hello.ts",\n            name="sayHello",\n        ),\n    )\n\n# Configure your deployment\n\ndef deploy():\n    cwd = os.getcwd()\n\n    config: TypegraphDeployParams = TypegraphDeployParams(\n            typegate=TypegateConnectionOptions(\n                url="<TYPEGATE_URL>",\n                auth=BasicAuth("<USERNAME>", "<PASSWORD>")\n            ),\n            typegraph_path=os.path.join(cwd, "path/to/typegraph"),\n            prefix="<prefix>",\n            secrets={},\n            migrations_dir=path.join("prisma-migrations", example.name),\n            migration_actions=None,\n            default_migration_action=MigrationAction(\n                apply=True,\n                reset=True, # allow destructive migrations\n                create=True\n            ),\n        ),\n\n    # Deploy to typegate\n    result = tg_deploy(example, config) # pass your typegraph function name\n    return result\n\nres = deploy()\n'})})}),(0,r.jsx)(a.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'import { Policy, t, typegraph } from "@typegraph/sdk/index.js";\nimport { DenoRuntime } from "@typegraph/sdk/runtimes/deno.js";\nimport * as path from "path";\n\nimport { wit_utils } from "@typegraph/sdk/wit.js";\nimport { BasicAuth, tgDeploy } from "@typegraph/sdk/tg_deploy.js";\n\n// Your typegraph\nconst tg = await typegraph("example", (g) => {\n  const deno = new DenoRuntime();\n  const pub = Policy.public();\n\n  g.expose(\n    {\n      sayHello: deno.import(t.struct({ name: t.string() }), t.string(), {\n        module: "path/to/say_hello.ts",\n        name: "sayHello",\n      }),\n    },\n    pub,\n  );\n});\n\n// Configure your deployment\n\nconst config = {\n  typegate: {\n    url: "<TYPEGATE_URL>",\n    auth: new BasicAuth("<USERNAME>", "<PASSWORD>"),\n  },\n  typegraphPath: "<absolute/path/to/typegraph>",\n  prefix: "<prefx>",\n  secrets: {},\n  migrationsDir: path.join("prisma-migrations", tg.name),\n  defaultMigrationAction: {\n    create: true,\n    reset: true, // allow destructive migrations\n  },\n};\n\n// Deploy to typegate\nconst deployResult = await tgDeploy(tg, config);\n'})})})]}),"\n",(0,r.jsx)(n.h2,{id:"undeploy-typegraphs",children:"Undeploy typegraphs"}),"\n",(0,r.jsxs)(n.p,{children:["Similarly to the above, you can undeploy typegraphs using the ",(0,r.jsx)(n.code,{children:"tgRemove"}),"/",(0,r.jsx)(n.code,{children:"tg_remove"})," function."]}),"\n",(0,r.jsxs)(p.Ay,{children:[(0,r.jsx)(a.A,{value:"python",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# ..\nfrom typegraph.graph.tg_deploy import (\n    TypegateConnectionOptions,\n    TypegraphDeployParams,\n    TypegraphRemoveParams,\n    tg_remove,\n)\n\n# Your typegraph\n\n@typegraph()\ndef example(g: Graph):\n    # ..\n\ndef remove():\n    result = tg_remove(\n        example,\n        params=TypegraphRemoveParams(\n            typegate=TypegateConnectionOptions(\n                url = "<TYPEGATE_URL>",\n                auth = BasicAuth("<USERNAME>", "<PASSWORD>")\n            )\n        )\n    )\n\n    return result\n\nres = remove()\n\n# Response from typegate\n\nprint(res.typegate)\n\n'})})}),(0,r.jsx)(a.A,{value:"typescript",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'// ..\nimport { BasicAuth, tgRemove } from "@typegraph/sdk/tg_deploy.js";\n\n// Your typegraph\nconst tg = await typegraph("example", (g) => {\n  // ..\n});\n\nconst { typegate } = await tgRemove(tg, {\n  url: "<TYPEGATE_URL>",\n  auth: new BasicAuth("<USERNAME>", "<PASSWORD>"),\n});\n\n// Response from typegate\nconsole.log(typegate);\n'})})})]})]})}function y(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},92465:(e,n,t)=>{t.d(n,{Ay:()=>a,gc:()=>i});t(30758);var r=t(53096),o=t(43236),p=t(86070);function a(e){let{children:n}=e;const[t,a]=(0,r.e)();return(0,p.jsx)(o.mS,{choices:{typescript:"Typescript SDK",python:"Python SDK"},choice:t,onChange:a,children:n})}function i(e){let{children:n}=e;const[t]=(0,r.e)();return(0,p.jsx)(o.q9,{choices:{typescript:"Typescript SDK",python:"Python SDK"},choice:t,children:n})}}}]);