"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[866],{24612:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/06/18/programmable-glue","metadata":{"permalink":"/blog/2023/06/18/programmable-glue","editUrl":"https://github.com/metatypedev/metatype/tree/main/website/blog/2023-06-18-programmable-glue/index.mdx","source":"@site/blog/2023-06-18-programmable-glue/index.mdx","title":"Introducing Metatype: programmable glue for developers","description":"Have you ever found yourself spending countless hours on low-value added tasks when building APIs? Are you struggling to keep up with business needs while remaining innovative with technology? If so, then Metatype might just be the approach you\'ve been waiting for.","date":"2023-06-18T00:00:00.000Z","formattedDate":"June 18, 2023","tags":[],"readingTime":1.3,"hasTruncateMarker":false,"authors":[],"frontMatter":{}},"content":"import { CompareLandscape } from \\"../../src/components/CompareLandscape\\";\\nimport Metatype from \\"../../shared/metatype-intro.mdx\\";\\n\\n\\nHave you ever found yourself spending countless hours on low-value added tasks when building APIs? Are you struggling to keep up with business needs while remaining innovative with technology? If so, then Metatype might just be the approach you\'ve been waiting for.\\n\\n## What is Metatype?\\n\\n<Metatype />\\n\\n## What are virtual graphs?\\n\\nTypegraphs are a declarative way to expose all APIs, storage and business logic of your stack as a single graph. They take inspiration from domain-driven design principles and in the idea that the relation between of the data is as important as data itself, even though they might be in different locations or shapes.\\n\\nThese elements can then be combined and composed together similarly on how you would compose web components to create an interface in modern frontend practices. This allows developers to build modular and strongly typed APIs using typegraph as a programmable glue.\\n\\n## Where does this belong in the tech landscape?\\n\\nBefore Metatype, there was a gap in the technological landscape for a solution that specifically addressed the transactional, short-lived use cases. While there were existing tools for analytical or long-running use cases, such as Trino and Temporal, there was no generic engine for handling transactional, short-lived tasks.\\n\\n<CompareLandscape />\\n\\n## Give it a try!\\n\\nLet us know what you think! Metatype is open source and we welcome any feedback or contributions. The community primarily lives on [GitHub](https://github.com/metatypedev/metatype).\\n\\n:::info Next steps\\n\\n[Build your first typegraph](/docs/tutorials/getting-started) or read more about the [concepts behind Metatype](/docs/concepts/overview).\\n\\n:::"}]}')}}]);