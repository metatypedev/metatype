"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2996],{33624:(e,t,a)=>{a.d(t,{ZP:()=>l});var n=a(87366),o=(a(50959),a(17942));const r={toc:[]},s="wrapper";function l(e){let{components:t,...a}=e;return(0,o.kt)(s,(0,n.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can download the binary executable from\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/metatypedev/metatype/releases/"},"releases page")," on GitHub, make it\nexecutable and add it to your ",(0,o.kt)("inlineCode",{parentName:"p"},"$PATH")," or use\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/zyedidia/eget"},"eget")," to automate those steps."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# make sure $HOME/.local/bin/ is in $PATH or choose another directory\neget metatypedev/metatype --to $HOME/.local/bin\n\nmeta --help\nmeta upgrade # to upgrade to the latest version\n")))}l.isMDXComponent=!0},3850:(e,t,a)=>{a.d(t,{ZP:()=>l});var n=a(87366),o=(a(50959),a(17942));const r={toc:[]},s="wrapper";function l(e){let{components:t,...a}=e;return(0,o.kt)(s,(0,n.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'meta new your-folder\ncd your-folder\ndocker compose up --detach\n\ncurl -X POST http://localhost:7890/typegate \\\n  -H \'Authorization: Basic YWRtaW46cGFzc3dvcmQ=\' \\ # base64 encoded "admin:password"\n  --data \'{"query":"query list { typegraphs { name } }"}\'\n')))}l.isMDXComponent=!0},29841:(e,t,a)=>{a.d(t,{ZP:()=>l});var n=a(87366),o=(a(50959),a(17942));const r={toc:[]},s="wrapper";function l(e){let{components:t,...a}=e;return(0,o.kt)(s,(0,n.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Create (and activate) the virtual environment (a local folder where you install the dependency of a project) for your project. Then install the ",(0,o.kt)("inlineCode",{parentName:"p"},"typegraph")," package from PyPi using pip."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python3 -m venv .venv\nsource .venv/bin/activate\npip3 install typegraph --upgrade\n\nmeta doctor # to check version\n")))}l.isMDXComponent=!0},6038:(e,t,a)=>{a.d(t,{ZP:()=>l});var n=a(87366),o=(a(50959),a(17942));const r={toc:[]},s="wrapper";function l(e){let{components:t,...a}=e;return(0,o.kt)(s,(0,n.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Metatype is an open source platform for developers to ",(0,o.kt)("strong",{parentName:"p"},"declaratively build APIs"),". It offers a unique approach to building backends, where the focus is all on data modelling and the platform takes care of the rest."),(0,o.kt)("p",null,"The intent is to find a convenient computing model that tackles the following challenges:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"most developers still spend too much time on tasks with low-value (crud, data validation, compliance, etc.)"),(0,o.kt)("li",{parentName:"ul"},"when growing a product, it is hard to keep up with business needs and remain innovative with technology"),(0,o.kt)("li",{parentName:"ul"},"managing server and infrastructure shall never be a concern for developers nor slow them down")),(0,o.kt)("p",null,"In that respect, Metatype can be seen as an alternative to Hasura, Strapi, Firebase, or even web frameworks like Django or NestJS. You can see how Metatype differs reading the ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/overview"},"conceptual overview")," or the ",(0,o.kt)("a",{parentName:"p",href:"/docs/concepts/comparisons"},"comparison summary"),"."),(0,o.kt)("p",null,"The platform consists of the following components:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/typegraph"},(0,o.kt)("strong",{parentName:"a"},"Typegraph")),": a package to describe typegraphs - virtual graphs of types - and compose them"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/typegate"},(0,o.kt)("strong",{parentName:"a"},"Typegate")),": a distributed REST/GraphQL query engine to execute queries over typegraphs"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/concepts/meta-cli"},(0,o.kt)("strong",{parentName:"a"},"Meta CLI")),": a command-line tool to provide great developer experience and serverless deployment")),(0,o.kt)("p",null,"A vast range of ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/runtimes"},"runtimes")," is implemented by the platform and provides out of the box support for storing data in databases/S3, connecting to third-party/internal APIs and running business logic in Deno/Python/WebAssembly."))}l.isMDXComponent=!0},30472:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>w,contentTitle:()=>f,default:()=>M,frontMatter:()=>v,metadata:()=>b,toc:()=>N});var n=a(87366),o=a(50959),r=a(17942),s=a(76756),l=a(35594),i=a(65523),p=a(33291),d=a(92042),c=a(58111);const u=i.Ps`
  mutation docs($email: String!) {
    newsletterSignUp(email: $email) {
      id
    }
  }
`;function m(){const[e,t]=(0,o.useState)(""),[a,n]=(0,o.useState)(null),r=function(e){const{siteConfig:{customFields:{tgUrl:t}}}=(0,c.Z)();return(0,o.useMemo)((()=>new p.f({uri:`${t}/${e}`,cache:new d.h})),[t])}("docs");return a||o.createElement("form",{onSubmit:async t=>{if(t.preventDefault(),e.length>0){const{data:t}=await r.mutate({mutation:u,variables:{email:e}});n(t?.newsletterSignUp?.id?"Success!":"Already subscribed!")}},className:"inline-block rounded-lg overflow-clip"},o.createElement("input",{type:"email",className:"px-2 py-2 font-sans bg-slate-100 border-none text-base",value:e,onChange:e=>t(e.target.value)}),o.createElement("input",{type:"submit",className:"py-2 px-2 border-none cursor-pointer text-base bg-slate-500 text-white",value:"Submit"}))}var h=a(6038),g=a(33624),k=a(3850),y=a(29841);const v={sidebar_position:1},f="Getting started",b={unversionedId:"tutorials/getting-started",id:"tutorials/getting-started",title:"Getting started",description:"Head over to the conceptual overview to understand the components.",source:"@site/docs/tutorials/getting-started.mdx",sourceDirName:"tutorials",slug:"/tutorials/getting-started",permalink:"/docs/tutorials/getting-started",draft:!1,editUrl:"https://github.com/metatypedev/metatype/tree/main/website/docs/tutorials/getting-started.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",next:{title:"Your first typegraph",permalink:"/docs/tutorials/your-first-typegraph/"}},w={},N=[{value:"Introduction",id:"introduction",level:2},{value:"Quickstart with Metatype Cloud",id:"quickstart-with-metatype-cloud",level:2},{value:"Quickstart with Docker",id:"quickstart-with-docker",level:2},{value:"1. Meta CLI",id:"1-meta-cli",level:3},{value:"2. Typegraph package",id:"2-typegraph-package",level:3},{value:"3. Typegate node",id:"3-typegate-node",level:3}],T={toc:N},x="wrapper";function M(e){let{components:t,...a}=e;return(0,r.kt)(x,(0,n.Z)({},T,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting started"),(0,r.kt)(h.ZP,{mdxType:"Metatype"}),(0,r.kt)("admonition",{title:"Looking first for some explanation?",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Head over to the ",(0,r.kt)("a",{parentName:"p",href:"/docs/concepts/overview"},"conceptual overview")," to understand the components.")),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"In this tutorial, you will write your first typegraph and deploy it on a typegate node using the Meta CLI.\nYou will design some APIs for a chat-based app where users can exchange messages."),(0,r.kt)("p",null,"Running the ecosystem requires Python >=3.8 which should be available on most of the recent OS."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Python >=3.8 not yet installed? Follow these steps."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"linux",label:"Debian-based Linux",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install python3 python3-pip python3-venv\n"))),(0,r.kt)(l.Z,{value:"macos",label:"MacOS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install python3\n"))),(0,r.kt)(l.Z,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,r.kt)("p",null,"Download the ",(0,r.kt)("a",{parentName:"p",href:"https://www.python.org/downloads/windows/"},"Python installer")," from the official website and follow the installation steps."))),(0,r.kt)("p",null,"Then verify that you have a version higher than 3.8:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python --version # or python3 --version\n# Python 3.8.16\n"))),(0,r.kt)("admonition",{title:"No previous Python knowledge required.",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"While the definition of typegraphs is currently done in Python, it doesn't require previous experience writing Python.\nThe tutorial covers all the basics and doesn't use advanced features of the language.")),(0,r.kt)("h2",{id:"quickstart-with-metatype-cloud"},"Quickstart with Metatype Cloud"),(0,r.kt)("p",null,"This is the easiest way to get started, yet it's not publicly accessible. You can sign-up for the private beta below."),(0,r.kt)(m,{mdxType:"Newsletter"}),(0,r.kt)("h2",{id:"quickstart-with-docker"},"Quickstart with Docker"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Docker not yet installed? Follow these steps."),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"linux",label:"Debian-based Linux",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"curl -fsSL https://get.docker.com -o get-docker.sh\nsudo sh get-docker.sh\n"))),(0,r.kt)(l.Z,{value:"macos",label:"MacOS",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"softwareupdate --install-rosetta # if you're on an Apple Silicon\nbrew install docker\n"))),(0,r.kt)(l.Z,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,r.kt)("p",null,"Download the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/install/windows-install/"},"Docker installer")," from the official website and follow the installation steps.")))),(0,r.kt)("h3",{id:"1-meta-cli"},"1. Meta CLI"),(0,r.kt)(g.ZP,{mdxType:"InstallMetaCli"}),(0,r.kt)("h3",{id:"2-typegraph-package"},"2. Typegraph package"),(0,r.kt)(y.ZP,{mdxType:"InstallTypegraph"}),(0,r.kt)("h3",{id:"3-typegate-node"},"3. Typegate node"),(0,r.kt)("p",null,"Finally, download and launch the docker-compose manifest running a typegate node, a Redis instance (this is the sole dependency of the typegate) and a Postgres instance to store the app's messages."),(0,r.kt)(k.ZP,{mdxType:"InstallTypegate"}),(0,r.kt)("p",null,"And go the next section."),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Alternative installation from source"),(0,r.kt)("p",null,"Alternatively, you can install directly the ",(0,r.kt)("inlineCode",{parentName:"p"},"typegraph")," package and the CLI from the GitHub repository (useful to check out unreleased features)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pip3 install --upgrade git+https://github.com/metatypedev/metatype#subdirectory=typegraph\ncargo install --force meta-cli --git https://github.com/metatypedev/metatype --locked\n"))))}M.isMDXComponent=!0}}]);