---
source: src/typegraph/core/src/runtimes/prisma/type_generation/mod.rs
expression: tp.print(inp)
---
root: struct #62
├─ [data]: struct '_Record_UpdateInput' #22
│  ├─ [age]: optional 'optional_18' #18
│  │  └─ item: union #17
│  │     ├─ variant_0: optional 'optional_5' #5
│  │     │  └─ item: integer #4
│  │     ├─ variant_1: struct #13
│  │     │  └─ [set]: optional 'optional_5' #5
│  │     │     └─ item: integer #4
│  │     ├─ variant_2: struct #14
│  │     │  └─ [multiply]: integer #4
│  │     ├─ variant_3: struct #15
│  │     │  └─ [decrement]: integer #4
│  │     └─ variant_4: struct #16
│  │        └─ [increment]: integer #4
│  ├─ [created_at]: optional 'optional_21' #21
│  │  └─ item: union #20
│  │     ├─ variant_0: string #1
│  │     └─ variant_1: struct #19
│  │        └─ [set]: string #1
│  ├─ [id]: optional 'optional_9' #9
│  │  └─ item: union #8
│  │     ├─ variant_0: string #2
│  │     └─ variant_1: struct #7
│  │        └─ [set]: string #2
│  └─ [name]: optional 'optional_12' #12
│     └─ item: union #11
│        ├─ variant_0: string #3
│        └─ variant_1: struct #10
│           └─ [set]: string #3
└─ [where]: optional 'optional_61' #61
   └─ item: struct 'QueryRecordWhereInput' #60
      ├─ [AND]: optional 'optional_58' #58
      │  └─ item: list 'list_57' #57
      │     └─ item: &QueryRecordWhereInput #56
      ├─ [NOT]: optional 'optional_59' #59
      │  └─ item: &QueryRecordWhereInput #56
      ├─ [OR]: optional 'optional_58' #58
      │  └─ item: list 'list_57' #57
      │     └─ item: &QueryRecordWhereInput #56
      ├─ [age]: optional 'optional_53' #53
      │  └─ item: optional '_integer_filter_c' #52
      │     └─ item: union #51
      │        ├─ variant_0: either '_integer_filter' #49
      │        │  ├─ variant_0: integer #41
      │        │  ├─ variant_1: struct #44
      │        │  │  └─ [equals]: integer #41
      │        │  ├─ variant_2: struct #45
      │        │  │  └─ [not]: integer #41
      │        │  ├─ variant_3: struct #46
      │        │  │  ├─ [gt]: optional 'optional_42' #42
      │        │  │  │  └─ item: integer #41
      │        │  │  ├─ [gte]: optional 'optional_42' #42
      │        │  │  │  └─ item: integer #41
      │        │  │  ├─ [lt]: optional 'optional_42' #42
      │        │  │  │  └─ item: integer #41
      │        │  │  └─ [lte]: optional 'optional_42' #42
      │        │  │     └─ item: integer #41
      │        │  ├─ variant_4: struct #47
      │        │  │  └─ [in]: list 'list_43' #43
      │        │  │     └─ item: integer #41
      │        │  └─ variant_5: struct #48
      │        │     └─ [notIn]: list 'list_43' #43
      │        │        └─ item: integer #41
      │        └─ variant_1: struct #50
      │           └─ [not]: either '_integer_filter' #49
      │              ├─ variant_0: integer #41
      │              ├─ variant_1: struct #44
      │              │  └─ [equals]: integer #41
      │              ├─ variant_2: struct #45
      │              │  └─ [not]: integer #41
      │              ├─ variant_3: struct #46
      │              │  ├─ [gt]: optional 'optional_42' #42
      │              │  │  └─ item: integer #41
      │              │  ├─ [gte]: optional 'optional_42' #42
      │              │  │  └─ item: integer #41
      │              │  ├─ [lt]: optional 'optional_42' #42
      │              │  │  └─ item: integer #41
      │              │  └─ [lte]: optional 'optional_42' #42
      │              │     └─ item: integer #41
      │              ├─ variant_4: struct #47
      │              │  └─ [in]: list 'list_43' #43
      │              │     └─ item: integer #41
      │              └─ variant_5: struct #48
      │                 └─ [notIn]: list 'list_43' #43
      │                    └─ item: integer #41
      ├─ [created_at]: optional 'optional_54' #54
      │  └─ item: optional '_string_filter_c' #38
      │     └─ item: union #37
      │        ├─ variant_0: union '_string_filter' #35
      │        │  ├─ variant_0: string #23
      │        │  ├─ variant_1: struct #26
      │        │  │  └─ [equals]: string #23
      │        │  ├─ variant_2: struct #27
      │        │  │  └─ [not]: string #23
      │        │  ├─ variant_3: struct #28
      │        │  │  └─ [in]: list 'list_25' #25
      │        │  │     └─ item: string #23
      │        │  ├─ variant_4: struct #29
      │        │  │  └─ [notIn]: list 'list_25' #25
      │        │  │     └─ item: string #23
      │        │  ├─ variant_5: struct #32
      │        │  │  ├─ [contains]: string #23
      │        │  │  └─ [mode]: optional 'optional_31' #31
      │        │  │     └─ item: string #30 enum{ '"insensitive"' }
      │        │  ├─ variant_6: struct #33
      │        │  │  └─ [search]: string #23
      │        │  └─ variant_7: struct #34
      │        │     ├─ [endsWith]: optional 'optional_24' #24
      │        │     │  └─ item: string #23
      │        │     └─ [startsWith]: optional 'optional_24' #24
      │        │        └─ item: string #23
      │        └─ variant_1: struct #36
      │           └─ [not]: union '_string_filter' #35
      │              ├─ variant_0: string #23
      │              ├─ variant_1: struct #26
      │              │  └─ [equals]: string #23
      │              ├─ variant_2: struct #27
      │              │  └─ [not]: string #23
      │              ├─ variant_3: struct #28
      │              │  └─ [in]: list 'list_25' #25
      │              │     └─ item: string #23
      │              ├─ variant_4: struct #29
      │              │  └─ [notIn]: list 'list_25' #25
      │              │     └─ item: string #23
      │              ├─ variant_5: struct #32
      │              │  ├─ [contains]: string #23
      │              │  └─ [mode]: optional 'optional_31' #31
      │              │     └─ item: string #30 enum{ '"insensitive"' }
      │              ├─ variant_6: struct #33
      │              │  └─ [search]: string #23
      │              └─ variant_7: struct #34
      │                 ├─ [endsWith]: optional 'optional_24' #24
      │                 │  └─ item: string #23
      │                 └─ [startsWith]: optional 'optional_24' #24
      │                    └─ item: string #23
      ├─ [id]: optional 'optional_39' #39
      │  └─ item: optional '_string_filter_c' #38
      │     └─ item: union #37
      │        ├─ variant_0: union '_string_filter' #35
      │        │  ├─ variant_0: string #23
      │        │  ├─ variant_1: struct #26
      │        │  │  └─ [equals]: string #23
      │        │  ├─ variant_2: struct #27
      │        │  │  └─ [not]: string #23
      │        │  ├─ variant_3: struct #28
      │        │  │  └─ [in]: list 'list_25' #25
      │        │  │     └─ item: string #23
      │        │  ├─ variant_4: struct #29
      │        │  │  └─ [notIn]: list 'list_25' #25
      │        │  │     └─ item: string #23
      │        │  ├─ variant_5: struct #32
      │        │  │  ├─ [contains]: string #23
      │        │  │  └─ [mode]: optional 'optional_31' #31
      │        │  │     └─ item: string #30 enum{ '"insensitive"' }
      │        │  ├─ variant_6: struct #33
      │        │  │  └─ [search]: string #23
      │        │  └─ variant_7: struct #34
      │        │     ├─ [endsWith]: optional 'optional_24' #24
      │        │     │  └─ item: string #23
      │        │     └─ [startsWith]: optional 'optional_24' #24
      │        │        └─ item: string #23
      │        └─ variant_1: struct #36
      │           └─ [not]: union '_string_filter' #35
      │              ├─ variant_0: string #23
      │              ├─ variant_1: struct #26
      │              │  └─ [equals]: string #23
      │              ├─ variant_2: struct #27
      │              │  └─ [not]: string #23
      │              ├─ variant_3: struct #28
      │              │  └─ [in]: list 'list_25' #25
      │              │     └─ item: string #23
      │              ├─ variant_4: struct #29
      │              │  └─ [notIn]: list 'list_25' #25
      │              │     └─ item: string #23
      │              ├─ variant_5: struct #32
      │              │  ├─ [contains]: string #23
      │              │  └─ [mode]: optional 'optional_31' #31
      │              │     └─ item: string #30 enum{ '"insensitive"' }
      │              ├─ variant_6: struct #33
      │              │  └─ [search]: string #23
      │              └─ variant_7: struct #34
      │                 ├─ [endsWith]: optional 'optional_24' #24
      │                 │  └─ item: string #23
      │                 └─ [startsWith]: optional 'optional_24' #24
      │                    └─ item: string #23
      └─ [name]: optional 'optional_40' #40
         └─ item: optional '_string_filter_c' #38
            └─ item: union #37
               ├─ variant_0: union '_string_filter' #35
               │  ├─ variant_0: string #23
               │  ├─ variant_1: struct #26
               │  │  └─ [equals]: string #23
               │  ├─ variant_2: struct #27
               │  │  └─ [not]: string #23
               │  ├─ variant_3: struct #28
               │  │  └─ [in]: list 'list_25' #25
               │  │     └─ item: string #23
               │  ├─ variant_4: struct #29
               │  │  └─ [notIn]: list 'list_25' #25
               │  │     └─ item: string #23
               │  ├─ variant_5: struct #32
               │  │  ├─ [contains]: string #23
               │  │  └─ [mode]: optional 'optional_31' #31
               │  │     └─ item: string #30 enum{ '"insensitive"' }
               │  ├─ variant_6: struct #33
               │  │  └─ [search]: string #23
               │  └─ variant_7: struct #34
               │     ├─ [endsWith]: optional 'optional_24' #24
               │     │  └─ item: string #23
               │     └─ [startsWith]: optional 'optional_24' #24
               │        └─ item: string #23
               └─ variant_1: struct #36
                  └─ [not]: union '_string_filter' #35
                     ├─ variant_0: string #23
                     ├─ variant_1: struct #26
                     │  └─ [equals]: string #23
                     ├─ variant_2: struct #27
                     │  └─ [not]: string #23
                     ├─ variant_3: struct #28
                     │  └─ [in]: list 'list_25' #25
                     │     └─ item: string #23
                     ├─ variant_4: struct #29
                     │  └─ [notIn]: list 'list_25' #25
                     │     └─ item: string #23
                     ├─ variant_5: struct #32
                     │  ├─ [contains]: string #23
                     │  └─ [mode]: optional 'optional_31' #31
                     │     └─ item: string #30 enum{ '"insensitive"' }
                     ├─ variant_6: struct #33
                     │  └─ [search]: string #23
                     └─ variant_7: struct #34
                        ├─ [endsWith]: optional 'optional_24' #24
                        │  └─ item: string #23
                        └─ [startsWith]: optional 'optional_24' #24
                           └─ item: string #23
