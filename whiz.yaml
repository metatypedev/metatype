env:
    TYPEGRAPH_VERSION: "0.0.1"

meta:
    workdir: .
    watch:
        - "meta-cli/src/**/*.rs"
    command: "cargo run -p meta-cli -- --help"
    depends_on:
        - libs

examples:
    workdir: .
    watch:
        - "examples/metatype.yaml"
    command: "cargo run -p meta-cli -- -C examples dev"
    env:
        VIRTUAL_ENV: $PWD/examples/.venv
        PATH: $PWD/examples/.venv/bin:$PATH
    depends_on:
        - meta

system_graphs:
    workdir: typegate
    watch: src/typegraphs/*.py
    command: "./serialize-tgs.sh"
    depends_on:
        - meta

typegate1:
    workdir: typegate
    watch: "src/**/*.ts"
    env:
        TG_PORT: "7891"
        PACKAGED: "false"
        REQUEST_LOG: "tg1"
    env_file:
        - ../examples/.env.sample
        - ../website/.env.sample
        - .env.sample
    command: "./run.sh"
    depends_on:
        - clean_deno_bindgen_cache
        - typegate_native

typegate2:
    workdir: typegate
    watch: "src/**/*.ts"
    env:
        TG_PORT: "7892"
        PACKAGED: "false"
        REQUEST_LOG: "tg2"
    env_file:
        - ../examples/.env.sample
        - ../website/.env.sample
        - .env.sample
    command: "./run.sh"
    depends_on:
        - clean_deno_bindgen_cache
        - typegate_native

libs:
    workdir: libs
    watch:
        - common/**/*.rs
        - typescript/**/*.rs
    command: "cargo build -p common -p typescript"

codegen:
    depends_on:
        - libs
    workdir: .
    watch:
        - "libs/xtask/src/**/*.rs"
    env:
        TG_JSONSCHEMA_OUT: website/static/specs/$TYPEGRAPH_VERSION.json
        TG_TYPESCRIPT_OUT: typegate/src/types/typegraph.ts
    command: "cargo run --package xtask -- codegen"

clean_deno_bindgen_cache:
    command: rm -rfv $(deno info --json | jq -r .denoDir)/plug/file
    depends_on:
        - typegate_native

typegate_native:
    watch:
        - "typegate/native/src/**/*.rs"
    env:
        OUT_DIR: "target"
    command: "deno_bindgen -- -p native"
    depends_on:
        - libs

website_deps:
    workdir: website
    watch: "package.json"
    command: "pnpm install"

website:
    workdir: website
    command: "pnpm start --no-open"
    env:
        TG_URL: http://localhost:7890
    depends_on:
        - website_deps

website_meta:
    workdir: .
    watch:
        - "meta-cli/src/**/*.rs"
        - "website/**/*.py"
        - "typegate/src/**/*.ts"
    command: "cargo run -p meta-cli -- -C website dev -u admin -p password --port 5001"
    env:
        VIRTUAL_ENV: $PWD/examples/.venv
        PATH: $PWD/examples/.venv/bin:$PATH
    depends_on:
        - meta

website_pydoc:
    workdir: website
    watch: "../typegraph/typegraph/**/*.py"
    command: "pydoc-markdown"
