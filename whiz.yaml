env:
  TYPEGRAPH_VERSION: "0.0.1"

meta:
  watch:
    - "meta-cli/src/**/*.rs"
    - "typegraph/python/typegraph/**/*.py"
  command: "cargo run --color always -p meta-cli -- -C examples dev"
  env:
    VIRTUAL_ENV: $PWD/examples/.venv
    PATH: $PWD/examples/.venv/bin:$PATH
    CLICOLOR_FORCE: "1"
  depends_on:
    - libs

typegate1: &tp
  workdir: typegate
  watch: "src/**/*.ts"
  env: &tpenv
    TG_PORT: "7891"
    PACKAGED: "false"
    LOG_LEVEL: "DEBUG"
    DYLD_LIBRARY_PATH: "$HOME/.wasmedge/lib:$DYLD_LIBRARY_PATH"
    LD_LIBRARY_PATH: "$HOME/.wasmedge/lib:$LD_LIBRARY_PATH"
    DEBUG: "true"
    REDIS_URL: "redis://:password@localhost:6379/0"
    TG_SECRET: "a4lNi0PbEItlFZbus1oeH/+wyIxi9uH6TpL8AIqIaMBNvp7SESmuUBbfUwC0prxhGhZqHw8vMDYZAGMhSZ4fLw=="
    TG_ADMIN_PASSWORD: "password"
  # https://github.com/denoland/deno/issues/18445
  # command: "deno task run"
  command: "deno run --config=deno.json --unstable --allow-run=hostname --allow-sys --allow-env --allow-hrtime --allow-write=tmp --allow-ffi --allow-read=.  --allow-net --v8-flags=--stack_size=2000 src/main.ts"
  depends_on:
    - typegate_native
  pipe:
    "^.+DEBUG http .*$": whiz://http

typegate2:
  <<: *tp
  env:
    <<: *tpenv
    TG_PORT: "7892"

http:
  command: ""

system_graphs:
  watch:
    - typegate/src/typegraphs/*.py
    - typegraph/**/*.py
  command: "deno run -A dev/serialize.ts"
  depends_on:
    - libs

libs:
  workdir: libs
  watch:
    - common/**/*.rs
    - typescript/**/*.rs
    - macros/**/*.rs
  command: "cargo build -p common -p typescript -p macros"

codegen:
  workdir: .
  watch:
    - "libs/xtask/src/**/*.rs"
  env:
    TG_JSONSCHEMA_OUT: website/static/specs/$TYPEGRAPH_VERSION.json
    TG_TYPESCRIPT_OUT: typegate/src/types/typegraph.ts
  command: "cargo run --package xtask -- codegen"
  depends_on:
    - libs

typegate_native:
  watch:
    - "typegate/native/src/**/*.rs"
  env:
    OUT_DIR: "target"
  command: |
    rm -rfv $(deno info --json | jq -r .denoDir)/plug/file native/bindings.json
    deno_bindgen -- -p native -F deno
  depends_on:
    - libs

typegraph:
  watch:
    - "typegraph/core/src/**/*.rs"
    - "typegraph/core/**/*.wit"
  command: |
    set -e
    rm -rf typegraph/deno/gen
    cargo build -p typegraph_core --target wasm32-unknown-unknown -F wasm
    wasm-tools component new target/wasm32-unknown-unknown/debug/typegraph_core.wasm -o target/debug/typegraph_core.wasm
    jco transpile target/debug/typegraph_core.wasm -o typegraph/deno/gen --no-nodejs-compat --map print=../src/imports.ts

website:
  workdir: website
  command: "pnpm start --no-open"
  env:
    TG_URL: http://localhost:7890
  depends_on:
    - install

website_meta:
  workdir: .
  watch:
    - "meta-cli/src/**/*.rs"
    - "typegate/src/**/*.ts"
  command: "cargo run --color always -p meta-cli -- -C website dev"
  #command: "cargo run -p meta-cli -- -C website deploy --allow-dirty --gate http://localhost:7890 --username admin --password password"
  env:
    VIRTUAL_ENV: $PWD/examples/.venv
    PATH: $PWD/examples/.venv/bin:$PATH

website_docgen:
  workdir: website
  watch:
    - "../typegraph/**/*.py"
  command: |
    pydoc-markdown
    npx docusaurus docs:generate:graphql:typegate
    npx docusaurus docs:generate:graphql:prisma-migration
    npx docusaurus docs:generate:changelog
  depends_on:
    - typegate_native

install:
  workdir: .
  watch:
    - typegraph/python/pyproject.toml
    - website/package.json
  command: |
    set -e
    [ -d .venv ] || python3 -m venv .venv
    cd typegraph/python
    poetry install
    cd ../..
    cd website
    pnpm install
    cd ..
